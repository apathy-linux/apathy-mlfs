# Toolchain: GCC-8.2.0
# This section is done in Chroot environment

tar -xf ../isl-0.19.tar.bz2
mv -v isl-0.19 isl

# Apply patches from Void-Linux
patch -Np0 -i ../gcc-8.2.0-void-0016-invalid_tls_model.diff
patch -Np0 -i ../gcc-8.2.0-void-fix-cxxflags-passing.patch
patch -Np0 -i ../gcc-8.2.0-void-fix-musl-execinfo.patch
patch -Np0 -i ../gcc-8.2.0-void-no-stack_chk_fail_local.patch

# Change default from lib64 to lib
sed -i '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64
sed -i 's/lib64/lib/' gcc/config/i386/linux64.h

sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" {gcc,libiberty}/configure

mkdir -v build && cd build
SED=sed  libat_cv_have_ifunc=no       \
../configure --prefix=/usr            \
             --build=x86_64-linux-musl \
             --with-system-zlib       \
             --with-isl \
             --with-linker-hash-style=gnu \
             --enable-languages=c,c++ \
             --enable-shared \
             --enable-threads=posix \
             --enable-__cxa_atexit \
             --enable-c99 \
             --enable-long-long \
             --enable-clocale=generic \
             --enable-languages=c,c++ \
             --enable-plugins \
             --enable-tls \
             --enable-lto \
             --enable-libstdcxx-time \
             --enable-checking=release \
             --enable-fully-dynamic-string \
             --enable-default-pie \
             --enable-default-ssp \
             --enable-vtable-verify \
             --enable-linker-build-id \
             --enable-fast-character \
             --disable-libstdcxx-pch \
             --disable-nls \
             --disable-multilib       \
             --disable-bootstrap      \
             --disable-symvers \
             --disable-gnu-indirect-function \
             --disable-libmudflap \
             --disable-libsanitizer \
             --disable-target-libiberty \
             --disable-libunwind-exceptions \
             --disable-libmpx  

make

# Test GCC:
ulimit -s 32768
# Remove one test known to cause a problem
rm ../gcc/testsuite/g++.dg/pr83239.C
# Test the results as a non-privileged user, but do not stop at errors
chown -Rv nobody . 
su nobody -s /bin/bash -c "PATH=$PATH make -k check"
# To receive a summary of the test suite results, run:
../contrib/test_summary
# Or, For only the summaries, pipe the output through grep -A7 Summ"
../contrib/test_summary | grep -A7 Summ

make install

ln -sv ../usr/bin/cpp /lib
ln -sv gcc /usr/bin/cc
install -v -dm755 /usr/lib/bfd-plugins
ln -sfv ../../libexec/gcc/$(gcc -dumpmachine)/8.2.0/liblto_plugin.so \
        /usr/lib/bfd-plugins/
mkdir -pv /usr/share/gdb/auto-load/usr/lib
mv -v /usr/lib/*gdb.py /usr/share/gdb/auto-load/usr/lib

# Modify specsfile:
# First dump current specfile to a file
SPECFILE=`dirname $(gcc -print-libgcc-file-name)`/specs
gcc -dumpspecs > specs
# Modify specs file to match this:
# *cpp:
# %{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT} -I /usr/lib/gcc/x86_64-linux-musl/8.2.0/include -I /usr/lib/gcc/x86_64-linux-musl/8.2.0/include-fixed
# Install new specs file:
cp -v specs $SPECFILE
unset SPECFILE

# Test final system's toolchain:
echo 'int main(){}' > dummy.c
cc dummy.c -v -Wl,--verbose &> dummy.log
readelf -l a.out | grep ': /lib'
# Should output:
# [Requesting program interpreter: /lib/ld-musl-x86_64.so.1]
grep  'crt[1in].o succeeded' dummy.log
# Should output:
# attempt to open /usr/lib/gcc/x86_64-linux-musl/8.2.0/../../../../lib/Scrt1.o succeeded
# attempt to open /usr/lib/gcc/x86_64-linux-musl/8.2.0/../../../../lib/crti.o succeeded
# attempt to open /usr/lib/gcc/x86_64-linux-musl/8.2.0/../../../../lib/crtn.o succeeded
grep -B2 '^ /usr/lib/gcc' dummy.log
# Should output:
# #include <...> search starts here:
# /usr/lib/gcc/x86_64-linux-musl/8.2.0/include-fixed
# /usr/local/include
# /usr/include
# /usr/lib/gcc/x86_64-linux-musl/8.2.0/include
grep 'SEARCH.*/usr/lib' dummy.log |sed 's|; |\n|g'
# Should output:
# SEARCH_DIR("/usr/x86_64-pc-linux-musl/lib64")
# SEARCH_DIR("/usr/local/lib64")
# SEARCH_DIR("/lib64")
# SEARCH_DIR("/usr/lib64")
# SEARCH_DIR("/usr/x86_64-pc-linux-musl/lib")
# SEARCH_DIR("/usr/local/lib")
# SEARCH_DIR("/lib")
# SEARCH_DIR("/usr/lib");

# If all is well, remove test files:
rm -v dummy.c a.out dummy.log
