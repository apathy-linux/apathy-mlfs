# Tool Chain: Adjust Tool Chain
# Edit as mlfs

# Adjust Linker
mv -v /tools/bin/{ld,ld-old}
mv -v /tools/$(${MLFS_TARGET}-gcc -dumpmachine)/bin/{ld,ld-old}
mv -v /tools/bin/{ld-new,ld}
ln -sv /tools/bin/ld /tools/$(${MLFS_TARGET}-gcc -dumpmachine)/bin/ld

# Dump gcc specs
SPECFILE=`dirname $(${MLFS_TARGET}-gcc -print-libgcc-file-name)`/specs &&
${MLFS_TARGET}-gcc -dumpspecs > tempspecfile

# modify file for every instance of /lib/ld-musl-i386.so.1 to /tools/lib/ld-musl-i386.so.1
mv -vf tempspecfile $SPECFILE &&
unset SPECFILE

# May not be needed:
#GCC_INCLUDEDIR=`dirname $(${MLFS_TARGET}-gcc -print-libgcc-file-name)`/include &&
#find ${GCC_INCLUDEDIR}/* -maxdepth 0 -xtype d -exec rm -rvf '{}' \; &&
#rm -vf `grep -l "DO NOT EDIT THIS FILE" ${GCC_INCLUDEDIR}/*` &&
#unset GCC_INCLUDEDIR

# OPTIONAL: Test
# Check basic functions (compiling and linking) of the new toolchain are working as 
# expected. To perform a sanity check, run the following commands: 
echo 'int main(){}' > dummy.c
${MLFS_TARGET}-gcc -B/tools/lib dummy.c
readelf -l a.out | grep ': /tools'

# If everything is working correctly, there should be no errors, and the output of 
# the last command will be of the form: 
# [Requesting program interpreter: /tools/lib/ld-musl-i386.so.1]

# Clean up after testing
rm -v dummy.c a.out
