diff -uNr perl-5.26.1.orig/Makefile perl-5.26.1/Makefile
--- perl-5.26.1.orig/Makefile	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/Makefile	2018-04-13 05:11:12.000000000 -0500
@@ -0,0 +1,455 @@
+default: all
+
+include Makefile.config
+
+CONFIGPM_FROM_CONFIG_SH = lib/Config.pm lib/Config_heavy.pl
+CONFIGPM = $(CONFIGPM_FROM_CONFIG_SH) lib/Config_git.pl
+CONFIGPOD = lib/Config.pod
+STATIC = static
+# Note: MakeMaker will look for xsubpp only in specific locations
+# This is one of them; but dist/ExtUtils-ParseXS isn't.
+XSUBPP = lib/ExtUtils/xsubpp
+# For autodoc.pl below
+MANIFEST_CH = $(shell sed -e 's/\s.*//' MANIFEST | grep '\.[ch]$$')
+# cpan/Pod-Perldoc/Makefile does not accept PERL_CORE=1 in MM command line,
+# it needs the value to be in $ENV
+export PERL_CORE=1
+
+POD1 = $(wildcard pod/*.pod)
+MAN1 = $(patsubst pod/%.pod,man/man1/%$(man1ext),$(POD1))
+
+# Different perl version come with slightly different source lists.
+# Only pick files actually present in the source tree.
+# perl.c, perlmain.c, op.c, miniperl.c should not be in this list
+src = av.c scope.c doop.c doio.c dump.c gv.c hv.c mg.c reentr.c mro_core.c
+src += perly.c pp.c pp_hot.c pp_ctl.c pp_sys.c regcomp.c regexec.c
+src += utf8.c sv.c taint.c toke.c util.c deb.c run.c universal.c
+src += pad.c globals.c keywords.c perlio.c perlapi.c numeric.c
+src += mathoms.c locale.c pp_pack.c pp_sort.c caretx.c dquote.c $(time64.c)
+src += pp_type.c xsutils.c # cperl
+src += $(mallocsrc)
+
+obj = $(patsubst %.c,%$o,$(wildcard $(src)))
+
+static_tgt = $(patsubst %,%/pm_to_blib,$(static_ext))
+dynamic_tgt = $(patsubst %,%/pm_to_blib,$(dynamic_ext))
+nonxs_tgt = $(patsubst %,%/pm_to_blib,$(nonxs_ext))
+disabled_dynamic_tgt = $(patsubst %,%/pm_to_blib,$(disabled_dynamic_ext))
+disabled_nonxs_tgt = $(patsubst %,%/pm_to_blib,$(disabled_nonxs_ext))
+# perl module names for static mods
+static_pmn = $(shell for e in $(static_ext) ; do grep '^NAME =' $$e/Makefile | cut -d' ' -f3 ; done)
+
+dynaloader_o = $(patsubst %,%$o,$(dynaloader))
+
+ext = $(nonxs_ext) $(dynamic_ext) $(static_ext)
+tgt = $(nonxs_tgt) $(dynamic_tgt) $(static_tgt)
+disabled_ext = $(disabled_nonxs_ext) $(disabled_dynamic_ext)
+
+ext_makefiles = $(patsubst %,%/Makefile,$(ext))
+disabled_ext_makefiles = $(pathsubst %,%/Makefile,$(disabled_ext))
+
+# ---[ perl-cross patches ]-----------------------------------------------------
+# Note: the files are patched in-place, and so do not make valid make-rules
+# Because of this, they are only applied loosely, allowing the user to intervene
+# if need be.
+CROSSPATCHES = $(shell find cnf/diffs/$(patchset) -name '*.patch')
+CROSSPATCHED = $(patsubst %.patch,%.applied,$(CROSSPATCHES))
+
+crosspatch: $(CROSSPATCHED)
+
+# A minor fix for buildroot, force crosspatching when running "make perl modules"
+# instead of "make all".
+miniperlmain$O: crosspatch
+
+# Original versions are not saved anymore; patch generally takes care of this,
+# and if that fails, reaching for the source tarball is the safest option.
+$(CROSSPATCHED): %.applied: %.patch
+	patch -p1 -i $< && touch $@
+
+# ---[ common ]-----------------------------------------------------------------
+
+# Do NOT delete any intermediate files
+# (mostly Makefile.PLs, but others can be annoying too)
+.SECONDARY:
+
+# Force early building of miniperl -- not really necessary, but makes
+# the build process more logical. No reason to try CC if HOSTCC fails.
+all: crosspatch miniperl$X dynaloader perl$x nonxs_ext utilities extensions pods
+
+config.h: config.sh config_h.SH
+	CONFIG_H=$@ CONFIG_SH=$< ./config_h.SH
+
+xconfig.h: xconfig.sh config_h.SH
+	CONFIG_H=$@ CONFIG_SH=$< ./config_h.SH
+
+config-pm: $(CONFIGPM)
+
+# Prevent the following rule from overwriting Makefile by running Makefile.SH
+Makefile:
+	touch $@
+
+%: %.SH config.sh
+	./$*.SH
+
+# ---[ host/miniperl ]----------------------------------------------------------
+
+miniperl$X: miniperlmain$O $(obj:$o=$O) opmini$O perlmini$O
+	$(HOSTCC) $(HOSTLDFLAGS) -o $@ $(filter %$O,$^) $(HOSTLIBS)
+
+miniperlmain$O: miniperlmain.c patchlevel.h
+
+generate_uudmap$X: generate_uudmap.c
+	$(HOSTCC) $(HOSTCFLAGS) -o $@ $^
+
+ifneq ($O,$o)
+%$O: %.c xconfig.h
+	$(HOSTCC) $(HOSTCFLAGS) -c -o $@ $<
+endif
+
+globals$O: uudmap.h bitcount.h
+
+uudmap.h bitcount.h mg_data.h: generate_uudmap$X
+	./generate_uudmap uudmap.h bitcount.h mg_data.h
+
+opmini.c: op.c
+	cp -f $^ $@
+
+opmini$O: opmini.c
+	$(HOSTCC) $(HOSTCFLAGS) -DPERL_EXTERNAL_GLOB -c -o $@ $<
+
+perlmini.c: perl.c
+	cp -f $^ $@
+
+perlmini$O: perlmini.c
+	$(HOSTCC) $(HOSTCFLAGS) -DPERL_IS_MINIPERL -c -o $@ $<
+	
+# Do not re-generate perly.c and perly.h even if they appear out-of-date.
+# Use "make regen_perly" to force update.
+# The following rule cancels implicit .y -> .c make would use otherwise
+%.c: %.y
+
+regen_perly:
+	perl regen_perly.pl
+
+# ---[ site/perl ]--------------------------------------------------------------
+
+ifeq ($(useshrplib),true)
+ifeq ($(soname),)
+perl$x: LDFLAGS += -Wl,-rpath,$(archlib)/CORE
+endif
+endif # or should it be "else"?
+perl$x: LDFLAGS += -Wl,-E
+
+perl$x: perlmain$o $(LIBPERL) $(static_tgt) static.list ext.libs
+	$(eval extlibs=$(shell cat ext.libs))
+	$(eval statars=$(shell cat static.list))
+	$(CC) $(LDFLAGS) -o $@ $(filter %$o,$^) $(LIBPERL) $(statars) $(LIBS) $(extlibs)
+
+%$o: %.c config.h
+	$(CC) $(CFLAGS) -c -o $@ $<
+
+globals.o: uudmap.h
+
+perlmain.c: ext/ExtUtils-Miniperl/pm_to_blib $(patsubst %,%/Makefile,$(static_ext)) | miniperl$X
+	./miniperl_top -MExtUtils::Miniperl -e 'writemain(\"$@", @ARGV)' $(dynaloader) $(static_pmn)
+
+ext.libs: Makefile.config $(patsubst %,%/Makefile,$(static_ext)) | $(static_tgt) miniperl$X
+	./miniperl_top extlibs $(static_pmn) > $@
+
+static.list: Makefile.config $(patsubst %,%/Makefile,$(static_ext)) | $(static_tgt) miniperl$X
+	./miniperl_top statars $(static_pmn) > $@
+
+# ---[ site/library ]-----------------------------------------------------------
+
+libperl: $(LIBPERL)
+
+$(LIBPERL): op$o perl$o $(obj) $(dynaloader_o)
+
+# It would be better to test for static-library suffix here, but the suffix
+# is not used explicitly anywhere else, including in -Dlibperl=
+# So let's make it so that useshrplib controls the kind of the library
+# regardless of the library name.
+# This is in-line with gcc and ld behavior btw.
+ifneq ($(soname),)
+$(LIBPERL): LDDLFLAGS += -Wl,-soname -Wl,$(soname)
+
+  ifneq ($(soname),$(LIBPERL))
+$(LIBPERL): $(soname)
+$(soname):
+	ln -sf $(LIBPERL) $@
+
+  endif
+endif
+
+ifeq ($(useshrplib),true)
+$(LIBPERL):
+	$(CC) $(LDDLFLAGS) -o $@ $(filter %$o,$^) $(LIBS)
+else
+$(LIBPERL):
+	$(AR) cru $@ $(filter %$o,$^)
+	$(RANLIB) $@
+endif
+
+perl.o: git_version.h
+
+configpod: $(CONFIGPOD)
+$(CONFIGPM_FROM_CONFIG_SH) $(CONFIGPOD): config.sh Porting/Glossary lib/Config_git.pl | miniperl$X configpm
+	./miniperl_top configpm
+
+# Both git_version.h and lib/Config_git.pl are built
+# by make_patchnum.pl.
+git_version.h lib/Config_git.pl: make_patchnum.pl | miniperl$X
+	./miniperl_top make_patchnum.pl
+
+# NOT used by this Makefile, replaced by miniperl_top
+# Avoid building.
+lib/buildcustomize.pl: write_buildcustomize.pl | miniperl$X
+	./miniperl$X -Ilib $< > $@
+
+# ---[ Modules ]----------------------------------------------------------------
+
+# The rules below replace make_ext script used in the original
+# perl build chain. Some host-specific functionality is lost.
+# Check miniperl_top to see how it works.
+$(nonxs_tgt) $(disabled_nonxs_tgt): %/pm_to_blib: | %/Makefile
+	$(MAKE) -C $(dir $@) all PERL_CORE=1 LIBPERL=$(LIBPERL)
+
+DynaLoader$o: | ext/DynaLoader/pm_to_blib
+	@if [ ! -f ext/DynaLoader/DynaLoader$o ]; then rm $<; echo "Stale pm_to_blib, please re-run make"; false; fi
+	cp ext/DynaLoader/DynaLoader$o $@
+
+ext/DynaLoader/pm_to_blib: %/pm_to_blib: | %/Makefile
+	$(MAKE) -C $(dir $@) all PERL_CORE=1 LIBPERL=$(LIBPERL) LINKTYPE=static static
+
+ext/DynaLoader/Makefile: config.h | dist/lib/pm_to_blib
+
+$(static_tgt): %/pm_to_blib: | %/Makefile $(nonxs_tgt)
+	$(MAKE) -C $(dir $@) all PERL_CORE=1 LIBPERL=$(LIBPERL) LINKTYPE=static static
+
+$(dynamic_tgt) $(disabled_dynamic_tgt): %/pm_to_blib: | %/Makefile
+	$(MAKE) -C $(dir $@) all PERL_CORE=1 LIBPERL=$(LIBPERL) LINKTYPE=dynamic
+
+lib/re.pm: ext/re/re.pm
+	cp -f ext/re/re.pm lib/re.pm
+
+lib/lib.pm: dist/lib/pm_to_blib
+
+preplibrary: | miniperl$X $(CONFIGPM) lib/re.pm lib/lib.pm
+
+dist/lib/Makefile: dist/lib/Makefile.PL cflags config.h | miniperl$X
+	$(eval top=$(shell echo $(dir $@) | sed -re 's![^/]+!..!g'))
+	cd $(dir $@) && $(top)miniperl_top -I$(top)lib Makefile.PL \
+	 PERL_CORE=1 LIBPERL_A=$(LIBPERL) PERL="$(top)miniperl_top"
+
+%/Makefile: %/Makefile.PL preplibrary cflags config.h | $(XSUBPP) miniperl$X
+	$(eval top=$(shell echo $(dir $@) | sed -re 's![^/]+!..!g'))
+	cd $(dir $@) && $(top)miniperl_top -I$(top)lib Makefile.PL \
+	 INSTALLDIRS=perl INSTALLMAN1DIR=none INSTALLMAN3DIR=none \
+	 PERL_CORE=1 LIBPERL_A=$(LIBPERL) PERL="$(top)miniperl_top"
+
+# Allow building modules by typing "make cpan/Module-Name"
+$(static_ext) $(dynamic_ext) $(nonxs_ext) $(disabled_dynamic_ext) $(disabled_nonxs_ext): %: %/pm_to_blib
+
+nonxs_ext: $(nonxs_tgt)
+dynamic_ext: $(dynamic_tgt)
+static_ext: $(static_tgt)
+extensions: cflags $(nonxs_tgt) $(dynamic_tgt) $(static_tgt)
+modules: extensions
+
+# Some things needed to make modules
+%/Makefile.PL: | miniperl$X
+	./miniperl_top make_ext_Makefile.pl $@
+
+cflags: cflags.SH
+	sh $<
+
+makeppport: $(CONFIGPM) | miniperl$X
+	./miniper_top mkppport
+
+makefiles: $(ext:pm_to_blib=Makefile)
+
+dynaloader: $(dynaloader_o)
+
+$(ppport)/pm_to_blib: dynaloader
+
+$(ppport)/PPPort.pm: $(ppport)/pm_to_blib
+
+$(ppport)/ppport.h: $(ppport)/PPPort.pm | miniperl$X
+	cd $(ppport) && ../../miniperl -I../../lib ppport_h.PL
+
+cpan/Unicode-Normalize/Makefile: lib/unicore/CombiningClass.pl
+dist/Unicode-Normalize/Makefile: lib/unicore/CombiningClass.pl
+
+# mktables does not touch the files unless they need to be rebuilt,
+# which confuses make.
+lib/unicore/CombiningClass.pl pod/perluniprops.pod:
+	./miniperl_top lib/unicore/mktables -w -C lib/unicore -P pod -maketest -makelist -p
+
+# The following rules ensure that modules listed in mkppport.lst get
+# their ppport.h installed.
+mkppport_lst = $(shell cat mkppport.lst | grep '^[a-z]')
+
+$(patsubst %,%/pm_to_blib,$(mkppport_lst)): %/pm_to_blib: %/ppport.h
+# This one does not fit the above pattern
+cpan/YAML-LibYAML/pm_to_blib: cpan/YAML-LibYAML/LibYAML/ppport.h
+# Having %/ppport.h here isn't a very good idea since the initial ppport.h matches
+# the pattern too
+$(patsubst %,%/ppport.h,$(mkppport_lst)): $(ppport)/ppport.h
+	cp -f $< $@
+
+lib/ExtUtils/xsubpp: dist/ExtUtils-ParseXS/lib/ExtUtils/xsubpp
+	cp -f $< $@
+
+# No ExtUtils dependencies here because that's where they come from
+cpan/ExtUtils-ParseXS/Makefile cpan/ExtUtils-Constant/Makefile: \
+		%/Makefile: %/Makefile.PL preplibrary cflags | miniperl$X miniperl_top
+	$(eval top=$(shell echo $(dir $@) | sed -re 's![^/]+!..!g'))
+	cd $(dir $@) && $(top)miniperl_top Makefile.PL PERL_CORE=1 PERL=$(top)miniperl_top
+
+cpan/List-Util/pm_to_blib: | dynaloader
+
+ext/Pod-Functions/pm_to_blib: | cpan/Pod-Simple/pm_to_blib
+
+cpan/Pod-Simple/pm_to_blib: | cpan/Pod-Escapes/pm_to_blib
+
+$(dynamic_tgt): | dist/ExtUtils-CBuilder/pm_to_blib
+
+dist/ExtUtils-CBuilder/pm_to_blib: | cpan/Perl-OSType/pm_to_blib cpan/Text-ParseWords/pm_to_blib
+
+# ---[ modules cleanup & rebuilding ] ------------------------------------------
+
+modules-reset:
+	$(if $(nonxs_ext),            rm -f $(patsubst %,%/pm_to_blib,$(nonxs_ext)))
+	$(if $(static_ext),           rm -f $(patsubst %,%/pm_to_blib,$(static_ext)))
+	$(if $(dynamic_ext),          rm -f $(patsubst %,%/pm_to_blib,$(dynamic_ext)))
+	$(if $(disabled_nonxs_ext),   rm -f $(patsubst %,%/pm_to_blib,$(disabled_nonxs_ext)))
+	$(if $(disabled_dynamic_ext), rm -f $(patsubst %,%/pm_to_blib,$(disabled_dynamic_ext)))
+
+modules-makefiles: $(ext_makefiles)
+
+modules-clean: clean-modules
+
+# ---[ Misc ]-------------------------------------------------------------------
+
+utilities: miniperl$X $(CONFIGPM)
+	$(MAKE) -C utils all
+
+# ---[ modules lists ]----------------------------------------------------------
+modules.done: modules.list
+	echo -n > modules.done
+	-cat $< | (while read i; do $(MAKE) -C $$i && echo $$i >> modules.done; done)
+
+modules.pm.list: modules.done
+	-cat $< | (while read i; do find $$i -name '*.pm'; done) > $@
+
+modules.list: $(CONFIGPM) $(MODLISTS) cflags
+	./modconfig_all
+
+# ---[ pods ]-------------------------------------------------------------------
+pod/perltoc.pod: extra.pods \
+	pod/perlapi.pod \
+	pod/perlintern.pod \
+	pod/perlmodlib.pod \
+	pod/perluniprops.pod \
+	pod/$(perldeltapod)
+
+pods: pod/perltoc.pod
+
+pod/perltoc.pod: pod/buildtoc | miniperl$X
+	./miniperl_top -f pod/buildtoc -q
+
+pod/perlapi.pod: pod/perlintern.pod
+
+pod/perlintern.pod: autodoc.pl embed.fnc | miniperl$X 
+	./miniperl_top autodoc.pl
+
+pod/perlmodlib.pod: pod/perlmodlib.PL MANIFEST | miniperl$X
+	./miniperl_top pod/perlmodlib.PL -q
+
+pod/$(perldeltapod): pod/perldelta.pod
+	ln -sf $(notdir $<) $@
+
+ifdef perlcdeltapod
+pod/$(perlcdeltapod): pod/perlcdelta.pod
+	ln -sf $(notdir $<) $@
+
+pod/perltoc.pod: pod/$(perlcdeltapod)
+endif
+
+extra.pods: | miniperl$X
+	-@test ! -f extra.pods || rm -f `cat extra.pods`
+	-@rm -f extra.pods
+	-@for x in `grep -l '^=[a-z]' README.* | grep -v README.vms` ; do \
+	    nx=`echo $$x | sed -e "s/README\.//"`; \
+	    ln -sf ../$$x "pod/perl"$$nx".pod" ; \
+	    echo "pod/perl"$$nx".pod" >> extra.pods ; \
+	done
+
+# ---[ test ]-------------------------------------------------------------------
+
+.PHONY: test
+test:
+	cd t/ && ln -sf ../perl . && LD_LIBRARY_PATH=$(PWD) ./perl harness
+
+# ---[ install ]----------------------------------------------------------------
+.PHONY: install install.perl install.sym install.pod
+
+META.yml: Porting/makemeta Porting/Maintainers.pl Porting/Maintainers.pm miniperl$X
+	./miniperl_top $<
+
+install: install.perl install.sym install.man
+
+install.perl: installperl | miniperl$X
+	./miniperl_top installperl --destdir=$(DESTDIR) $(INSTALLFLAGS) $(STRIPFLAGS)
+	-@test ! -s extras.lst || $(MAKE) extras.install
+
+install.man: installman pod/perltoc.pod | miniperl$X
+	./miniperl_top installman --destdir=$(DESTDIR) $(INSTALLFLAGS)
+
+ifneq ($(perlname),perl)
+install.sym:
+	-rm -f $(DESTDIR)$(installbin)/$(perlname)$(version)
+	ln -sf $(perlname) $(DESTDIR)$(installbin)/perl
+else
+install.sym:
+	-rm -f $(DESTDIR)$(installbin)/$(perlname)$(version)
+endif
+
+# ---[ testpack ]---------------------------------------------------------------
+.PHONY: testpack
+testpack: TESTPACK.tar.gz
+
+TESTPACK.list: | miniperl$X TESTPACK.px
+	./miniperl$X TESTPACK.px TESTPACK.list TESTPACK
+TESTPACK.tar.gz: TESTPACK.list
+	tar -zcvf $@ -T $<
+
+# ---[ clean ]------------------------------------------------------------------
+# clean-modules must go BEFORE clean-generated-files because it depends on config.h!
+.PHONY: clean clean-obj clean-generated-files clean-subdirs clean-modules clean-testpack
+clean: clean-obj clean-modules clean-generated-files clean-subdirs clean-testpack
+
+clean-obj:
+	-test -n "$o" && rm -f *$o
+	-test -n "$O" && rm -f *$O
+
+clean-subdirs:
+	$(MAKE) -C utils clean
+
+# assuming modules w/o Makefiles were never built and need no cleaning
+clean-modules: config.h
+	@for i in $(ext) $(disabled_ext); do test -f $$i/Makefile && touch $$i/Makefile && $(MAKE) -C $$i clean || true; done
+
+clean-generated-files:
+	-rm -f uudmap.h opmini.c generate_uudmap$X bitcount.h $(CONFIGPM)
+	-rm -f git_version.h lib/re.pm lib/Config_git.pl
+	-rm -f perlmini.c perlmain.c
+	-rm -f config.h xconfig.h
+	-rm -f pod/perlmodlib.pod
+	-rm -f ext.libs static.list
+	-rm -f $(patsubst %,%/ppport.h,$(mkppport_lst))
+	-rm -f $(ppport)/ppport.h $(ppport)/PPPort.pm
+
+clean-testpack:
+	-rm -fr TESTPACK
+	-rm -f TESTPACK.list
diff -uNr perl-5.26.1.orig/Makefile.config.SH perl-5.26.1/Makefile.config.SH
--- perl-5.26.1.orig/Makefile.config.SH	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/Makefile.config.SH	2018-01-22 18:00:30.000000000 -0600
@@ -0,0 +1,185 @@
+#!/bin/sh
+
+if [ ! -f config.sh ]; then
+	echo "config.sh not found" >&2
+	exit -1
+fi
+
+disabledmods=''
+
+. ./config.sh
+echo -n > Makefile.config
+if [ "$usecrosscompile" = 'define' ]; then
+	unset cc
+	unset ccflags
+	unset ar
+	unset ranlib
+	unset libs
+	if [ ! -f 'xconfig.sh' ]; then
+		echo 'xconfig.sh not found' >&2
+		exit -1
+	fi
+	
+	. ./xconfig.sh
+	hostcc="$cc"
+	hostccflags="$ccflags $optimize"
+	hostldflags="$ldflags"
+	hostar="$ar"
+	hostranlib="$ranlib"
+	hostlibs="$perllibs"
+	host_o="$_o"
+	host_exe="$_exe"
+	hostbin="$bin"
+	hostprefix="$prefix"
+	# it's "from host", not host-arch
+	target_name="$target_name"
+	target_arch="$target_arch"
+	sysroot="$sysroot"
+
+	. ./config.sh
+fi
+
+ifprefixed() {
+	val=`echo "$2" | sed -e "s/^$1//"`
+	if [ "$1$val" = "$2" ]; then
+		echo "\$(CROSS)$val"
+	else
+		echo "$2"
+	fi
+}
+
+if [ "$usedl" = 'undef' ]; then
+	dynaloader=''
+else
+	dynaloader="DynaLoader"
+fi
+
+cflags="-DPERL_CORE $ccflags $optimize"
+test "$useshrplib" = 'true' && cflags="$cflags $cccdlflags"
+
+if [ "$usecrosscompile" = "define" ]; then
+test -n "$toolsprefix" && cross="$toolsprefix" || cross="$target_name-"
+cat >> Makefile.config <<END
+CROSS = $cross
+CC = `ifprefixed "$cross" "$cc"`
+AR = `ifprefixed "$cross" "$ar"`
+RANLIB = `ifprefixed "$cross" "$ranlib"`
+CFLAGS = $cflags
+LDFLAGS = $ldflags
+LDDLFLAGS = $lddlflags
+LIBS = $perllibs
+
+HOSTCC = $hostcc
+HOSTCFLAGS = -DPERL_CORE -DUSE_CROSS_COMPILE $hostccflags
+HOSTCFMINI = \$(HOSTCFLAGS) -DPERL_EXTERNAL_GLOB
+HOSTLDFLAGS = $hostldflags
+HOSTLIBS = $hostlibs
+hostbin = \$(DESTDIR)$hostbin
+hostarch = \$(DESTDIR)$hostarch
+hostprefix = \$(DESTDIR)$hostprefix
+target_name = $target_name
+target_arch = $target_arch
+sysroot = $sysroot
+
+# suffixes for static library, object and executable files
+# lowercase for target platform or native build, uppercase
+# for build platform.
+a = $_a
+o = $_o
+x =
+l = .so
+O = .host$host_o
+X = $host_exe
+so = $dlext
+END
+else
+cat >> Makefile.config <<END
+CC = $cc
+AR = $ar
+RANLIB = $ranlib
+CFLAGS = $cflags
+LDFLAGS = $ldflags
+LDDLFLAGS = $lddlflags
+LIBS = $perllibs
+
+HOSTCC = \$(CC)
+HOSTCFLAGS = \$(CFLAGS)
+HOSTCFMINI = \$(HOSTCFLAGS) -DPERL_EXTERNAL_GLOB
+HOSTLDFLAGS = \$(LDFLAGS)
+HOSTLIBS = \$(LIBS)
+
+# suffixes for static library, object and executable files
+# lowercase for target platform or native build, uppercase
+# for build platform.
+a = $_a
+o = $_o
+x = $_exe
+l = .so
+O = $_o
+X = $_exe
+END
+fi
+
+cat >> Makefile.config <<END
+package = $package
+perlname = $perlname
+version = $version
+dynaloader = $dynaloader
+useshrplib = $useshrplib
+soname = $soname
+patchset = $package-$version
+installbin = $installbin
+
+LIBPERL = $libperl
+
+.SUFFIXES: .c \$o \$O
+
+LNS = $lns
+
+archlib = $archlib
+
+dynamic_ext = $dynamic_ext
+static_ext = $static_ext
+nonxs_ext = $nonxs_ext
+END
+
+if [ "$disabledmods" = 'define' ]; then
+	cat >> Makefile.config << END
+disabled_dynamic_ext=$disabled_dynamic_ext
+disabled_nonxs_ext=$disabled_nonxs_ext
+END
+fi
+
+vertag=$PERL_REVISION$PERL_VERSION$PERL_SUBVERSION
+echo >> Makefile.config
+if [ "$package" = 'cperl' ]; then
+	# The version they diverged from mainline perl? Yikes
+	case "$version" in
+		5.26.*) pcpver=5260 ;;
+		*)      pcpver=5240 ;;
+	esac
+	cat >> Makefile.config << END
+perlcdeltapod=perl${vertag}cdelta.pod
+perldeltapod=perl${pcpver}delta.pod
+END
+else
+	cat >> Makefile.config << END
+perldeltapod=perl${vertag}delta.pod
+END
+fi
+
+# Before 5.24, time64.c was included from pp_sys.c and could not be built
+# separately. From 5.24 on, it's a regular standalone file. Ugly but there
+# is probably no better way to handle this.
+case "$version" in
+	5.22.*) ;;
+	*) echo "time64.c = time64.c" >> Makefile.config ;;
+esac
+
+# Before 5.27.7, PPPort was in cpan/. From that version on, it's in dist/
+if [ -d "dist/Devel-PPPort" ]; then
+	ppport="dist/Devel-PPPort"
+else
+	ppport="cpan/Devel-PPPort"
+fi
+echo "ppport = $ppport" >> Makefile.config
diff -uNr perl-5.26.1.orig/TESTPACK.px perl-5.26.1/TESTPACK.px
--- perl-5.26.1.orig/TESTPACK.px	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/TESTPACK.px	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,189 @@
+#!miniperl
+
+$LIST = shift || 'TESTPACK.list';
+$DIR = shift || 'TESTPACK';
+
+%exclude = map { $_ => 1 } (
+	'cpan/Pod-Parser/t/pod/find.t',
+	'dist/ExtUtils-Install',
+	'dist/ExtUtils-ParseXS',
+	'cpan/ExtUtils-MakeMaker',
+	'cpan/ExtUtils-Constant',
+	'cpan/File-CheckTree',
+	'ext/XS-Typemap',
+	'cpan/libnet',
+	'ext/XS-APItest',
+	't/lib/deprecate.t',
+	't/x2p/s2p.t',
+	't/porting',
+	't/porting/manifest.t',
+	't/porting/args_assert.t',
+	't/porting/test_bootstrap.t',
+	't/op/goto_xs.t'
+);
+
+open(CONFIG, '<', 'config.sh') || die;
+while(<CONFIG>) {
+	push(@extensions, split(/\s+/, $2))
+		if m!^extensions=(['"]?)\s*(.*\S)\s*\1!;
+	$perlpath = $1 if m!^perlpath='(.*)'!;
+}
+close(CONFIG);
+%extensions = map { $_ => 1 } @extensions;
+
+mkdir($DIR);
+open(LIST, '>', $LIST) || die;
+open(MOUT, '>', "$DIR/MANIFEST") || die;
+
+@test = ();
+open(MANI, '<', 'MANIFEST') || die;
+while(<MANI>) {
+	chomp;
+	if(m!^(((cpan|dist|ext)/([^/]+))(/\S+)?/[^/\s]+\.t|test\.pl)\s!) {
+		copytest($1) if ($extensions{$2} || ($2 eq 'ext/DynaLoader')) && !$exclude{$1} && !$exclude{$2};
+	} elsif(m!^(((cpan|dist|ext|lib)/(\S+))/t/\S+)\s!) {
+		copyfile($1) if $extensions{$2};
+	} elsif(m!^(lib/\S+/([^/\s]+\.t|test\.pl))\s!) {
+		copytest($1);
+	} elsif(m!^(.*CompTestUtils\.pm)\s*$!) {
+		copyfile($1);
+	}
+}
+close(MANI);
+
+copyrec('t');
+
+copyfile('TestInit.pm.testpack', "$DIR/TestInit.pm");
+copyfile('regen/keywords.pl');
+copyfile('regen/regen_lib.pl');
+copyfile('embed.fnc');
+copyfile('ext/Pod-Functions/Functions_pm.PL');
+copyfile('cpan/Filter-Util-Call/filter-util.pl') if $extensions{'cpan/Filter-Util-Call'};
+copyfile('config_h.SH');
+copyfile('EXTERN.h');
+copyfile('lib/dbm_filter_util.pl');
+copyfile('lib/unicore/TestProp.pl');
+copyfile('ext/Tie-Memoize/lib/Tie/Memoize.pm') if $extensions{'ext/Tie-Memoize'};
+copyfile('regen/opcodes');
+copyfile('dist/IO/Makefile.PL');
+copyfile('lib/XS');
+copyfile('ext/IPC-Open3/Makefile') if $extensions{'ext/IPC-Open3'};
+copyfile('cpan/Pod-Parser/podselect.PL') if $extensions{'cpan/Pod-Parser'};
+copyfile('ext/POSIX/POSIX.xs');
+unlink("$DIR/cpan/Test-Harness/MANIFEST.CUMMULATIVE");
+makelink('../../MANIFEST', "cpan/Test-Harness/MANIFEST.CUMMULATIVE");
+makelink('../../MANIFEST', "cpan/Test-Harness/MANIFEST");
+
+copyfile('ext/POSIX/Makefile.PL') if $extensions{'ext/POSIX'};
+copyfile('cpan/Digest-MD5/MD5.xs') if $extensions{'cpan/Digest-MD5'};
+
+makelink('../../t/test.pl', "ext/re/test.pl");
+makelink('../../t/test.pl', "ext/B/test.pl");
+
+copyfile('lib/unicore/PropertyAliases.txt');
+copyfile('lib/unicore/PropValueAliases.txt');
+
+copyrec('cpan/Test-Harness/t/lib/TAP/Harness') if $extensions{'cpan/Test-Harness'};
+
+makedir("cpan/Digest-SHA/src");
+makedir("cpan/List-Util/blib") if $extensions{'cpan/List-Util'};
+unlink("$DIR/t/perl");
+makelink($perlpath, "t/perl");
+makelink('t/perl', "perl");
+
+print LIST "$DIR/MANIFEST\n";
+
+close(MOUT);
+close(LIST);
+
+sub mkdirname
+{
+	my @path = split m!/!, shift;
+	my $path = shift @path;
+	pop @path;
+	foreach(@path) {
+		$path .= "/$_";
+		next if -d $path;
+		mkdir($path) || return;
+	}
+}
+
+sub copytest
+{
+	my $orig = shift;
+	$test = "$DIR/$orig";
+	mkdirname($test);
+	open(TEST, '>', $test) || die "Can't write to $test: $!";
+	open(ORIG, '<', $orig) || die "Can't open $orig: $!";
+	while(<ORIG>) {
+		s!local \@INC\s*=!local \@INC = \@INC; \@INC = !;
+		s!\@INC\s*=\s*\((.+)\)!unshift(\@INC, $1)!;
+		s!\@INC\s*=\s*(qw\(.+\))!unshift(\@INC, $1)!;
+		s!\@INC\s*=\s*(qw\s*"[^"]+")!unshift(\@INC, $1)!;
+		s!\@INC\s*=\s*('[^']+')!unshift(\@INC, $1)!;
+		print TEST;
+	}
+	close(ORIG);
+	close(TEST);
+	print LIST "$test\n";
+	print MOUT "$orig\t-\n";
+}
+
+sub copyfile
+{
+	my $orig = shift;
+	my $out = shift;
+	$out = "$DIR/$orig" unless defined($out);
+	mkdirname($out);
+	open(ORIG, '<', $orig) || die "Can't open $orig";
+	open(OUT, '>', $out) || die "Can't write to $out";
+	print OUT while(<ORIG>);
+	chmod($stat[2] | 0200, \*OUT) if @stat = stat ORIG;
+	close(OUT);
+	close(ORIG);
+	print LIST "$out\n";
+	print MOUT "$orig\t-\n";
+}
+
+sub copyrec
+{
+	my $dir = shift;
+	my $excl = shift;
+	local *DIRH;
+	opendir(DIRH, $dir) || die("Can't open $dir: $!");
+	while(defined($_ = readdir(DIRH))) {
+		next if m!^\.!;
+		my $file = "$dir/$_";
+		next if $exclude{$file};
+		(-d $file ? \&copyrec : \&copytest)->($file);
+	};
+	closedir(DIRH);
+}
+
+sub writefile
+{
+	my $orig = shift;
+	my $test = "$DIR/$orig";
+	my $mode = shift;
+	my $data = shift;
+	
+	open(FILE, '>', $test) || die;
+	print FILE $data;
+	close(FILE);
+	chmod $mode, $test;
+}
+
+sub makelink
+{
+	my $tgt = shift;
+	my $sym = shift;
+	print LIST "$DIR/$sym\n";
+	return symlink($tgt, "$DIR/$sym");
+}
+
+sub makedir
+{
+	my $dir = shift;
+	print LIST "$DIR/$dir\n";
+	return mkdir("$DIR/$dir");
+}
diff -uNr perl-5.26.1.orig/TestInit.pm.testpack perl-5.26.1/TestInit.pm.testpack
--- perl-5.26.1.orig/TestInit.pm.testpack	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/TestInit.pm.testpack	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,48 @@
+package TestInit;
+
+sub import {
+	my $chdir;
+	my $setopt;
+
+	foreach (@_) {
+		if($_ eq 'A') {
+			require File::Spec::Functions;
+			# Forcibly untaint this.
+			@INC = map { $_ = File::Spec::Functions::rel2abs($_); /(.*)/; $1 } @INC;
+			$^X = File::Spec::Functions::rel2abs($^X);
+		} elsif($_ eq 'T') {
+			$chdir = '..';
+			unshift(@INC, './lib');
+		} elsif($_ eq 'NC') {
+			delete $ENV{PERL_CORE}
+		}
+	}
+
+	# See TestInit.pm in the perl tree for explaination.
+	unless($setopt) {
+		if (-f 't/TEST' && -f 'MANIFEST' && -d 'lib' && -d 'ext') {
+			if ($0 =~ s!^((?:ext|dist|cpan)[\\/][^\\/]+)[\\/](.*\.t)$!$2!) {
+				$chdir = $1;
+				$setopt = 1;
+				$^X =~ s!^\.([\\/])!..$1..$1!;
+			} else {
+				$chdir = 't';
+				unshift(@INC, '../lib');
+				$setopt = $0 =~ m!^lib/!;
+			}
+		} else {
+			unshift(@INC, '../lib');
+		}
+	}
+
+	chdir($chdir) or die "Can't chdir($chdir): $!"
+		if defined($chdir) && !(-f 't/TEST' && -f 'MANIFEST' && -d 'lib' && -d 'ext');
+
+	if($setopt) {
+		my $lib = join $sep, @INC;
+		$lib .= substr($ENV{PERL5LIB}, 0, 0) if exists $ENV{PERL5LIB};
+		$ENV{PERL5LIB} = $lib;
+	}
+}
+
+1;
diff -uNr perl-5.26.1.orig/cnf/config.guess perl-5.26.1/cnf/config.guess
--- perl-5.26.1.orig/cnf/config.guess	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/config.guess	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,1462 @@
+#! /bin/sh
+# Attempt to guess a canonical system name.
+#   Copyright 1992-2016 Free Software Foundation, Inc.
+
+timestamp='2016-10-02'
+
+# This file is free software; you can redistribute it and/or modify it
+# under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 3 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, see <http://www.gnu.org/licenses/>.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that
+# program.  This Exception is an additional permission under section 7
+# of the GNU General Public License, version 3 ("GPLv3").
+#
+# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.
+#
+# You can get the latest version of this script from:
+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess
+#
+# Please send patches to <config-patches@gnu.org>.
+
+
+me=`echo "$0" | sed -e 's,.*/,,'`
+
+usage="\
+Usage: $0 [OPTION]
+
+Output the configuration name of the system \`$me' is run on.
+
+Operation modes:
+  -h, --help         print this help, then exit
+  -t, --time-stamp   print date of last modification, then exit
+  -v, --version      print version number, then exit
+
+Report bugs and patches to <config-patches@gnu.org>."
+
+version="\
+GNU config.guess ($timestamp)
+
+Originally written by Per Bothner.
+Copyright 1992-2016 Free Software Foundation, Inc.
+
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+
+help="
+Try \`$me --help' for more information."
+
+# Parse command line
+while test $# -gt 0 ; do
+  case $1 in
+    --time-stamp | --time* | -t )
+       echo "$timestamp" ; exit ;;
+    --version | -v )
+       echo "$version" ; exit ;;
+    --help | --h* | -h )
+       echo "$usage"; exit ;;
+    -- )     # Stop option processing
+       shift; break ;;
+    - )	# Use stdin as input.
+       break ;;
+    -* )
+       echo "$me: invalid option $1$help" >&2
+       exit 1 ;;
+    * )
+       break ;;
+  esac
+done
+
+if test $# != 0; then
+  echo "$me: too many arguments$help" >&2
+  exit 1
+fi
+
+trap 'exit 1' 1 2 15
+
+# CC_FOR_BUILD -- compiler used by this script. Note that the use of a
+# compiler to aid in system detection is discouraged as it requires
+# temporary files to be created and, as you can see below, it is a
+# headache to deal with in a portable fashion.
+
+# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still
+# use `HOST_CC' if defined, but it is deprecated.
+
+# Portable tmp directory creation inspired by the Autoconf team.
+
+set_cc_for_build='
+trap "exitcode=\$?; (rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null) && exit \$exitcode" 0 ;
+trap "rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null; exit 1" 1 2 13 15 ;
+: ${TMPDIR=/tmp} ;
+ { tmp=`(umask 077 && mktemp -d "$TMPDIR/cgXXXXXX") 2>/dev/null` && test -n "$tmp" && test -d "$tmp" ; } ||
+ { test -n "$RANDOM" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||
+ { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo "Warning: creating insecure temp directory" >&2 ; } ||
+ { echo "$me: cannot create a temporary directory in $TMPDIR" >&2 ; exit 1 ; } ;
+dummy=$tmp/dummy ;
+tmpfiles="$dummy.c $dummy.o $dummy.rel $dummy" ;
+case $CC_FOR_BUILD,$HOST_CC,$CC in
+ ,,)    echo "int x;" > $dummy.c ;
+	for c in cc gcc c89 c99 ; do
+	  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then
+	     CC_FOR_BUILD="$c"; break ;
+	  fi ;
+	done ;
+	if test x"$CC_FOR_BUILD" = x ; then
+	  CC_FOR_BUILD=no_compiler_found ;
+	fi
+	;;
+ ,,*)   CC_FOR_BUILD=$CC ;;
+ ,*,*)  CC_FOR_BUILD=$HOST_CC ;;
+esac ; set_cc_for_build= ;'
+
+# This is needed to find uname on a Pyramid OSx when run in the BSD universe.
+# (ghazi@noc.rutgers.edu 1994-08-24)
+if (test -f /.attbin/uname) >/dev/null 2>&1 ; then
+	PATH=$PATH:/.attbin ; export PATH
+fi
+
+UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown
+UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown
+UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown
+UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown
+
+case "${UNAME_SYSTEM}" in
+Linux|GNU|GNU/*)
+	# If the system lacks a compiler, then just pick glibc.
+	# We could probably try harder.
+	LIBC=gnu
+
+	eval $set_cc_for_build
+	cat <<-EOF > $dummy.c
+	#include <features.h>
+	#if defined(__UCLIBC__)
+	LIBC=uclibc
+	#elif defined(__dietlibc__)
+	LIBC=dietlibc
+	#else
+	LIBC=gnu
+	#endif
+	EOF
+	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`
+	;;
+esac
+
+# Note: order is significant - the case branches are not exclusive.
+
+case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
+    *:NetBSD:*:*)
+	# NetBSD (nbsd) targets should (where applicable) match one or
+	# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,
+	# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently
+	# switched to ELF, *-*-netbsd* would select the old
+	# object file format.  This provides both forward
+	# compatibility and a consistent mechanism for selecting the
+	# object file format.
+	#
+	# Note: NetBSD doesn't particularly care about the vendor
+	# portion of the name.  We always set it to "unknown".
+	sysctl="sysctl -n hw.machine_arch"
+	UNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \
+	    /sbin/$sysctl 2>/dev/null || \
+	    /usr/sbin/$sysctl 2>/dev/null || \
+	    echo unknown)`
+	case "${UNAME_MACHINE_ARCH}" in
+	    armeb) machine=armeb-unknown ;;
+	    arm*) machine=arm-unknown ;;
+	    sh3el) machine=shl-unknown ;;
+	    sh3eb) machine=sh-unknown ;;
+	    sh5el) machine=sh5le-unknown ;;
+	    earmv*)
+		arch=`echo ${UNAME_MACHINE_ARCH} | sed -e 's,^e\(armv[0-9]\).*$,\1,'`
+		endian=`echo ${UNAME_MACHINE_ARCH} | sed -ne 's,^.*\(eb\)$,\1,p'`
+		machine=${arch}${endian}-unknown
+		;;
+	    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;
+	esac
+	# The Operating System including object format, if it has switched
+	# to ELF recently (or will in the future) and ABI.
+	case "${UNAME_MACHINE_ARCH}" in
+	    earm*)
+		os=netbsdelf
+		;;
+	    arm*|i386|m68k|ns32k|sh3*|sparc|vax)
+		eval $set_cc_for_build
+		if echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \
+			| grep -q __ELF__
+		then
+		    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).
+		    # Return netbsd for either.  FIX?
+		    os=netbsd
+		else
+		    os=netbsdelf
+		fi
+		;;
+	    *)
+		os=netbsd
+		;;
+	esac
+	# Determine ABI tags.
+	case "${UNAME_MACHINE_ARCH}" in
+	    earm*)
+		expr='s/^earmv[0-9]/-eabi/;s/eb$//'
+		abi=`echo ${UNAME_MACHINE_ARCH} | sed -e "$expr"`
+		;;
+	esac
+	# The OS release
+	# Debian GNU/NetBSD machines have a different userland, and
+	# thus, need a distinct triplet. However, they do not need
+	# kernel version information, so it can be replaced with a
+	# suitable tag, in the style of linux-gnu.
+	case "${UNAME_VERSION}" in
+	    Debian*)
+		release='-gnu'
+		;;
+	    *)
+		release=`echo ${UNAME_RELEASE} | sed -e 's/[-_].*//' | cut -d. -f1,2`
+		;;
+	esac
+	# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:
+	# contains redundant information, the shorter form:
+	# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.
+	echo "${machine}-${os}${release}${abi}"
+	exit ;;
+    *:Bitrig:*:*)
+	UNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`
+	echo ${UNAME_MACHINE_ARCH}-unknown-bitrig${UNAME_RELEASE}
+	exit ;;
+    *:OpenBSD:*:*)
+	UNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`
+	echo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}
+	exit ;;
+    *:LibertyBSD:*:*)
+	UNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\.//'`
+	echo ${UNAME_MACHINE_ARCH}-unknown-libertybsd${UNAME_RELEASE}
+	exit ;;
+    *:ekkoBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}
+	exit ;;
+    *:SolidBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-solidbsd${UNAME_RELEASE}
+	exit ;;
+    macppc:MirBSD:*:*)
+	echo powerpc-unknown-mirbsd${UNAME_RELEASE}
+	exit ;;
+    *:MirBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}
+	exit ;;
+    *:Sortix:*:*)
+	echo ${UNAME_MACHINE}-unknown-sortix
+	exit ;;
+    alpha:OSF1:*:*)
+	case $UNAME_RELEASE in
+	*4.0)
+		UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`
+		;;
+	*5.*)
+		UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`
+		;;
+	esac
+	# According to Compaq, /usr/sbin/psrinfo has been available on
+	# OSF/1 and Tru64 systems produced since 1995.  I hope that
+	# covers most systems running today.  This code pipes the CPU
+	# types through head -n 1, so we only detect the type of CPU 0.
+	ALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \(.*\) processor.*$/\1/p' | head -n 1`
+	case "$ALPHA_CPU_TYPE" in
+	    "EV4 (21064)")
+		UNAME_MACHINE=alpha ;;
+	    "EV4.5 (21064)")
+		UNAME_MACHINE=alpha ;;
+	    "LCA4 (21066/21068)")
+		UNAME_MACHINE=alpha ;;
+	    "EV5 (21164)")
+		UNAME_MACHINE=alphaev5 ;;
+	    "EV5.6 (21164A)")
+		UNAME_MACHINE=alphaev56 ;;
+	    "EV5.6 (21164PC)")
+		UNAME_MACHINE=alphapca56 ;;
+	    "EV5.7 (21164PC)")
+		UNAME_MACHINE=alphapca57 ;;
+	    "EV6 (21264)")
+		UNAME_MACHINE=alphaev6 ;;
+	    "EV6.7 (21264A)")
+		UNAME_MACHINE=alphaev67 ;;
+	    "EV6.8CB (21264C)")
+		UNAME_MACHINE=alphaev68 ;;
+	    "EV6.8AL (21264B)")
+		UNAME_MACHINE=alphaev68 ;;
+	    "EV6.8CX (21264D)")
+		UNAME_MACHINE=alphaev68 ;;
+	    "EV6.9A (21264/EV69A)")
+		UNAME_MACHINE=alphaev69 ;;
+	    "EV7 (21364)")
+		UNAME_MACHINE=alphaev7 ;;
+	    "EV7.9 (21364A)")
+		UNAME_MACHINE=alphaev79 ;;
+	esac
+	# A Pn.n version is a patched version.
+	# A Vn.n version is a released version.
+	# A Tn.n version is a released field test version.
+	# A Xn.n version is an unreleased experimental baselevel.
+	# 1.2 uses "1.2" for uname -r.
+	echo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`
+	# Reset EXIT trap before exiting to avoid spurious non-zero exit code.
+	exitcode=$?
+	trap '' 0
+	exit $exitcode ;;
+    Alpha\ *:Windows_NT*:*)
+	# How do we know it's Interix rather than the generic POSIX subsystem?
+	# Should we change UNAME_MACHINE based on the output of uname instead
+	# of the specific Alpha model?
+	echo alpha-pc-interix
+	exit ;;
+    21064:Windows_NT:50:3)
+	echo alpha-dec-winnt3.5
+	exit ;;
+    Amiga*:UNIX_System_V:4.0:*)
+	echo m68k-unknown-sysv4
+	exit ;;
+    *:[Aa]miga[Oo][Ss]:*:*)
+	echo ${UNAME_MACHINE}-unknown-amigaos
+	exit ;;
+    *:[Mm]orph[Oo][Ss]:*:*)
+	echo ${UNAME_MACHINE}-unknown-morphos
+	exit ;;
+    *:OS/390:*:*)
+	echo i370-ibm-openedition
+	exit ;;
+    *:z/VM:*:*)
+	echo s390-ibm-zvmoe
+	exit ;;
+    *:OS400:*:*)
+	echo powerpc-ibm-os400
+	exit ;;
+    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)
+	echo arm-acorn-riscix${UNAME_RELEASE}
+	exit ;;
+    arm*:riscos:*:*|arm*:RISCOS:*:*)
+	echo arm-unknown-riscos
+	exit ;;
+    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)
+	echo hppa1.1-hitachi-hiuxmpp
+	exit ;;
+    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)
+	# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.
+	if test "`(/bin/universe) 2>/dev/null`" = att ; then
+		echo pyramid-pyramid-sysv3
+	else
+		echo pyramid-pyramid-bsd
+	fi
+	exit ;;
+    NILE*:*:*:dcosx)
+	echo pyramid-pyramid-svr4
+	exit ;;
+    DRS?6000:unix:4.0:6*)
+	echo sparc-icl-nx6
+	exit ;;
+    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)
+	case `/usr/bin/uname -p` in
+	    sparc) echo sparc-icl-nx7; exit ;;
+	esac ;;
+    s390x:SunOS:*:*)
+	echo ${UNAME_MACHINE}-ibm-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    sun4H:SunOS:5.*:*)
+	echo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)
+	echo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)
+	echo i386-pc-auroraux${UNAME_RELEASE}
+	exit ;;
+    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)
+	eval $set_cc_for_build
+	SUN_ARCH=i386
+	# If there is a compiler, see if it is configured for 64-bit objects.
+	# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.
+	# This test works for both compilers.
+	if [ "$CC_FOR_BUILD" != no_compiler_found ]; then
+	    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \
+		(CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) | \
+		grep IS_64BIT_ARCH >/dev/null
+	    then
+		SUN_ARCH=x86_64
+	    fi
+	fi
+	echo ${SUN_ARCH}-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    sun4*:SunOS:6*:*)
+	# According to config.sub, this is the proper way to canonicalize
+	# SunOS6.  Hard to guess exactly what SunOS6 will be like, but
+	# it's likely to be more like Solaris than SunOS4.
+	echo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    sun4*:SunOS:*:*)
+	case "`/usr/bin/arch -k`" in
+	    Series*|S4*)
+		UNAME_RELEASE=`uname -v`
+		;;
+	esac
+	# Japanese Language versions have a version number like `4.1.3-JL'.
+	echo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`
+	exit ;;
+    sun3*:SunOS:*:*)
+	echo m68k-sun-sunos${UNAME_RELEASE}
+	exit ;;
+    sun*:*:4.2BSD:*)
+	UNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`
+	test "x${UNAME_RELEASE}" = x && UNAME_RELEASE=3
+	case "`/bin/arch`" in
+	    sun3)
+		echo m68k-sun-sunos${UNAME_RELEASE}
+		;;
+	    sun4)
+		echo sparc-sun-sunos${UNAME_RELEASE}
+		;;
+	esac
+	exit ;;
+    aushp:SunOS:*:*)
+	echo sparc-auspex-sunos${UNAME_RELEASE}
+	exit ;;
+    # The situation for MiNT is a little confusing.  The machine name
+    # can be virtually everything (everything which is not
+    # "atarist" or "atariste" at least should have a processor
+    # > m68000).  The system name ranges from "MiNT" over "FreeMiNT"
+    # to the lowercase version "mint" (or "freemint").  Finally
+    # the system name "TOS" denotes a system which is actually not
+    # MiNT.  But MiNT is downward compatible to TOS, so this should
+    # be no problem.
+    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)
+	echo m68k-atari-mint${UNAME_RELEASE}
+	exit ;;
+    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)
+	echo m68k-atari-mint${UNAME_RELEASE}
+	exit ;;
+    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
+	echo m68k-atari-mint${UNAME_RELEASE}
+	exit ;;
+    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
+	echo m68k-milan-mint${UNAME_RELEASE}
+	exit ;;
+    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
+	echo m68k-hades-mint${UNAME_RELEASE}
+	exit ;;
+    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
+	echo m68k-unknown-mint${UNAME_RELEASE}
+	exit ;;
+    m68k:machten:*:*)
+	echo m68k-apple-machten${UNAME_RELEASE}
+	exit ;;
+    powerpc:machten:*:*)
+	echo powerpc-apple-machten${UNAME_RELEASE}
+	exit ;;
+    RISC*:Mach:*:*)
+	echo mips-dec-mach_bsd4.3
+	exit ;;
+    RISC*:ULTRIX:*:*)
+	echo mips-dec-ultrix${UNAME_RELEASE}
+	exit ;;
+    VAX*:ULTRIX*:*:*)
+	echo vax-dec-ultrix${UNAME_RELEASE}
+	exit ;;
+    2020:CLIX:*:* | 2430:CLIX:*:*)
+	echo clipper-intergraph-clix${UNAME_RELEASE}
+	exit ;;
+    mips:*:*:UMIPS | mips:*:*:RISCos)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+#ifdef __cplusplus
+#include <stdio.h>  /* for printf() prototype */
+	int main (int argc, char *argv[]) {
+#else
+	int main (argc, argv) int argc; char *argv[]; {
+#endif
+	#if defined (host_mips) && defined (MIPSEB)
+	#if defined (SYSTYPE_SYSV)
+	  printf ("mips-mips-riscos%ssysv\n", argv[1]); exit (0);
+	#endif
+	#if defined (SYSTYPE_SVR4)
+	  printf ("mips-mips-riscos%ssvr4\n", argv[1]); exit (0);
+	#endif
+	#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)
+	  printf ("mips-mips-riscos%sbsd\n", argv[1]); exit (0);
+	#endif
+	#endif
+	  exit (-1);
+	}
+EOF
+	$CC_FOR_BUILD -o $dummy $dummy.c &&
+	  dummyarg=`echo "${UNAME_RELEASE}" | sed -n 's/\([0-9]*\).*/\1/p'` &&
+	  SYSTEM_NAME=`$dummy $dummyarg` &&
+	    { echo "$SYSTEM_NAME"; exit; }
+	echo mips-mips-riscos${UNAME_RELEASE}
+	exit ;;
+    Motorola:PowerMAX_OS:*:*)
+	echo powerpc-motorola-powermax
+	exit ;;
+    Motorola:*:4.3:PL8-*)
+	echo powerpc-harris-powermax
+	exit ;;
+    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)
+	echo powerpc-harris-powermax
+	exit ;;
+    Night_Hawk:Power_UNIX:*:*)
+	echo powerpc-harris-powerunix
+	exit ;;
+    m88k:CX/UX:7*:*)
+	echo m88k-harris-cxux7
+	exit ;;
+    m88k:*:4*:R4*)
+	echo m88k-motorola-sysv4
+	exit ;;
+    m88k:*:3*:R3*)
+	echo m88k-motorola-sysv3
+	exit ;;
+    AViiON:dgux:*:*)
+	# DG/UX returns AViiON for all architectures
+	UNAME_PROCESSOR=`/usr/bin/uname -p`
+	if [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]
+	then
+	    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \
+	       [ ${TARGET_BINARY_INTERFACE}x = x ]
+	    then
+		echo m88k-dg-dgux${UNAME_RELEASE}
+	    else
+		echo m88k-dg-dguxbcs${UNAME_RELEASE}
+	    fi
+	else
+	    echo i586-dg-dgux${UNAME_RELEASE}
+	fi
+	exit ;;
+    M88*:DolphinOS:*:*)	# DolphinOS (SVR3)
+	echo m88k-dolphin-sysv3
+	exit ;;
+    M88*:*:R3*:*)
+	# Delta 88k system running SVR3
+	echo m88k-motorola-sysv3
+	exit ;;
+    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)
+	echo m88k-tektronix-sysv3
+	exit ;;
+    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)
+	echo m68k-tektronix-bsd
+	exit ;;
+    *:IRIX*:*:*)
+	echo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`
+	exit ;;
+    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.
+	echo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id
+	exit ;;               # Note that: echo "'`uname -s`'" gives 'AIX '
+    i*86:AIX:*:*)
+	echo i386-ibm-aix
+	exit ;;
+    ia64:AIX:*:*)
+	if [ -x /usr/bin/oslevel ] ; then
+		IBM_REV=`/usr/bin/oslevel`
+	else
+		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
+	fi
+	echo ${UNAME_MACHINE}-ibm-aix${IBM_REV}
+	exit ;;
+    *:AIX:2:3)
+	if grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then
+		eval $set_cc_for_build
+		sed 's/^		//' << EOF >$dummy.c
+		#include <sys/systemcfg.h>
+
+		main()
+			{
+			if (!__power_pc())
+				exit(1);
+			puts("powerpc-ibm-aix3.2.5");
+			exit(0);
+			}
+EOF
+		if $CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy`
+		then
+			echo "$SYSTEM_NAME"
+		else
+			echo rs6000-ibm-aix3.2.5
+		fi
+	elif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then
+		echo rs6000-ibm-aix3.2.4
+	else
+		echo rs6000-ibm-aix3.2
+	fi
+	exit ;;
+    *:AIX:*:[4567])
+	IBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`
+	if /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then
+		IBM_ARCH=rs6000
+	else
+		IBM_ARCH=powerpc
+	fi
+	if [ -x /usr/bin/lslpp ] ; then
+		IBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc |
+			   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`
+	else
+		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
+	fi
+	echo ${IBM_ARCH}-ibm-aix${IBM_REV}
+	exit ;;
+    *:AIX:*:*)
+	echo rs6000-ibm-aix
+	exit ;;
+    ibmrt:4.4BSD:*|romp-ibm:BSD:*)
+	echo romp-ibm-bsd4.4
+	exit ;;
+    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and
+	echo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to
+	exit ;;                             # report: romp-ibm BSD 4.3
+    *:BOSX:*:*)
+	echo rs6000-bull-bosx
+	exit ;;
+    DPX/2?00:B.O.S.:*:*)
+	echo m68k-bull-sysv3
+	exit ;;
+    9000/[34]??:4.3bsd:1.*:*)
+	echo m68k-hp-bsd
+	exit ;;
+    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)
+	echo m68k-hp-bsd4.4
+	exit ;;
+    9000/[34678]??:HP-UX:*:*)
+	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
+	case "${UNAME_MACHINE}" in
+	    9000/31? )            HP_ARCH=m68000 ;;
+	    9000/[34]?? )         HP_ARCH=m68k ;;
+	    9000/[678][0-9][0-9])
+		if [ -x /usr/bin/getconf ]; then
+		    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`
+		    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`
+		    case "${sc_cpu_version}" in
+		      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0
+		      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1
+		      532)                      # CPU_PA_RISC2_0
+			case "${sc_kernel_bits}" in
+			  32) HP_ARCH=hppa2.0n ;;
+			  64) HP_ARCH=hppa2.0w ;;
+			  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20
+			esac ;;
+		    esac
+		fi
+		if [ "${HP_ARCH}" = "" ]; then
+		    eval $set_cc_for_build
+		    sed 's/^		//' << EOF >$dummy.c
+
+		#define _HPUX_SOURCE
+		#include <stdlib.h>
+		#include <unistd.h>
+
+		int main ()
+		{
+		#if defined(_SC_KERNEL_BITS)
+		    long bits = sysconf(_SC_KERNEL_BITS);
+		#endif
+		    long cpu  = sysconf (_SC_CPU_VERSION);
+
+		    switch (cpu)
+			{
+			case CPU_PA_RISC1_0: puts ("hppa1.0"); break;
+			case CPU_PA_RISC1_1: puts ("hppa1.1"); break;
+			case CPU_PA_RISC2_0:
+		#if defined(_SC_KERNEL_BITS)
+			    switch (bits)
+				{
+				case 64: puts ("hppa2.0w"); break;
+				case 32: puts ("hppa2.0n"); break;
+				default: puts ("hppa2.0"); break;
+				} break;
+		#else  /* !defined(_SC_KERNEL_BITS) */
+			    puts ("hppa2.0"); break;
+		#endif
+			default: puts ("hppa1.0"); break;
+			}
+		    exit (0);
+		}
+EOF
+		    (CCOPTS="" $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`
+		    test -z "$HP_ARCH" && HP_ARCH=hppa
+		fi ;;
+	esac
+	if [ ${HP_ARCH} = hppa2.0w ]
+	then
+	    eval $set_cc_for_build
+
+	    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating
+	    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler
+	    # generating 64-bit code.  GNU and HP use different nomenclature:
+	    #
+	    # $ CC_FOR_BUILD=cc ./config.guess
+	    # => hppa2.0w-hp-hpux11.23
+	    # $ CC_FOR_BUILD="cc +DA2.0w" ./config.guess
+	    # => hppa64-hp-hpux11.23
+
+	    if echo __LP64__ | (CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) |
+		grep -q __LP64__
+	    then
+		HP_ARCH=hppa2.0w
+	    else
+		HP_ARCH=hppa64
+	    fi
+	fi
+	echo ${HP_ARCH}-hp-hpux${HPUX_REV}
+	exit ;;
+    ia64:HP-UX:*:*)
+	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
+	echo ia64-hp-hpux${HPUX_REV}
+	exit ;;
+    3050*:HI-UX:*:*)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#include <unistd.h>
+	int
+	main ()
+	{
+	  long cpu = sysconf (_SC_CPU_VERSION);
+	  /* The order matters, because CPU_IS_HP_MC68K erroneously returns
+	     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct
+	     results, however.  */
+	  if (CPU_IS_PA_RISC (cpu))
+	    {
+	      switch (cpu)
+		{
+		  case CPU_PA_RISC1_0: puts ("hppa1.0-hitachi-hiuxwe2"); break;
+		  case CPU_PA_RISC1_1: puts ("hppa1.1-hitachi-hiuxwe2"); break;
+		  case CPU_PA_RISC2_0: puts ("hppa2.0-hitachi-hiuxwe2"); break;
+		  default: puts ("hppa-hitachi-hiuxwe2"); break;
+		}
+	    }
+	  else if (CPU_IS_HP_MC68K (cpu))
+	    puts ("m68k-hitachi-hiuxwe2");
+	  else puts ("unknown-hitachi-hiuxwe2");
+	  exit (0);
+	}
+EOF
+	$CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy` &&
+		{ echo "$SYSTEM_NAME"; exit; }
+	echo unknown-hitachi-hiuxwe2
+	exit ;;
+    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )
+	echo hppa1.1-hp-bsd
+	exit ;;
+    9000/8??:4.3bsd:*:*)
+	echo hppa1.0-hp-bsd
+	exit ;;
+    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)
+	echo hppa1.0-hp-mpeix
+	exit ;;
+    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )
+	echo hppa1.1-hp-osf
+	exit ;;
+    hp8??:OSF1:*:*)
+	echo hppa1.0-hp-osf
+	exit ;;
+    i*86:OSF1:*:*)
+	if [ -x /usr/sbin/sysversion ] ; then
+	    echo ${UNAME_MACHINE}-unknown-osf1mk
+	else
+	    echo ${UNAME_MACHINE}-unknown-osf1
+	fi
+	exit ;;
+    parisc*:Lites*:*:*)
+	echo hppa1.1-hp-lites
+	exit ;;
+    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)
+	echo c1-convex-bsd
+	exit ;;
+    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)
+	if getsysinfo -f scalar_acc
+	then echo c32-convex-bsd
+	else echo c2-convex-bsd
+	fi
+	exit ;;
+    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)
+	echo c34-convex-bsd
+	exit ;;
+    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)
+	echo c38-convex-bsd
+	exit ;;
+    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)
+	echo c4-convex-bsd
+	exit ;;
+    CRAY*Y-MP:*:*:*)
+	echo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    CRAY*[A-Z]90:*:*:*)
+	echo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \
+	| sed -e 's/CRAY.*\([A-Z]90\)/\1/' \
+	      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \
+	      -e 's/\.[^.]*$/.X/'
+	exit ;;
+    CRAY*TS:*:*:*)
+	echo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    CRAY*T3E:*:*:*)
+	echo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    CRAY*SV1:*:*:*)
+	echo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    *:UNICOS/mp:*:*)
+	echo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)
+	FUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`
+	FUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\///'`
+	FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`
+	echo "${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
+	exit ;;
+    5000:UNIX_System_V:4.*:*)
+	FUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\///'`
+	FUJITSU_REL=`echo ${UNAME_RELEASE} | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`
+	echo "sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
+	exit ;;
+    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\ Embedded/OS:*:*)
+	echo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}
+	exit ;;
+    sparc*:BSD/OS:*:*)
+	echo sparc-unknown-bsdi${UNAME_RELEASE}
+	exit ;;
+    *:BSD/OS:*:*)
+	echo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}
+	exit ;;
+    *:FreeBSD:*:*)
+	UNAME_PROCESSOR=`/usr/bin/uname -p`
+	case ${UNAME_PROCESSOR} in
+	    amd64)
+		echo x86_64-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
+	    *)
+		echo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
+	esac
+	exit ;;
+    i*:CYGWIN*:*)
+	echo ${UNAME_MACHINE}-pc-cygwin
+	exit ;;
+    *:MINGW64*:*)
+	echo ${UNAME_MACHINE}-pc-mingw64
+	exit ;;
+    *:MINGW*:*)
+	echo ${UNAME_MACHINE}-pc-mingw32
+	exit ;;
+    *:MSYS*:*)
+	echo ${UNAME_MACHINE}-pc-msys
+	exit ;;
+    i*:windows32*:*)
+	# uname -m includes "-pc" on this system.
+	echo ${UNAME_MACHINE}-mingw32
+	exit ;;
+    i*:PW*:*)
+	echo ${UNAME_MACHINE}-pc-pw32
+	exit ;;
+    *:Interix*:*)
+	case ${UNAME_MACHINE} in
+	    x86)
+		echo i586-pc-interix${UNAME_RELEASE}
+		exit ;;
+	    authenticamd | genuineintel | EM64T)
+		echo x86_64-unknown-interix${UNAME_RELEASE}
+		exit ;;
+	    IA64)
+		echo ia64-unknown-interix${UNAME_RELEASE}
+		exit ;;
+	esac ;;
+    [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)
+	echo i${UNAME_MACHINE}-pc-mks
+	exit ;;
+    8664:Windows_NT:*)
+	echo x86_64-pc-mks
+	exit ;;
+    i*:Windows_NT*:* | Pentium*:Windows_NT*:*)
+	# How do we know it's Interix rather than the generic POSIX subsystem?
+	# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we
+	# UNAME_MACHINE based on the output of uname instead of i386?
+	echo i586-pc-interix
+	exit ;;
+    i*:UWIN*:*)
+	echo ${UNAME_MACHINE}-pc-uwin
+	exit ;;
+    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)
+	echo x86_64-unknown-cygwin
+	exit ;;
+    p*:CYGWIN*:*)
+	echo powerpcle-unknown-cygwin
+	exit ;;
+    prep*:SunOS:5.*:*)
+	echo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    *:GNU:*:*)
+	# the GNU system
+	echo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-${LIBC}`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`
+	exit ;;
+    *:GNU/*:*:*)
+	# other systems with GNU libc and userland
+	echo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr "[:upper:]" "[:lower:]"``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-${LIBC}
+	exit ;;
+    i*86:Minix:*:*)
+	echo ${UNAME_MACHINE}-pc-minix
+	exit ;;
+    aarch64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    aarch64_be:Linux:*:*)
+	UNAME_MACHINE=aarch64_be
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    alpha:Linux:*:*)
+	case `sed -n '/^cpu model/s/^.*: \(.*\)/\1/p' < /proc/cpuinfo` in
+	  EV5)   UNAME_MACHINE=alphaev5 ;;
+	  EV56)  UNAME_MACHINE=alphaev56 ;;
+	  PCA56) UNAME_MACHINE=alphapca56 ;;
+	  PCA57) UNAME_MACHINE=alphapca56 ;;
+	  EV6)   UNAME_MACHINE=alphaev6 ;;
+	  EV67)  UNAME_MACHINE=alphaev67 ;;
+	  EV68*) UNAME_MACHINE=alphaev68 ;;
+	esac
+	objdump --private-headers /bin/sh | grep -q ld.so.1
+	if test "$?" = 0 ; then LIBC=gnulibc1 ; fi
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    arc:Linux:*:* | arceb:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    arm*:Linux:*:*)
+	eval $set_cc_for_build
+	if echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \
+	    | grep -q __ARM_EABI__
+	then
+	    echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	else
+	    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \
+		| grep -q __ARM_PCS_VFP
+	    then
+		echo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabi
+	    else
+		echo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabihf
+	    fi
+	fi
+	exit ;;
+    avr32*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    cris:Linux:*:*)
+	echo ${UNAME_MACHINE}-axis-linux-${LIBC}
+	exit ;;
+    crisv32:Linux:*:*)
+	echo ${UNAME_MACHINE}-axis-linux-${LIBC}
+	exit ;;
+    e2k:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    frv:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    hexagon:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    i*86:Linux:*:*)
+	echo ${UNAME_MACHINE}-pc-linux-${LIBC}
+	exit ;;
+    ia64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    k1om:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    m32r*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    m68*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    mips:Linux:*:* | mips64:Linux:*:*)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#undef CPU
+	#undef ${UNAME_MACHINE}
+	#undef ${UNAME_MACHINE}el
+	#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)
+	CPU=${UNAME_MACHINE}el
+	#else
+	#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)
+	CPU=${UNAME_MACHINE}
+	#else
+	CPU=
+	#endif
+	#endif
+EOF
+	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`
+	test x"${CPU}" != x && { echo "${CPU}-unknown-linux-${LIBC}"; exit; }
+	;;
+    mips64el:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    openrisc*:Linux:*:*)
+	echo or1k-unknown-linux-${LIBC}
+	exit ;;
+    or32:Linux:*:* | or1k*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    padre:Linux:*:*)
+	echo sparc-unknown-linux-${LIBC}
+	exit ;;
+    parisc64:Linux:*:* | hppa64:Linux:*:*)
+	echo hppa64-unknown-linux-${LIBC}
+	exit ;;
+    parisc:Linux:*:* | hppa:Linux:*:*)
+	# Look for CPU level
+	case `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in
+	  PA7*) echo hppa1.1-unknown-linux-${LIBC} ;;
+	  PA8*) echo hppa2.0-unknown-linux-${LIBC} ;;
+	  *)    echo hppa-unknown-linux-${LIBC} ;;
+	esac
+	exit ;;
+    ppc64:Linux:*:*)
+	echo powerpc64-unknown-linux-${LIBC}
+	exit ;;
+    ppc:Linux:*:*)
+	echo powerpc-unknown-linux-${LIBC}
+	exit ;;
+    ppc64le:Linux:*:*)
+	echo powerpc64le-unknown-linux-${LIBC}
+	exit ;;
+    ppcle:Linux:*:*)
+	echo powerpcle-unknown-linux-${LIBC}
+	exit ;;
+    riscv32:Linux:*:* | riscv64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    s390:Linux:*:* | s390x:Linux:*:*)
+	echo ${UNAME_MACHINE}-ibm-linux-${LIBC}
+	exit ;;
+    sh64*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    sh*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    sparc:Linux:*:* | sparc64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    tile*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    vax:Linux:*:*)
+	echo ${UNAME_MACHINE}-dec-linux-${LIBC}
+	exit ;;
+    x86_64:Linux:*:*)
+	echo ${UNAME_MACHINE}-pc-linux-${LIBC}
+	exit ;;
+    xtensa*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
+    i*86:DYNIX/ptx:4*:*)
+	# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.
+	# earlier versions are messed up and put the nodename in both
+	# sysname and nodename.
+	echo i386-sequent-sysv4
+	exit ;;
+    i*86:UNIX_SV:4.2MP:2.*)
+	# Unixware is an offshoot of SVR4, but it has its own version
+	# number series starting with 2...
+	# I am not positive that other SVR4 systems won't match this,
+	# I just have to hope.  -- rms.
+	# Use sysv4.2uw... so that sysv4* matches it.
+	echo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}
+	exit ;;
+    i*86:OS/2:*:*)
+	# If we were able to find `uname', then EMX Unix compatibility
+	# is probably installed.
+	echo ${UNAME_MACHINE}-pc-os2-emx
+	exit ;;
+    i*86:XTS-300:*:STOP)
+	echo ${UNAME_MACHINE}-unknown-stop
+	exit ;;
+    i*86:atheos:*:*)
+	echo ${UNAME_MACHINE}-unknown-atheos
+	exit ;;
+    i*86:syllable:*:*)
+	echo ${UNAME_MACHINE}-pc-syllable
+	exit ;;
+    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)
+	echo i386-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    i*86:*DOS:*:*)
+	echo ${UNAME_MACHINE}-pc-msdosdjgpp
+	exit ;;
+    i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)
+	UNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\/MP$//'`
+	if grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then
+		echo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}
+	else
+		echo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}
+	fi
+	exit ;;
+    i*86:*:5:[678]*)
+	# UnixWare 7.x, OpenUNIX and OpenServer 6.
+	case `/bin/uname -X | grep "^Machine"` in
+	    *486*)	     UNAME_MACHINE=i486 ;;
+	    *Pentium)	     UNAME_MACHINE=i586 ;;
+	    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;
+	esac
+	echo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}
+	exit ;;
+    i*86:*:3.2:*)
+	if test -f /usr/options/cb.name; then
+		UNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`
+		echo ${UNAME_MACHINE}-pc-isc$UNAME_REL
+	elif /bin/uname -X 2>/dev/null >/dev/null ; then
+		UNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`
+		(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486
+		(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \
+			&& UNAME_MACHINE=i586
+		(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \
+			&& UNAME_MACHINE=i686
+		(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \
+			&& UNAME_MACHINE=i686
+		echo ${UNAME_MACHINE}-pc-sco$UNAME_REL
+	else
+		echo ${UNAME_MACHINE}-pc-sysv32
+	fi
+	exit ;;
+    pc:*:*:*)
+	# Left here for compatibility:
+	# uname -m prints for DJGPP always 'pc', but it prints nothing about
+	# the processor, so we play safe by assuming i586.
+	# Note: whatever this is, it MUST be the same as what config.sub
+	# prints for the "djgpp" host, or else GDB configure will decide that
+	# this is a cross-build.
+	echo i586-pc-msdosdjgpp
+	exit ;;
+    Intel:Mach:3*:*)
+	echo i386-pc-mach3
+	exit ;;
+    paragon:*:*:*)
+	echo i860-intel-osf1
+	exit ;;
+    i860:*:4.*:*) # i860-SVR4
+	if grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then
+	  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4
+	else # Add other i860-SVR4 vendors below as they are discovered.
+	  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4
+	fi
+	exit ;;
+    mini*:CTIX:SYS*5:*)
+	# "miniframe"
+	echo m68010-convergent-sysv
+	exit ;;
+    mc68k:UNIX:SYSTEM5:3.51m)
+	echo m68k-convergent-sysv
+	exit ;;
+    M680?0:D-NIX:5.3:*)
+	echo m68k-diab-dnix
+	exit ;;
+    M68*:*:R3V[5678]*:*)
+	test -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;
+    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)
+	OS_REL=''
+	test -r /etc/.relid \
+	&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
+	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+	  && { echo i486-ncr-sysv4.3${OS_REL}; exit; }
+	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
+	  && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;
+    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)
+	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+	  && { echo i486-ncr-sysv4; exit; } ;;
+    NCR*:*:4.2:* | MPRAS*:*:4.2:*)
+	OS_REL='.3'
+	test -r /etc/.relid \
+	    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
+	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+	    && { echo i486-ncr-sysv4.3${OS_REL}; exit; }
+	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
+	    && { echo i586-ncr-sysv4.3${OS_REL}; exit; }
+	/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \
+	    && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;
+    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)
+	echo m68k-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    mc68030:UNIX_System_V:4.*:*)
+	echo m68k-atari-sysv4
+	exit ;;
+    TSUNAMI:LynxOS:2.*:*)
+	echo sparc-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    rs6000:LynxOS:2.*:*)
+	echo rs6000-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)
+	echo powerpc-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    SM[BE]S:UNIX_SV:*:*)
+	echo mips-dde-sysv${UNAME_RELEASE}
+	exit ;;
+    RM*:ReliantUNIX-*:*:*)
+	echo mips-sni-sysv4
+	exit ;;
+    RM*:SINIX-*:*:*)
+	echo mips-sni-sysv4
+	exit ;;
+    *:SINIX-*:*:*)
+	if uname -p 2>/dev/null >/dev/null ; then
+		UNAME_MACHINE=`(uname -p) 2>/dev/null`
+		echo ${UNAME_MACHINE}-sni-sysv4
+	else
+		echo ns32k-sni-sysv
+	fi
+	exit ;;
+    PENTIUM:*:4.0*:*)	# Unisys `ClearPath HMP IX 4000' SVR4/MP effort
+			# says <Richard.M.Bartel@ccMail.Census.GOV>
+	echo i586-unisys-sysv4
+	exit ;;
+    *:UNIX_System_V:4*:FTX*)
+	# From Gerald Hewes <hewes@openmarket.com>.
+	# How about differentiating between stratus architectures? -djm
+	echo hppa1.1-stratus-sysv4
+	exit ;;
+    *:*:*:FTX*)
+	# From seanf@swdc.stratus.com.
+	echo i860-stratus-sysv4
+	exit ;;
+    i*86:VOS:*:*)
+	# From Paul.Green@stratus.com.
+	echo ${UNAME_MACHINE}-stratus-vos
+	exit ;;
+    *:VOS:*:*)
+	# From Paul.Green@stratus.com.
+	echo hppa1.1-stratus-vos
+	exit ;;
+    mc68*:A/UX:*:*)
+	echo m68k-apple-aux${UNAME_RELEASE}
+	exit ;;
+    news*:NEWS-OS:6*:*)
+	echo mips-sony-newsos6
+	exit ;;
+    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)
+	if [ -d /usr/nec ]; then
+		echo mips-nec-sysv${UNAME_RELEASE}
+	else
+		echo mips-unknown-sysv${UNAME_RELEASE}
+	fi
+	exit ;;
+    BeBox:BeOS:*:*)	# BeOS running on hardware made by Be, PPC only.
+	echo powerpc-be-beos
+	exit ;;
+    BeMac:BeOS:*:*)	# BeOS running on Mac or Mac clone, PPC only.
+	echo powerpc-apple-beos
+	exit ;;
+    BePC:BeOS:*:*)	# BeOS running on Intel PC compatible.
+	echo i586-pc-beos
+	exit ;;
+    BePC:Haiku:*:*)	# Haiku running on Intel PC compatible.
+	echo i586-pc-haiku
+	exit ;;
+    x86_64:Haiku:*:*)
+	echo x86_64-unknown-haiku
+	exit ;;
+    SX-4:SUPER-UX:*:*)
+	echo sx4-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-5:SUPER-UX:*:*)
+	echo sx5-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-6:SUPER-UX:*:*)
+	echo sx6-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-7:SUPER-UX:*:*)
+	echo sx7-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-8:SUPER-UX:*:*)
+	echo sx8-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-8R:SUPER-UX:*:*)
+	echo sx8r-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-ACE:SUPER-UX:*:*)
+	echo sxace-nec-superux${UNAME_RELEASE}
+	exit ;;
+    Power*:Rhapsody:*:*)
+	echo powerpc-apple-rhapsody${UNAME_RELEASE}
+	exit ;;
+    *:Rhapsody:*:*)
+	echo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}
+	exit ;;
+    *:Darwin:*:*)
+	UNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown
+	eval $set_cc_for_build
+	if test "$UNAME_PROCESSOR" = unknown ; then
+	    UNAME_PROCESSOR=powerpc
+	fi
+	if test `echo "$UNAME_RELEASE" | sed -e 's/\..*//'` -le 10 ; then
+	    if [ "$CC_FOR_BUILD" != no_compiler_found ]; then
+		if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \
+		    (CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) | \
+		    grep IS_64BIT_ARCH >/dev/null
+		then
+		    case $UNAME_PROCESSOR in
+			i386) UNAME_PROCESSOR=x86_64 ;;
+			powerpc) UNAME_PROCESSOR=powerpc64 ;;
+		    esac
+		fi
+	    fi
+	elif test "$UNAME_PROCESSOR" = i386 ; then
+	    # Avoid executing cc on OS X 10.9, as it ships with a stub
+	    # that puts up a graphical alert prompting to install
+	    # developer tools.  Any system running Mac OS X 10.7 or
+	    # later (Darwin 11 and later) is required to have a 64-bit
+	    # processor. This is not true of the ARM version of Darwin
+	    # that Apple uses in portable devices.
+	    UNAME_PROCESSOR=x86_64
+	fi
+	echo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}
+	exit ;;
+    *:procnto*:*:* | *:QNX:[0123456789]*:*)
+	UNAME_PROCESSOR=`uname -p`
+	if test "$UNAME_PROCESSOR" = x86; then
+		UNAME_PROCESSOR=i386
+		UNAME_MACHINE=pc
+	fi
+	echo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}
+	exit ;;
+    *:QNX:*:4*)
+	echo i386-pc-qnx
+	exit ;;
+    NEO-?:NONSTOP_KERNEL:*:*)
+	echo neo-tandem-nsk${UNAME_RELEASE}
+	exit ;;
+    NSE-*:NONSTOP_KERNEL:*:*)
+	echo nse-tandem-nsk${UNAME_RELEASE}
+	exit ;;
+    NSR-?:NONSTOP_KERNEL:*:*)
+	echo nsr-tandem-nsk${UNAME_RELEASE}
+	exit ;;
+    *:NonStop-UX:*:*)
+	echo mips-compaq-nonstopux
+	exit ;;
+    BS2000:POSIX*:*:*)
+	echo bs2000-siemens-sysv
+	exit ;;
+    DS/*:UNIX_System_V:*:*)
+	echo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}
+	exit ;;
+    *:Plan9:*:*)
+	# "uname -m" is not consistent, so use $cputype instead. 386
+	# is converted to i386 for consistency with other x86
+	# operating systems.
+	if test "$cputype" = 386; then
+	    UNAME_MACHINE=i386
+	else
+	    UNAME_MACHINE="$cputype"
+	fi
+	echo ${UNAME_MACHINE}-unknown-plan9
+	exit ;;
+    *:TOPS-10:*:*)
+	echo pdp10-unknown-tops10
+	exit ;;
+    *:TENEX:*:*)
+	echo pdp10-unknown-tenex
+	exit ;;
+    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)
+	echo pdp10-dec-tops20
+	exit ;;
+    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)
+	echo pdp10-xkl-tops20
+	exit ;;
+    *:TOPS-20:*:*)
+	echo pdp10-unknown-tops20
+	exit ;;
+    *:ITS:*:*)
+	echo pdp10-unknown-its
+	exit ;;
+    SEI:*:*:SEIUX)
+	echo mips-sei-seiux${UNAME_RELEASE}
+	exit ;;
+    *:DragonFly:*:*)
+	echo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
+	exit ;;
+    *:*VMS:*:*)
+	UNAME_MACHINE=`(uname -p) 2>/dev/null`
+	case "${UNAME_MACHINE}" in
+	    A*) echo alpha-dec-vms ; exit ;;
+	    I*) echo ia64-dec-vms ; exit ;;
+	    V*) echo vax-dec-vms ; exit ;;
+	esac ;;
+    *:XENIX:*:SysV)
+	echo i386-pc-xenix
+	exit ;;
+    i*86:skyos:*:*)
+	echo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE} | sed -e 's/ .*$//'`
+	exit ;;
+    i*86:rdos:*:*)
+	echo ${UNAME_MACHINE}-pc-rdos
+	exit ;;
+    i*86:AROS:*:*)
+	echo ${UNAME_MACHINE}-pc-aros
+	exit ;;
+    x86_64:VMkernel:*:*)
+	echo ${UNAME_MACHINE}-unknown-esx
+	exit ;;
+    amd64:Isilon\ OneFS:*:*)
+	echo x86_64-unknown-onefs
+	exit ;;
+esac
+
+cat >&2 <<EOF
+$0: unable to guess system type
+
+This script (version $timestamp), has failed to recognize the
+operating system you are using. If your script is old, overwrite
+config.guess and config.sub with the latest versions from:
+
+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess
+and
+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub
+
+If $0 has already been updated, send the following data and any
+information you think might be pertinent to config-patches@gnu.org to
+provide the necessary information to handle your system.
+
+config.guess timestamp = $timestamp
+
+uname -m = `(uname -m) 2>/dev/null || echo unknown`
+uname -r = `(uname -r) 2>/dev/null || echo unknown`
+uname -s = `(uname -s) 2>/dev/null || echo unknown`
+uname -v = `(uname -v) 2>/dev/null || echo unknown`
+
+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`
+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`
+
+hostinfo               = `(hostinfo) 2>/dev/null`
+/bin/universe          = `(/bin/universe) 2>/dev/null`
+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`
+/bin/arch              = `(/bin/arch) 2>/dev/null`
+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`
+
+UNAME_MACHINE = ${UNAME_MACHINE}
+UNAME_RELEASE = ${UNAME_RELEASE}
+UNAME_SYSTEM  = ${UNAME_SYSTEM}
+UNAME_VERSION = ${UNAME_VERSION}
+EOF
+
+exit 1
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "timestamp='"
+# time-stamp-format: "%:y-%02m-%02d"
+# time-stamp-end: "'"
+# End:
diff -uNr perl-5.26.1.orig/cnf/config.sub perl-5.26.1/cnf/config.sub
--- perl-5.26.1.orig/cnf/config.sub	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/config.sub	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,1823 @@
+#! /bin/sh
+# Configuration validation subroutine script.
+#   Copyright 1992-2016 Free Software Foundation, Inc.
+
+timestamp='2016-09-05'
+
+# This file is free software; you can redistribute it and/or modify it
+# under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 3 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, see <http://www.gnu.org/licenses/>.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that
+# program.  This Exception is an additional permission under section 7
+# of the GNU General Public License, version 3 ("GPLv3").
+
+
+# Please send patches to <config-patches@gnu.org>.
+#
+# Configuration subroutine to validate and canonicalize a configuration type.
+# Supply the specified configuration type as an argument.
+# If it is invalid, we print an error message on stderr and exit with code 1.
+# Otherwise, we print the canonical config type on stdout and succeed.
+
+# You can get the latest version of this script from:
+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub
+
+# This file is supposed to be the same for all GNU packages
+# and recognize all the CPU types, system types and aliases
+# that are meaningful with *any* GNU software.
+# Each package is responsible for reporting which valid configurations
+# it does not support.  The user should be able to distinguish
+# a failure to support a valid configuration from a meaningless
+# configuration.
+
+# The goal of this file is to map all the various variations of a given
+# machine specification into a single specification in the form:
+#	CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM
+# or in some cases, the newer four-part form:
+#	CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM
+# It is wrong to echo any other type of specification.
+
+me=`echo "$0" | sed -e 's,.*/,,'`
+
+usage="\
+Usage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS
+
+Canonicalize a configuration name.
+
+Operation modes:
+  -h, --help         print this help, then exit
+  -t, --time-stamp   print date of last modification, then exit
+  -v, --version      print version number, then exit
+
+Report bugs and patches to <config-patches@gnu.org>."
+
+version="\
+GNU config.sub ($timestamp)
+
+Copyright 1992-2016 Free Software Foundation, Inc.
+
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+
+help="
+Try \`$me --help' for more information."
+
+# Parse command line
+while test $# -gt 0 ; do
+  case $1 in
+    --time-stamp | --time* | -t )
+       echo "$timestamp" ; exit ;;
+    --version | -v )
+       echo "$version" ; exit ;;
+    --help | --h* | -h )
+       echo "$usage"; exit ;;
+    -- )     # Stop option processing
+       shift; break ;;
+    - )	# Use stdin as input.
+       break ;;
+    -* )
+       echo "$me: invalid option $1$help"
+       exit 1 ;;
+
+    *local*)
+       # First pass through any local machine types.
+       echo $1
+       exit ;;
+
+    * )
+       break ;;
+  esac
+done
+
+case $# in
+ 0) echo "$me: missing argument$help" >&2
+    exit 1;;
+ 1) ;;
+ *) echo "$me: too many arguments$help" >&2
+    exit 1;;
+esac
+
+# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).
+# Here we must recognize all the valid KERNEL-OS combinations.
+maybe_os=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\2/'`
+case $maybe_os in
+  nto-qnx* | linux-gnu* | linux-android* | linux-dietlibc | linux-newlib* | \
+  linux-musl* | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | \
+  knetbsd*-gnu* | netbsd*-gnu* | netbsd*-eabi* | \
+  kopensolaris*-gnu* | cloudabi*-eabi* | \
+  storm-chaos* | os2-emx* | rtmk-nova*)
+    os=-$maybe_os
+    basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
+    ;;
+  android-linux)
+    os=-linux-android
+    basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`-unknown
+    ;;
+  *)
+    basic_machine=`echo $1 | sed 's/-[^-]*$//'`
+    if [ $basic_machine != $1 ]
+    then os=`echo $1 | sed 's/.*-/-/'`
+    else os=; fi
+    ;;
+esac
+
+### Let's recognize common machines as not being operating systems so
+### that things like config.sub decstation-3100 work.  We also
+### recognize some manufacturers as not being operating systems, so we
+### can provide default operating systems below.
+case $os in
+	-sun*os*)
+		# Prevent following clause from handling this invalid input.
+		;;
+	-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \
+	-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \
+	-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \
+	-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\
+	-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \
+	-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \
+	-apple | -axis | -knuth | -cray | -microblaze*)
+		os=
+		basic_machine=$1
+		;;
+	-bluegene*)
+		os=-cnk
+		;;
+	-sim | -cisco | -oki | -wec | -winbond)
+		os=
+		basic_machine=$1
+		;;
+	-scout)
+		;;
+	-wrs)
+		os=-vxworks
+		basic_machine=$1
+		;;
+	-chorusos*)
+		os=-chorusos
+		basic_machine=$1
+		;;
+	-chorusrdb)
+		os=-chorusrdb
+		basic_machine=$1
+		;;
+	-hiux*)
+		os=-hiuxwe2
+		;;
+	-sco6)
+		os=-sco5v6
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco5)
+		os=-sco3.2v5
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco4)
+		os=-sco3.2v4
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco3.2.[4-9]*)
+		os=`echo $os | sed -e 's/sco3.2./sco3.2v/'`
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco3.2v[4-9]*)
+		# Don't forget version if it is 3.2v4 or newer.
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco5v6*)
+		# Don't forget version if it is 3.2v4 or newer.
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco*)
+		os=-sco3.2v2
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-udk*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-isc)
+		os=-isc2.2
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-clix*)
+		basic_machine=clipper-intergraph
+		;;
+	-isc*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-lynx*178)
+		os=-lynxos178
+		;;
+	-lynx*5)
+		os=-lynxos5
+		;;
+	-lynx*)
+		os=-lynxos
+		;;
+	-ptx*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-sequent/'`
+		;;
+	-windowsnt*)
+		os=`echo $os | sed -e 's/windowsnt/winnt/'`
+		;;
+	-psos*)
+		os=-psos
+		;;
+	-mint | -mint[0-9]*)
+		basic_machine=m68k-atari
+		os=-mint
+		;;
+esac
+
+# Decode aliases for certain CPU-COMPANY combinations.
+case $basic_machine in
+	# Recognize the basic CPU types without company name.
+	# Some are omitted here because they have special meanings below.
+	1750a | 580 \
+	| a29k \
+	| aarch64 | aarch64_be \
+	| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \
+	| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \
+	| am33_2.0 \
+	| arc | arceb \
+	| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv7[arm] \
+	| avr | avr32 \
+	| ba \
+	| be32 | be64 \
+	| bfin \
+	| c4x | c8051 | clipper \
+	| d10v | d30v | dlx | dsp16xx \
+	| e2k | epiphany \
+	| fido | fr30 | frv | ft32 \
+	| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \
+	| hexagon \
+	| i370 | i860 | i960 | ia64 \
+	| ip2k | iq2000 \
+	| k1om \
+	| le32 | le64 \
+	| lm32 \
+	| m32c | m32r | m32rle | m68000 | m68k | m88k \
+	| maxq | mb | microblaze | microblazeel | mcore | mep | metag \
+	| mips | mipsbe | mipseb | mipsel | mipsle \
+	| mips16 \
+	| mips64 | mips64el \
+	| mips64octeon | mips64octeonel \
+	| mips64orion | mips64orionel \
+	| mips64r5900 | mips64r5900el \
+	| mips64vr | mips64vrel \
+	| mips64vr4100 | mips64vr4100el \
+	| mips64vr4300 | mips64vr4300el \
+	| mips64vr5000 | mips64vr5000el \
+	| mips64vr5900 | mips64vr5900el \
+	| mipsisa32 | mipsisa32el \
+	| mipsisa32r2 | mipsisa32r2el \
+	| mipsisa32r6 | mipsisa32r6el \
+	| mipsisa64 | mipsisa64el \
+	| mipsisa64r2 | mipsisa64r2el \
+	| mipsisa64r6 | mipsisa64r6el \
+	| mipsisa64sb1 | mipsisa64sb1el \
+	| mipsisa64sr71k | mipsisa64sr71kel \
+	| mipsr5900 | mipsr5900el \
+	| mipstx39 | mipstx39el \
+	| mn10200 | mn10300 \
+	| moxie \
+	| mt \
+	| msp430 \
+	| nds32 | nds32le | nds32be \
+	| nios | nios2 | nios2eb | nios2el \
+	| ns16k | ns32k \
+	| open8 | or1k | or1knd | or32 \
+	| pdp10 | pdp11 | pj | pjl \
+	| powerpc | powerpc64 | powerpc64le | powerpcle \
+	| pyramid \
+	| riscv32 | riscv64 \
+	| rl78 | rx \
+	| score \
+	| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[234]eb | sheb | shbe | shle | sh[1234]le | sh3ele \
+	| sh64 | sh64le \
+	| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \
+	| sparcv8 | sparcv9 | sparcv9b | sparcv9v \
+	| spu \
+	| tahoe | tic4x | tic54x | tic55x | tic6x | tic80 | tron \
+	| ubicom32 \
+	| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \
+	| visium \
+	| we32k \
+	| x86 | xc16x | xstormy16 | xtensa \
+	| z8k | z80)
+		basic_machine=$basic_machine-unknown
+		;;
+	c54x)
+		basic_machine=tic54x-unknown
+		;;
+	c55x)
+		basic_machine=tic55x-unknown
+		;;
+	c6x)
+		basic_machine=tic6x-unknown
+		;;
+	leon|leon[3-9])
+		basic_machine=sparc-$basic_machine
+		;;
+	m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | nvptx | picochip)
+		basic_machine=$basic_machine-unknown
+		os=-none
+		;;
+	m88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)
+		;;
+	ms1)
+		basic_machine=mt-unknown
+		;;
+
+	strongarm | thumb | xscale)
+		basic_machine=arm-unknown
+		;;
+	xgate)
+		basic_machine=$basic_machine-unknown
+		os=-none
+		;;
+	xscaleeb)
+		basic_machine=armeb-unknown
+		;;
+
+	xscaleel)
+		basic_machine=armel-unknown
+		;;
+
+	# We use `pc' rather than `unknown'
+	# because (1) that's what they normally are, and
+	# (2) the word "unknown" tends to confuse beginning users.
+	i*86 | x86_64)
+	  basic_machine=$basic_machine-pc
+	  ;;
+	# Object if more than one company name word.
+	*-*-*)
+		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
+		exit 1
+		;;
+	# Recognize the basic CPU types with company name.
+	580-* \
+	| a29k-* \
+	| aarch64-* | aarch64_be-* \
+	| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \
+	| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \
+	| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \
+	| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \
+	| avr-* | avr32-* \
+	| ba-* \
+	| be32-* | be64-* \
+	| bfin-* | bs2000-* \
+	| c[123]* | c30-* | [cjt]90-* | c4x-* \
+	| c8051-* | clipper-* | craynv-* | cydra-* \
+	| d10v-* | d30v-* | dlx-* \
+	| e2k-* | elxsi-* \
+	| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \
+	| h8300-* | h8500-* \
+	| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \
+	| hexagon-* \
+	| i*86-* | i860-* | i960-* | ia64-* \
+	| ip2k-* | iq2000-* \
+	| k1om-* \
+	| le32-* | le64-* \
+	| lm32-* \
+	| m32c-* | m32r-* | m32rle-* \
+	| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \
+	| m88110-* | m88k-* | maxq-* | mcore-* | metag-* \
+	| microblaze-* | microblazeel-* \
+	| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \
+	| mips16-* \
+	| mips64-* | mips64el-* \
+	| mips64octeon-* | mips64octeonel-* \
+	| mips64orion-* | mips64orionel-* \
+	| mips64r5900-* | mips64r5900el-* \
+	| mips64vr-* | mips64vrel-* \
+	| mips64vr4100-* | mips64vr4100el-* \
+	| mips64vr4300-* | mips64vr4300el-* \
+	| mips64vr5000-* | mips64vr5000el-* \
+	| mips64vr5900-* | mips64vr5900el-* \
+	| mipsisa32-* | mipsisa32el-* \
+	| mipsisa32r2-* | mipsisa32r2el-* \
+	| mipsisa32r6-* | mipsisa32r6el-* \
+	| mipsisa64-* | mipsisa64el-* \
+	| mipsisa64r2-* | mipsisa64r2el-* \
+	| mipsisa64r6-* | mipsisa64r6el-* \
+	| mipsisa64sb1-* | mipsisa64sb1el-* \
+	| mipsisa64sr71k-* | mipsisa64sr71kel-* \
+	| mipsr5900-* | mipsr5900el-* \
+	| mipstx39-* | mipstx39el-* \
+	| mmix-* \
+	| mt-* \
+	| msp430-* \
+	| nds32-* | nds32le-* | nds32be-* \
+	| nios-* | nios2-* | nios2eb-* | nios2el-* \
+	| none-* | np1-* | ns16k-* | ns32k-* \
+	| open8-* \
+	| or1k*-* \
+	| orion-* \
+	| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \
+	| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \
+	| pyramid-* \
+	| riscv32-* | riscv64-* \
+	| rl78-* | romp-* | rs6000-* | rx-* \
+	| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \
+	| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \
+	| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \
+	| sparclite-* \
+	| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx*-* \
+	| tahoe-* \
+	| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \
+	| tile*-* \
+	| tron-* \
+	| ubicom32-* \
+	| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \
+	| vax-* \
+	| visium-* \
+	| we32k-* \
+	| x86-* | x86_64-* | xc16x-* | xps100-* \
+	| xstormy16-* | xtensa*-* \
+	| ymp-* \
+	| z8k-* | z80-*)
+		;;
+	# Recognize the basic CPU types without company name, with glob match.
+	xtensa*)
+		basic_machine=$basic_machine-unknown
+		;;
+	# Recognize the various machine names and aliases which stand
+	# for a CPU type and a company and sometimes even an OS.
+	386bsd)
+		basic_machine=i386-unknown
+		os=-bsd
+		;;
+	3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)
+		basic_machine=m68000-att
+		;;
+	3b*)
+		basic_machine=we32k-att
+		;;
+	a29khif)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+	abacus)
+		basic_machine=abacus-unknown
+		;;
+	adobe68k)
+		basic_machine=m68010-adobe
+		os=-scout
+		;;
+	alliant | fx80)
+		basic_machine=fx80-alliant
+		;;
+	altos | altos3068)
+		basic_machine=m68k-altos
+		;;
+	am29k)
+		basic_machine=a29k-none
+		os=-bsd
+		;;
+	amd64)
+		basic_machine=x86_64-pc
+		;;
+	amd64-*)
+		basic_machine=x86_64-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	amdahl)
+		basic_machine=580-amdahl
+		os=-sysv
+		;;
+	amiga | amiga-*)
+		basic_machine=m68k-unknown
+		;;
+	amigaos | amigados)
+		basic_machine=m68k-unknown
+		os=-amigaos
+		;;
+	amigaunix | amix)
+		basic_machine=m68k-unknown
+		os=-sysv4
+		;;
+	apollo68)
+		basic_machine=m68k-apollo
+		os=-sysv
+		;;
+	apollo68bsd)
+		basic_machine=m68k-apollo
+		os=-bsd
+		;;
+	aros)
+		basic_machine=i386-pc
+		os=-aros
+		;;
+	asmjs)
+		basic_machine=asmjs-unknown
+		;;
+	aux)
+		basic_machine=m68k-apple
+		os=-aux
+		;;
+	balance)
+		basic_machine=ns32k-sequent
+		os=-dynix
+		;;
+	blackfin)
+		basic_machine=bfin-unknown
+		os=-linux
+		;;
+	blackfin-*)
+		basic_machine=bfin-`echo $basic_machine | sed 's/^[^-]*-//'`
+		os=-linux
+		;;
+	bluegene*)
+		basic_machine=powerpc-ibm
+		os=-cnk
+		;;
+	c54x-*)
+		basic_machine=tic54x-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	c55x-*)
+		basic_machine=tic55x-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	c6x-*)
+		basic_machine=tic6x-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	c90)
+		basic_machine=c90-cray
+		os=-unicos
+		;;
+	cegcc)
+		basic_machine=arm-unknown
+		os=-cegcc
+		;;
+	convex-c1)
+		basic_machine=c1-convex
+		os=-bsd
+		;;
+	convex-c2)
+		basic_machine=c2-convex
+		os=-bsd
+		;;
+	convex-c32)
+		basic_machine=c32-convex
+		os=-bsd
+		;;
+	convex-c34)
+		basic_machine=c34-convex
+		os=-bsd
+		;;
+	convex-c38)
+		basic_machine=c38-convex
+		os=-bsd
+		;;
+	cray | j90)
+		basic_machine=j90-cray
+		os=-unicos
+		;;
+	craynv)
+		basic_machine=craynv-cray
+		os=-unicosmp
+		;;
+	cr16 | cr16-*)
+		basic_machine=cr16-unknown
+		os=-elf
+		;;
+	crds | unos)
+		basic_machine=m68k-crds
+		;;
+	crisv32 | crisv32-* | etraxfs*)
+		basic_machine=crisv32-axis
+		;;
+	cris | cris-* | etrax*)
+		basic_machine=cris-axis
+		;;
+	crx)
+		basic_machine=crx-unknown
+		os=-elf
+		;;
+	da30 | da30-*)
+		basic_machine=m68k-da30
+		;;
+	decstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)
+		basic_machine=mips-dec
+		;;
+	decsystem10* | dec10*)
+		basic_machine=pdp10-dec
+		os=-tops10
+		;;
+	decsystem20* | dec20*)
+		basic_machine=pdp10-dec
+		os=-tops20
+		;;
+	delta | 3300 | motorola-3300 | motorola-delta \
+	      | 3300-motorola | delta-motorola)
+		basic_machine=m68k-motorola
+		;;
+	delta88)
+		basic_machine=m88k-motorola
+		os=-sysv3
+		;;
+	dicos)
+		basic_machine=i686-pc
+		os=-dicos
+		;;
+	djgpp)
+		basic_machine=i586-pc
+		os=-msdosdjgpp
+		;;
+	dpx20 | dpx20-*)
+		basic_machine=rs6000-bull
+		os=-bosx
+		;;
+	dpx2* | dpx2*-bull)
+		basic_machine=m68k-bull
+		os=-sysv3
+		;;
+	e500v[12])
+		basic_machine=powerpc-unknown
+		os=$os"spe"
+		;;
+	e500v[12]-*)
+		basic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`
+		os=$os"spe"
+		;;
+	ebmon29k)
+		basic_machine=a29k-amd
+		os=-ebmon
+		;;
+	elxsi)
+		basic_machine=elxsi-elxsi
+		os=-bsd
+		;;
+	encore | umax | mmax)
+		basic_machine=ns32k-encore
+		;;
+	es1800 | OSE68k | ose68k | ose | OSE)
+		basic_machine=m68k-ericsson
+		os=-ose
+		;;
+	fx2800)
+		basic_machine=i860-alliant
+		;;
+	genix)
+		basic_machine=ns32k-ns
+		;;
+	gmicro)
+		basic_machine=tron-gmicro
+		os=-sysv
+		;;
+	go32)
+		basic_machine=i386-pc
+		os=-go32
+		;;
+	h3050r* | hiux*)
+		basic_machine=hppa1.1-hitachi
+		os=-hiuxwe2
+		;;
+	h8300hms)
+		basic_machine=h8300-hitachi
+		os=-hms
+		;;
+	h8300xray)
+		basic_machine=h8300-hitachi
+		os=-xray
+		;;
+	h8500hms)
+		basic_machine=h8500-hitachi
+		os=-hms
+		;;
+	harris)
+		basic_machine=m88k-harris
+		os=-sysv3
+		;;
+	hp300-*)
+		basic_machine=m68k-hp
+		;;
+	hp300bsd)
+		basic_machine=m68k-hp
+		os=-bsd
+		;;
+	hp300hpux)
+		basic_machine=m68k-hp
+		os=-hpux
+		;;
+	hp3k9[0-9][0-9] | hp9[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hp9k2[0-9][0-9] | hp9k31[0-9])
+		basic_machine=m68000-hp
+		;;
+	hp9k3[2-9][0-9])
+		basic_machine=m68k-hp
+		;;
+	hp9k6[0-9][0-9] | hp6[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hp9k7[0-79][0-9] | hp7[0-79][0-9])
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k78[0-9] | hp78[0-9])
+		# FIXME: really hppa2.0-hp
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)
+		# FIXME: really hppa2.0-hp
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[0-9][13679] | hp8[0-9][13679])
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[0-9][0-9] | hp8[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hppa-next)
+		os=-nextstep3
+		;;
+	hppaosf)
+		basic_machine=hppa1.1-hp
+		os=-osf
+		;;
+	hppro)
+		basic_machine=hppa1.1-hp
+		os=-proelf
+		;;
+	i370-ibm* | ibm*)
+		basic_machine=i370-ibm
+		;;
+	i*86v32)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-sysv32
+		;;
+	i*86v4*)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-sysv4
+		;;
+	i*86v)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-sysv
+		;;
+	i*86sol2)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-solaris2
+		;;
+	i386mach)
+		basic_machine=i386-mach
+		os=-mach
+		;;
+	i386-vsta | vsta)
+		basic_machine=i386-unknown
+		os=-vsta
+		;;
+	iris | iris4d)
+		basic_machine=mips-sgi
+		case $os in
+		    -irix*)
+			;;
+		    *)
+			os=-irix4
+			;;
+		esac
+		;;
+	isi68 | isi)
+		basic_machine=m68k-isi
+		os=-sysv
+		;;
+	leon-*|leon[3-9]-*)
+		basic_machine=sparc-`echo $basic_machine | sed 's/-.*//'`
+		;;
+	m68knommu)
+		basic_machine=m68k-unknown
+		os=-linux
+		;;
+	m68knommu-*)
+		basic_machine=m68k-`echo $basic_machine | sed 's/^[^-]*-//'`
+		os=-linux
+		;;
+	m88k-omron*)
+		basic_machine=m88k-omron
+		;;
+	magnum | m3230)
+		basic_machine=mips-mips
+		os=-sysv
+		;;
+	merlin)
+		basic_machine=ns32k-utek
+		os=-sysv
+		;;
+	microblaze*)
+		basic_machine=microblaze-xilinx
+		;;
+	mingw64)
+		basic_machine=x86_64-pc
+		os=-mingw64
+		;;
+	mingw32)
+		basic_machine=i686-pc
+		os=-mingw32
+		;;
+	mingw32ce)
+		basic_machine=arm-unknown
+		os=-mingw32ce
+		;;
+	miniframe)
+		basic_machine=m68000-convergent
+		;;
+	*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)
+		basic_machine=m68k-atari
+		os=-mint
+		;;
+	mips3*-*)
+		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`
+		;;
+	mips3*)
+		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown
+		;;
+	monitor)
+		basic_machine=m68k-rom68k
+		os=-coff
+		;;
+	morphos)
+		basic_machine=powerpc-unknown
+		os=-morphos
+		;;
+	moxiebox)
+		basic_machine=moxie-unknown
+		os=-moxiebox
+		;;
+	msdos)
+		basic_machine=i386-pc
+		os=-msdos
+		;;
+	ms1-*)
+		basic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`
+		;;
+	msys)
+		basic_machine=i686-pc
+		os=-msys
+		;;
+	mvs)
+		basic_machine=i370-ibm
+		os=-mvs
+		;;
+	nacl)
+		basic_machine=le32-unknown
+		os=-nacl
+		;;
+	ncr3000)
+		basic_machine=i486-ncr
+		os=-sysv4
+		;;
+	netbsd386)
+		basic_machine=i386-unknown
+		os=-netbsd
+		;;
+	netwinder)
+		basic_machine=armv4l-rebel
+		os=-linux
+		;;
+	news | news700 | news800 | news900)
+		basic_machine=m68k-sony
+		os=-newsos
+		;;
+	news1000)
+		basic_machine=m68030-sony
+		os=-newsos
+		;;
+	news-3600 | risc-news)
+		basic_machine=mips-sony
+		os=-newsos
+		;;
+	necv70)
+		basic_machine=v70-nec
+		os=-sysv
+		;;
+	next | m*-next )
+		basic_machine=m68k-next
+		case $os in
+		    -nextstep* )
+			;;
+		    -ns2*)
+		      os=-nextstep2
+			;;
+		    *)
+		      os=-nextstep3
+			;;
+		esac
+		;;
+	nh3000)
+		basic_machine=m68k-harris
+		os=-cxux
+		;;
+	nh[45]000)
+		basic_machine=m88k-harris
+		os=-cxux
+		;;
+	nindy960)
+		basic_machine=i960-intel
+		os=-nindy
+		;;
+	mon960)
+		basic_machine=i960-intel
+		os=-mon960
+		;;
+	nonstopux)
+		basic_machine=mips-compaq
+		os=-nonstopux
+		;;
+	np1)
+		basic_machine=np1-gould
+		;;
+	neo-tandem)
+		basic_machine=neo-tandem
+		;;
+	nse-tandem)
+		basic_machine=nse-tandem
+		;;
+	nsr-tandem)
+		basic_machine=nsr-tandem
+		;;
+	op50n-* | op60c-*)
+		basic_machine=hppa1.1-oki
+		os=-proelf
+		;;
+	openrisc | openrisc-*)
+		basic_machine=or32-unknown
+		;;
+	os400)
+		basic_machine=powerpc-ibm
+		os=-os400
+		;;
+	OSE68000 | ose68000)
+		basic_machine=m68000-ericsson
+		os=-ose
+		;;
+	os68k)
+		basic_machine=m68k-none
+		os=-os68k
+		;;
+	pa-hitachi)
+		basic_machine=hppa1.1-hitachi
+		os=-hiuxwe2
+		;;
+	paragon)
+		basic_machine=i860-intel
+		os=-osf
+		;;
+	parisc)
+		basic_machine=hppa-unknown
+		os=-linux
+		;;
+	parisc-*)
+		basic_machine=hppa-`echo $basic_machine | sed 's/^[^-]*-//'`
+		os=-linux
+		;;
+	pbd)
+		basic_machine=sparc-tti
+		;;
+	pbb)
+		basic_machine=m68k-tti
+		;;
+	pc532 | pc532-*)
+		basic_machine=ns32k-pc532
+		;;
+	pc98)
+		basic_machine=i386-pc
+		;;
+	pc98-*)
+		basic_machine=i386-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentium | p5 | k5 | k6 | nexgen | viac3)
+		basic_machine=i586-pc
+		;;
+	pentiumpro | p6 | 6x86 | athlon | athlon_*)
+		basic_machine=i686-pc
+		;;
+	pentiumii | pentium2 | pentiumiii | pentium3)
+		basic_machine=i686-pc
+		;;
+	pentium4)
+		basic_machine=i786-pc
+		;;
+	pentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)
+		basic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentiumpro-* | p6-* | 6x86-* | athlon-*)
+		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)
+		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentium4-*)
+		basic_machine=i786-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pn)
+		basic_machine=pn-gould
+		;;
+	power)	basic_machine=power-ibm
+		;;
+	ppc | ppcbe)	basic_machine=powerpc-unknown
+		;;
+	ppc-* | ppcbe-*)
+		basic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppcle | powerpclittle)
+		basic_machine=powerpcle-unknown
+		;;
+	ppcle-* | powerpclittle-*)
+		basic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppc64)	basic_machine=powerpc64-unknown
+		;;
+	ppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppc64le | powerpc64little)
+		basic_machine=powerpc64le-unknown
+		;;
+	ppc64le-* | powerpc64little-*)
+		basic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ps2)
+		basic_machine=i386-ibm
+		;;
+	pw32)
+		basic_machine=i586-unknown
+		os=-pw32
+		;;
+	rdos | rdos64)
+		basic_machine=x86_64-pc
+		os=-rdos
+		;;
+	rdos32)
+		basic_machine=i386-pc
+		os=-rdos
+		;;
+	rom68k)
+		basic_machine=m68k-rom68k
+		os=-coff
+		;;
+	rm[46]00)
+		basic_machine=mips-siemens
+		;;
+	rtpc | rtpc-*)
+		basic_machine=romp-ibm
+		;;
+	s390 | s390-*)
+		basic_machine=s390-ibm
+		;;
+	s390x | s390x-*)
+		basic_machine=s390x-ibm
+		;;
+	sa29200)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+	sb1)
+		basic_machine=mipsisa64sb1-unknown
+		;;
+	sb1el)
+		basic_machine=mipsisa64sb1el-unknown
+		;;
+	sde)
+		basic_machine=mipsisa32-sde
+		os=-elf
+		;;
+	sei)
+		basic_machine=mips-sei
+		os=-seiux
+		;;
+	sequent)
+		basic_machine=i386-sequent
+		;;
+	sh)
+		basic_machine=sh-hitachi
+		os=-hms
+		;;
+	sh5el)
+		basic_machine=sh5le-unknown
+		;;
+	sh64)
+		basic_machine=sh64-unknown
+		;;
+	sparclite-wrs | simso-wrs)
+		basic_machine=sparclite-wrs
+		os=-vxworks
+		;;
+	sps7)
+		basic_machine=m68k-bull
+		os=-sysv2
+		;;
+	spur)
+		basic_machine=spur-unknown
+		;;
+	st2000)
+		basic_machine=m68k-tandem
+		;;
+	stratus)
+		basic_machine=i860-stratus
+		os=-sysv4
+		;;
+	strongarm-* | thumb-*)
+		basic_machine=arm-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	sun2)
+		basic_machine=m68000-sun
+		;;
+	sun2os3)
+		basic_machine=m68000-sun
+		os=-sunos3
+		;;
+	sun2os4)
+		basic_machine=m68000-sun
+		os=-sunos4
+		;;
+	sun3os3)
+		basic_machine=m68k-sun
+		os=-sunos3
+		;;
+	sun3os4)
+		basic_machine=m68k-sun
+		os=-sunos4
+		;;
+	sun4os3)
+		basic_machine=sparc-sun
+		os=-sunos3
+		;;
+	sun4os4)
+		basic_machine=sparc-sun
+		os=-sunos4
+		;;
+	sun4sol2)
+		basic_machine=sparc-sun
+		os=-solaris2
+		;;
+	sun3 | sun3-*)
+		basic_machine=m68k-sun
+		;;
+	sun4)
+		basic_machine=sparc-sun
+		;;
+	sun386 | sun386i | roadrunner)
+		basic_machine=i386-sun
+		;;
+	sv1)
+		basic_machine=sv1-cray
+		os=-unicos
+		;;
+	symmetry)
+		basic_machine=i386-sequent
+		os=-dynix
+		;;
+	t3e)
+		basic_machine=alphaev5-cray
+		os=-unicos
+		;;
+	t90)
+		basic_machine=t90-cray
+		os=-unicos
+		;;
+	tile*)
+		basic_machine=$basic_machine-unknown
+		os=-linux-gnu
+		;;
+	tx39)
+		basic_machine=mipstx39-unknown
+		;;
+	tx39el)
+		basic_machine=mipstx39el-unknown
+		;;
+	toad1)
+		basic_machine=pdp10-xkl
+		os=-tops20
+		;;
+	tower | tower-32)
+		basic_machine=m68k-ncr
+		;;
+	tpf)
+		basic_machine=s390x-ibm
+		os=-tpf
+		;;
+	udi29k)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+	ultra3)
+		basic_machine=a29k-nyu
+		os=-sym1
+		;;
+	v810 | necv810)
+		basic_machine=v810-nec
+		os=-none
+		;;
+	vaxv)
+		basic_machine=vax-dec
+		os=-sysv
+		;;
+	vms)
+		basic_machine=vax-dec
+		os=-vms
+		;;
+	vpp*|vx|vx-*)
+		basic_machine=f301-fujitsu
+		;;
+	vxworks960)
+		basic_machine=i960-wrs
+		os=-vxworks
+		;;
+	vxworks68)
+		basic_machine=m68k-wrs
+		os=-vxworks
+		;;
+	vxworks29k)
+		basic_machine=a29k-wrs
+		os=-vxworks
+		;;
+	w65*)
+		basic_machine=w65-wdc
+		os=-none
+		;;
+	w89k-*)
+		basic_machine=hppa1.1-winbond
+		os=-proelf
+		;;
+	xbox)
+		basic_machine=i686-pc
+		os=-mingw32
+		;;
+	xps | xps100)
+		basic_machine=xps100-honeywell
+		;;
+	xscale-* | xscalee[bl]-*)
+		basic_machine=`echo $basic_machine | sed 's/^xscale/arm/'`
+		;;
+	ymp)
+		basic_machine=ymp-cray
+		os=-unicos
+		;;
+	z8k-*-coff)
+		basic_machine=z8k-unknown
+		os=-sim
+		;;
+	z80-*-coff)
+		basic_machine=z80-unknown
+		os=-sim
+		;;
+	none)
+		basic_machine=none-none
+		os=-none
+		;;
+
+# Here we handle the default manufacturer of certain CPU types.  It is in
+# some cases the only manufacturer, in others, it is the most popular.
+	w89k)
+		basic_machine=hppa1.1-winbond
+		;;
+	op50n)
+		basic_machine=hppa1.1-oki
+		;;
+	op60c)
+		basic_machine=hppa1.1-oki
+		;;
+	romp)
+		basic_machine=romp-ibm
+		;;
+	mmix)
+		basic_machine=mmix-knuth
+		;;
+	rs6000)
+		basic_machine=rs6000-ibm
+		;;
+	vax)
+		basic_machine=vax-dec
+		;;
+	pdp10)
+		# there are many clones, so DEC is not a safe bet
+		basic_machine=pdp10-unknown
+		;;
+	pdp11)
+		basic_machine=pdp11-dec
+		;;
+	we32k)
+		basic_machine=we32k-att
+		;;
+	sh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)
+		basic_machine=sh-unknown
+		;;
+	sparc | sparcv8 | sparcv9 | sparcv9b | sparcv9v)
+		basic_machine=sparc-sun
+		;;
+	cydra)
+		basic_machine=cydra-cydrome
+		;;
+	orion)
+		basic_machine=orion-highlevel
+		;;
+	orion105)
+		basic_machine=clipper-highlevel
+		;;
+	mac | mpw | mac-mpw)
+		basic_machine=m68k-apple
+		;;
+	pmac | pmac-mpw)
+		basic_machine=powerpc-apple
+		;;
+	*-unknown)
+		# Make sure to match an already-canonicalized machine name.
+		;;
+	*)
+		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
+		exit 1
+		;;
+esac
+
+# Here we canonicalize certain aliases for manufacturers.
+case $basic_machine in
+	*-digital*)
+		basic_machine=`echo $basic_machine | sed 's/digital.*/dec/'`
+		;;
+	*-commodore*)
+		basic_machine=`echo $basic_machine | sed 's/commodore.*/cbm/'`
+		;;
+	*)
+		;;
+esac
+
+# Decode manufacturer-specific aliases for certain operating systems.
+
+if [ x"$os" != x"" ]
+then
+case $os in
+	# First match some system type aliases
+	# that might get confused with valid system types.
+	# -solaris* is a basic system type, with this one exception.
+	-auroraux)
+		os=-auroraux
+		;;
+	-solaris1 | -solaris1.*)
+		os=`echo $os | sed -e 's|solaris1|sunos4|'`
+		;;
+	-solaris)
+		os=-solaris2
+		;;
+	-svr4*)
+		os=-sysv4
+		;;
+	-unixware*)
+		os=-sysv4.2uw
+		;;
+	-gnu/linux*)
+		os=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`
+		;;
+	# First accept the basic system types.
+	# The portable systems comes first.
+	# Each alternative MUST END IN A *, to match a version number.
+	# -sysv* is not here because it comes later, after sysvr4.
+	-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \
+	      | -*vms* | -sco* | -esix* | -isc* | -aix* | -cnk* | -sunos | -sunos[34]*\
+	      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \
+	      | -sym* | -kopensolaris* | -plan9* \
+	      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \
+	      | -aos* | -aros* | -cloudabi* | -sortix* \
+	      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \
+	      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \
+	      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \
+	      | -bitrig* | -openbsd* | -solidbsd* | -libertybsd* \
+	      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \
+	      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \
+	      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \
+	      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \
+	      | -chorusos* | -chorusrdb* | -cegcc* \
+	      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
+	      | -midipix* | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \
+	      | -linux-newlib* | -linux-musl* | -linux-uclibc* \
+	      | -uxpv* | -beos* | -mpeix* | -udk* | -moxiebox* \
+	      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \
+	      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \
+	      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \
+	      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \
+	      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \
+	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \
+	      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* \
+	      | -onefs* | -tirtos* | -phoenix*)
+	# Remember, each alternative MUST END IN *, to match a version number.
+		;;
+	-qnx*)
+		case $basic_machine in
+		    x86-* | i*86-*)
+			;;
+		    *)
+			os=-nto$os
+			;;
+		esac
+		;;
+	-nto-qnx*)
+		;;
+	-nto*)
+		os=`echo $os | sed -e 's|nto|nto-qnx|'`
+		;;
+	-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \
+	      | -windows* | -osx | -abug | -netware* | -os9* | -beos* | -haiku* \
+	      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)
+		;;
+	-mac*)
+		os=`echo $os | sed -e 's|mac|macos|'`
+		;;
+	-linux-dietlibc)
+		os=-linux-dietlibc
+		;;
+	-linux*)
+		os=`echo $os | sed -e 's|linux|linux-gnu|'`
+		;;
+	-sunos5*)
+		os=`echo $os | sed -e 's|sunos5|solaris2|'`
+		;;
+	-sunos6*)
+		os=`echo $os | sed -e 's|sunos6|solaris3|'`
+		;;
+	-opened*)
+		os=-openedition
+		;;
+	-os400*)
+		os=-os400
+		;;
+	-wince*)
+		os=-wince
+		;;
+	-osfrose*)
+		os=-osfrose
+		;;
+	-osf*)
+		os=-osf
+		;;
+	-utek*)
+		os=-bsd
+		;;
+	-dynix*)
+		os=-bsd
+		;;
+	-acis*)
+		os=-aos
+		;;
+	-atheos*)
+		os=-atheos
+		;;
+	-syllable*)
+		os=-syllable
+		;;
+	-386bsd)
+		os=-bsd
+		;;
+	-ctix* | -uts*)
+		os=-sysv
+		;;
+	-nova*)
+		os=-rtmk-nova
+		;;
+	-ns2 )
+		os=-nextstep2
+		;;
+	-nsk*)
+		os=-nsk
+		;;
+	# Preserve the version number of sinix5.
+	-sinix5.*)
+		os=`echo $os | sed -e 's|sinix|sysv|'`
+		;;
+	-sinix*)
+		os=-sysv4
+		;;
+	-tpf*)
+		os=-tpf
+		;;
+	-triton*)
+		os=-sysv3
+		;;
+	-oss*)
+		os=-sysv3
+		;;
+	-svr4)
+		os=-sysv4
+		;;
+	-svr3)
+		os=-sysv3
+		;;
+	-sysvr4)
+		os=-sysv4
+		;;
+	# This must come after -sysvr4.
+	-sysv*)
+		;;
+	-ose*)
+		os=-ose
+		;;
+	-es1800*)
+		os=-ose
+		;;
+	-xenix)
+		os=-xenix
+		;;
+	-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
+		os=-mint
+		;;
+	-aros*)
+		os=-aros
+		;;
+	-zvmoe)
+		os=-zvmoe
+		;;
+	-dicos*)
+		os=-dicos
+		;;
+	-nacl*)
+		;;
+	-ios)
+		;;
+	-none)
+		;;
+	*)
+		# Get rid of the `-' at the beginning of $os.
+		os=`echo $os | sed 's/[^-]*-//'`
+		echo Invalid configuration \`$1\': system \`$os\' not recognized 1>&2
+		exit 1
+		;;
+esac
+else
+
+# Here we handle the default operating systems that come with various machines.
+# The value should be what the vendor currently ships out the door with their
+# machine or put another way, the most popular os provided with the machine.
+
+# Note that if you're going to try to match "-MANUFACTURER" here (say,
+# "-sun"), then you have to tell the case statement up towards the top
+# that MANUFACTURER isn't an operating system.  Otherwise, code above
+# will signal an error saying that MANUFACTURER isn't an operating
+# system, and we'll never get to this point.
+
+case $basic_machine in
+	score-*)
+		os=-elf
+		;;
+	spu-*)
+		os=-elf
+		;;
+	*-acorn)
+		os=-riscix1.2
+		;;
+	arm*-rebel)
+		os=-linux
+		;;
+	arm*-semi)
+		os=-aout
+		;;
+	c4x-* | tic4x-*)
+		os=-coff
+		;;
+	c8051-*)
+		os=-elf
+		;;
+	hexagon-*)
+		os=-elf
+		;;
+	tic54x-*)
+		os=-coff
+		;;
+	tic55x-*)
+		os=-coff
+		;;
+	tic6x-*)
+		os=-coff
+		;;
+	# This must come before the *-dec entry.
+	pdp10-*)
+		os=-tops20
+		;;
+	pdp11-*)
+		os=-none
+		;;
+	*-dec | vax-*)
+		os=-ultrix4.2
+		;;
+	m68*-apollo)
+		os=-domain
+		;;
+	i386-sun)
+		os=-sunos4.0.2
+		;;
+	m68000-sun)
+		os=-sunos3
+		;;
+	m68*-cisco)
+		os=-aout
+		;;
+	mep-*)
+		os=-elf
+		;;
+	mips*-cisco)
+		os=-elf
+		;;
+	mips*-*)
+		os=-elf
+		;;
+	or32-*)
+		os=-coff
+		;;
+	*-tti)	# must be before sparc entry or we get the wrong os.
+		os=-sysv3
+		;;
+	sparc-* | *-sun)
+		os=-sunos4.1.1
+		;;
+	*-be)
+		os=-beos
+		;;
+	*-haiku)
+		os=-haiku
+		;;
+	*-ibm)
+		os=-aix
+		;;
+	*-knuth)
+		os=-mmixware
+		;;
+	*-wec)
+		os=-proelf
+		;;
+	*-winbond)
+		os=-proelf
+		;;
+	*-oki)
+		os=-proelf
+		;;
+	*-hp)
+		os=-hpux
+		;;
+	*-hitachi)
+		os=-hiux
+		;;
+	i860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)
+		os=-sysv
+		;;
+	*-cbm)
+		os=-amigaos
+		;;
+	*-dg)
+		os=-dgux
+		;;
+	*-dolphin)
+		os=-sysv3
+		;;
+	m68k-ccur)
+		os=-rtu
+		;;
+	m88k-omron*)
+		os=-luna
+		;;
+	*-next )
+		os=-nextstep
+		;;
+	*-sequent)
+		os=-ptx
+		;;
+	*-crds)
+		os=-unos
+		;;
+	*-ns)
+		os=-genix
+		;;
+	i370-*)
+		os=-mvs
+		;;
+	*-next)
+		os=-nextstep3
+		;;
+	*-gould)
+		os=-sysv
+		;;
+	*-highlevel)
+		os=-bsd
+		;;
+	*-encore)
+		os=-bsd
+		;;
+	*-sgi)
+		os=-irix
+		;;
+	*-siemens)
+		os=-sysv4
+		;;
+	*-masscomp)
+		os=-rtu
+		;;
+	f30[01]-fujitsu | f700-fujitsu)
+		os=-uxpv
+		;;
+	*-rom68k)
+		os=-coff
+		;;
+	*-*bug)
+		os=-coff
+		;;
+	*-apple)
+		os=-macos
+		;;
+	*-atari*)
+		os=-mint
+		;;
+	*)
+		os=-none
+		;;
+esac
+fi
+
+# Here we handle the case where we know the os, and the CPU type, but not the
+# manufacturer.  We pick the logical manufacturer.
+vendor=unknown
+case $basic_machine in
+	*-unknown)
+		case $os in
+			-riscix*)
+				vendor=acorn
+				;;
+			-sunos*)
+				vendor=sun
+				;;
+			-cnk*|-aix*)
+				vendor=ibm
+				;;
+			-beos*)
+				vendor=be
+				;;
+			-hpux*)
+				vendor=hp
+				;;
+			-mpeix*)
+				vendor=hp
+				;;
+			-hiux*)
+				vendor=hitachi
+				;;
+			-unos*)
+				vendor=crds
+				;;
+			-dgux*)
+				vendor=dg
+				;;
+			-luna*)
+				vendor=omron
+				;;
+			-genix*)
+				vendor=ns
+				;;
+			-mvs* | -opened*)
+				vendor=ibm
+				;;
+			-os400*)
+				vendor=ibm
+				;;
+			-ptx*)
+				vendor=sequent
+				;;
+			-tpf*)
+				vendor=ibm
+				;;
+			-vxsim* | -vxworks* | -windiss*)
+				vendor=wrs
+				;;
+			-aux*)
+				vendor=apple
+				;;
+			-hms*)
+				vendor=hitachi
+				;;
+			-mpw* | -macos*)
+				vendor=apple
+				;;
+			-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
+				vendor=atari
+				;;
+			-vos*)
+				vendor=stratus
+				;;
+		esac
+		basic_machine=`echo $basic_machine | sed "s/unknown/$vendor/"`
+		;;
+esac
+
+echo $basic_machine$os
+exit
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "timestamp='"
+# time-stamp-format: "%:y-%02m-%02d"
+# time-stamp-end: "'"
+# End:
diff -uNr perl-5.26.1.orig/cnf/configure perl-5.26.1/cnf/configure
--- perl-5.26.1.orig/cnf/configure	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,200 @@
+#!/bin/sh
+
+base=${0%/*}; test -z "$base" && base=.
+
+cfglog="config.log.$$"
+echo -n > "$cfglog"
+newcfglog() { mv "$cfglog" "$1"; cfglog="$1"; }
+appendlog() { cat "$cfglog" >> "$1"; rm -f "$cfglog"; cfglog="$1"; }
+
+config="config.sh.$$"
+echo "#!/bin/sh" > $config
+echo "" >> $config
+setconfig() { mv "$config" "$1"; config="$1"; }
+delconfig() { rm "$config"; }
+
+. $base/configure__f.sh
+. $base/configure_args.sh
+
+if [ "$mode" = 'help' ]; then
+	. $base/configure_help.sh
+	exit 0
+fi
+
+if [ -z "$keeplog" -a "$mode" != 'regen' ]; then
+	newcfglog 'config.log'
+else
+	appendlog 'config.log'
+fi
+
+# Possible modes are: (none), native, cross, buildmini, target
+# Default mode, (none), means -z $mode -a -z $target
+# $build is needed for (none), native, buildmini, and for cross to pass it to buildmini
+# $target is needed for cross and target
+
+if [ -z "$buildarch" -a "$mode" != "target" ]; then
+	mstart "Guessing build platform"
+	if [ "x$build" = "x" ]; then
+		buildarch=`$base/config.guess 2>>$cfglog`
+	else
+		buildarch=`$base/config.sub "$build" 2>>$cfglog`
+	fi
+	if [ -n "$buildarch" ]; then
+		result "$buildarch"
+	else
+		die "cannot determine build platform"
+	fi
+fi
+# past this point $build/$buildarch are non-empty unless we're in target mode
+
+if [ -z "$mode" ]; then
+	if [ -z "$target" -o "$target" = "$build" ]; then
+		mode='native'
+	else
+		mode='cross'
+	fi
+fi
+# past this point $mode can't be empty
+
+if [ "$mode" = "buildmini" -o "$mode" = "native" ]; then
+	targetarch="$buildarch"
+	target="$build"
+fi
+
+if [ -n "$target" -a -z "$targetarch" ]; then
+	mstart "Guessing target architecture"	
+	targetarch=`$base/config.sub "$target" 2>>$cfglog`
+	if [ -n "$targetarch" ]; then
+		result "$targetarch"
+	else
+		die "cannot determine target platform"
+	fi
+elif [ -z "$target" ]; then
+	if [ "$mode" = 'cross' -o "$mode" = 'target' ]; then
+		die "--target must be specified for a cross build"
+	fi
+fi
+
+if [ "$mode" = "cross" ]; then
+	delconfig
+	msg "Respawning configure for build and target platforms"
+	msg
+	run $0 $hco --keeplog --mode=buildmini --build="$build" --buildarch="$buildarch"\
+		|| die "configure --mode=buildmini failed"
+	msg
+       	run $0 "$@" --keeplog --mode=target --target="$target" --targetarch="$targetarch"\
+		|| die "configure --mode=target failed"
+	msg
+	msg "Ok, back to the top-level configure"
+elif [ "$mode" = "buildmini" ]; then
+	setconfig "xconfig.sh"
+	targetlabel=`archlabel "$build" "$targetarch"`
+	msg "Configuring build-time miniperl for $targetlabel"
+elif [ "$mode" = "target" ]; then
+	setconfig "config.sh"
+	targetlabel=`archlabel "$target" "$targetarch"`
+	msg "Configuring primary perl executable for $targetlabel"
+elif [ "$mode" = "native" ]; then 
+	setconfig "config.sh"
+	msg "Configuring for a native build"
+fi
+
+
+if [ "$mode" = 'native' -o "$mode" = 'buildmini' -o "$mode" = "target" ]; then
+	test "$mode" = "target" && define usecrosscompile 'define'
+	define targetarch "$targetarch"
+
+	. $base/configure_version.sh
+	. $base/configure_tool.sh
+	. $base/configure_hint.sh
+	. $base/configure_hdrs.sh
+	. $base/configure_type.sh
+	. $base/configure_type_ext.sh
+	. $base/configure_type_sel.sh
+	. $base/configure_type_dbl.sh
+	. $base/configure_sigs.sh
+	. $base/configure_libs.sh
+	. $base/configure_func.sh
+	. $base/configure_func_dbl.sh
+	. $base/configure_func_def.sh
+	. $base/configure_func_ext.sh
+	. $base/configure_func_sel.sh
+	. $base/configure_attr.sh
+	. $base/configure_path.sh
+	. $base/configure_thrd.sh
+	. $base/configure_pfmt.sh
+	. $base/configure_mods.sh
+	. $base/configure_misc.sh
+fi
+
+test -f ./config_h.SH || die "Not in perl base directory, aborting"
+
+if [ "$mode" = 'native' ]; then
+	echo "Generating config.h"
+	./config_h.SH
+	echo "Generating Makefile.config"
+	./Makefile.config.SH
+
+	echo
+	echo "Configuration completed for native build"
+	echo
+	echo "            platform:  $archname"
+	echo "          c compiler:  $cc"
+	echo "                  ld:  $ld"
+	echo "                  ar:  $ar"
+	echo "              ranlib:  $ranlib"
+	echo
+	echo "              prefix:  $prefix"
+	echo " installation prefix:  $installprefix"
+	echo "         executables:  $bin"
+	echo "             scripts:  $bin"
+	echo "             privlib:  $privlib"
+	echo "             archlib:  $archlib"
+	echo " section 1 man pages:  $man1dir  (with '$man1ext' extension)"
+	echo " section 3 man pages:  $man3dir  (with '$man3ext' extension)"
+	echo
+elif [ "$mode" = 'cross' ]; then
+	echo "Generating config.h and xconfig.h"
+	CONFIG_SH=config.sh  CONFIG_H=config.h  ./config_h.SH
+	CONFIG_SH=xconfig.sh CONFIG_H=xconfig.h ./config_h.SH
+	echo "Generating Makefile.config"
+	./Makefile.config.SH
+	echo
+	echo "Configuration completed for cross build"
+	echo
+	. ./xconfig.sh
+	echo "      build platform:  $archname"
+	echo "          C compiler:  $cc"
+	echo "              linker:  $ld"
+	echo "                  ar:  $ar"
+	echo "              ranlib:  $ranlib"
+	echo "             objdump:  $objdump"
+	echo
+	. ./config.sh
+	echo "     target platform:  $archname"
+	echo "          C compiler:  $cc"
+	echo "                  ld:  $ld"
+	echo "                  ar:  $ar"
+	echo "              ranlib:  $ranlib"
+	echo "             objdump:  $objdump"
+	echo
+	echo "              prefix:  $prefix"
+	echo "             sysroot:  $sysroot"
+	echo " installation prefix:  $installprefix"
+	echo "         executables:  $bin"
+	echo "             scripts:  $bin"
+	echo "             privlib:  $privlib"
+	echo "             archlib:  $archlib"
+	echo " section 1 man pages:  $man1dir  (with '$man1ext' extension)"
+	echo " section 3 man pages:  $man3dir  (with '$man3ext' extension)"
+	echo
+elif [ "$mode" = "regen" ]; then
+	if [ -f config.sh ]; then
+		CONFIG_SH=config.sh  CONFIG_H=config.h  ./config_h.SH
+	fi
+	if [ -f xconfig.sh ]; then
+		CONFIG_SH=xconfig.sh CONFIG_H=xconfig.h ./config_h.SH
+	fi
+	echo "Generating Makefile.config"
+	./Makefile.config.SH
+fi
diff -uNr perl-5.26.1.orig/cnf/configure__f.sh perl-5.26.1/cnf/configure__f.sh
--- perl-5.26.1.orig/cnf/configure__f.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure__f.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,315 @@
+# General-purpose functions used by most of other modules
+
+die() {
+	echo "ERROR: $*" >> $cfglog
+	echo "ERROR: $*" >&2
+	exit 255
+}
+
+log() {
+	echo "$@" >> $cfglog
+}
+
+msg() {
+	echo "$@" >> $cfglog
+	echo "$@" >&2
+}
+
+not() {
+	if "$@"; then false; else true; fi;
+}
+
+run() {
+	echo "> $@" >> $cfglog
+	"$@"
+}
+
+# Each test starts with mstart and ends with a (possibly branched) result
+#
+#    mstart "Checking foo"
+#    if check; then
+#        result "yes"
+#    else
+#        result "no"
+#
+# To make nice logs, any define()s should precede result()s.
+
+mstart() {
+	echo "$@" >> $cfglog
+	echo -n "$* ... " >& 2
+}
+
+result() {
+	echo "Result: $*" >> $cfglog
+	echo >> $cfglog
+	echo "$@" >&2
+}
+
+# Indirect variable access ($a= and $$a), invalid in generic POSIX shells
+
+setenv() {
+	eval "$1='$2'"
+}
+
+getenv() {
+	eval "$1=\$$2"
+}
+
+# Config variables are written to config.sh exactly once.
+# The first define for a given key locks it by setting x_$key.
+# Any subsequent defines for the same key are ignored.
+# Hints and command-line arguments call define early,
+# preventing regular code from setting the hinted values.
+#
+#     define key val [source]
+#
+# Appends (-A, stored in a_$key) are applied here as well.
+# All written values are also duplicated in current environment
+# to allow $key references later.
+
+define() {
+	getenv x "x_$1"
+	getenv a "a_$1"
+	getenv v "$1"
+
+	if [ -n "$x" ]; then
+		log "Skipping $1=$2 ($x: $v)"
+		return
+	fi
+
+	if [ -n "$a" -a -n "$2" ]; then
+		v="$2 $a"
+	elif [ -n "$2" ]; then
+		v="$2"
+	elif [ -n "$a" ]; then
+		v="$a"
+	fi
+
+	setenv "x_$1" "${3:-written}"
+	setenv "$1" "$v"
+
+	v=`echo "$v" | sed -e "s@'@'\"'\"'@g"`
+	echo "$1='$v'" >> $config
+
+	log "Setting $1=$v"
+}
+
+# There are few variables that cannot be set immediately.
+# Instead, they have predef 'initial-value', some conditional
+# appends, and enddef that writes the value to config.sh.
+
+predef() {
+	getenv x "x_$1"
+	test -n "$x" && return
+	setenv "$1" "$2"
+	setenv "x_$1" "predef"
+}
+
+enddef() {
+	getenv x "x_$1"
+	getenv v "$1"
+
+	if [ -z "$x" -o "$x" = 'predef' ]; then
+		setenv "$1" ''
+		setenv "x_$1" ''
+		define "$1" "$v"
+	else
+		log "Skipping $1 ($x: $v)"
+	fi
+}
+
+append() {
+	getenv x "x_$1"
+	getenv v "$1"
+	if [ "$x" != 'predef' ]; then
+		log "Skipping $1 <= $2 ($x: $v)"
+	elif [ -n "$v" -a -n "$2" ]; then
+		setenv "$1" "$v $2"
+	elif [ -z "$v" -a -n "$2" ]; then
+		setenv "$1" "$2"
+	fi
+}
+
+prepend() {
+	getenv x "x_$1"
+	getenv v "$1"
+	if [ "$x" != 'predef' ]; then
+		log "Skipping $1 >= $2 ($x: $v)"
+	elif [ -n "$v" -a -n "$2" ]; then
+		setenv "$1" "$2 $v"
+	elif [ -z "$v" -a -n "$2" ]; then
+		setenv "$1" "$2"
+	fi
+}
+
+# There is no point in running tests for values that have been hinted
+# as define will skip them anyway.
+#
+#     mstart "Checking foo"
+#     if not hinted d_foo; then
+#         check d_foo 'foo' ...
+#     fi
+#
+# Like with resdef below, some define/undef variables need yes/no
+# or found/missing results shown. That's why $3 and $4 are there.
+
+hinted() {
+	getenv v "$1"
+	getenv x "x_$1"
+
+	test -z "$x" && return 1
+
+	log "Using $1=$v ($x)"
+
+	if [ -n "$3" -a "$v" = 'define' ]; then
+		result "($x) $3"
+	elif [ -n "$4" -a "$v" != 'define' ]; then
+		result "($x) $4"
+	else
+		result "($x) $v"
+	fi
+}
+
+# Thread-safe func tests define two symbols per test, and need a way
+# to check hints silently to avoid calling result() too early.
+
+gethint() {
+	getenv x "x_$1"
+	test -z "$x" && return 1
+	getenv $2 "$1"
+}
+
+# All compile/link tests operate on try.c. Typical sequence is try_start,
+# try_add, try_add, ..., try_compile. The test code gets dumped to config.log,
+# along with the command used to compile it.
+
+try_start() {
+	echo -n > try.c
+}
+
+try_includes() {
+	for i in "$@"; do
+		echo "#include <${i##*:}>" >> try.c
+	done
+}
+
+try_add() {
+	echo "$@" >> try.c
+}
+
+try_cat() {
+	cat "$@" >> try.c
+}
+
+try_dump() {
+	cat try.c | sed -e 's/^/| /' >> $cfglog
+}
+
+try_dump_out() {
+	cat try.out | sed -e 's/^/| /' >> $cfglog
+}
+
+try_dump_h() {
+	cat try.h | sed -e 's/^/| /' >> $cfglog
+}
+
+try_preproc() {
+	require 'cpp'
+	run $cpp $cppflags try.c > try.out 2>> $cfglog
+}
+
+try_compile() {
+	require 'cc'
+	require '_o'
+	try_dump
+	run $cc $ccflags "$@" -c -o try$_o try.c >> $cfglog 2>&1
+}
+
+# an equivalent of try_compile with -Werror, but without
+# explicit use of -Werror (which may not be available for
+# a given compiler)
+try_compile_check_warnings() {
+	require 'cc'
+	require '_o'
+	try_dump
+	run $cc $ccflags -c -o try$_o try.c > try.out 2>&1
+	_r=$?
+	cat try.out >> $cfglog
+	if [ $_r != 0 ]; then
+		return 1;
+	fi
+	if grep -q -i 'warning' try.out; then
+		return 1;
+	fi
+	return 0
+}
+
+try_link_libs() {
+	require 'cc'
+	try_dump
+	run $cc $ccflags -o try$_e try.c $* >> $cfglog 2>&1
+}
+
+try_link() {
+	try_link_libs $libs $*
+}
+
+try_readelf() {
+	require 'readelf'
+	require '_o'
+	run $readelf $* try$_o
+}
+
+try_objdump() {
+	require 'objdump'
+	require '_o'
+	run $objdump $* try.o > try.out
+}
+
+# Sanity check, make sure variables like $o and $cc are defined
+# before doing stuff like rm try$o or $cc -o try$o
+
+require() {
+	getenv v "$1"
+	test -z "$v" && die "Requires $1 is not set"
+}
+
+# Set symbols depending on the result of preceeding command.
+# The values set are always define/undef but the results shown
+# are sometimes yes/no or found/missing etc.
+
+resdef() {
+	if [ $? = 0 ]; then
+		define "$1" "define"
+		result "$2"
+		return 0
+	else
+		define "$1" 'undef'
+		result "$3"
+		return 1
+	fi
+}
+
+bytes() {
+	test "$1" = 1 && echo "byte" || echo "bytes"
+}
+
+# archlabel target targetarch -> label
+archlabel() {
+	if [ -n "$1" -a -n "$2" ]; then
+		echo "$1 ($2)"
+	elif [ -n "$2" ]; then
+		echo "$2"
+	elif [ -n "$1" ]; then
+		echo "$1"
+	else
+		echo "unknown"
+	fi
+}
+
+# Disabling e.g. ext/XS-Typemap is done by setting $disable_xs_typemap,
+# which is then checked in configure_mods.
+
+modsymname() {
+	echo "$1" | sed -r -e 's!^(ext|cpan|dist|lib)/!!' -e 's![:/-]!_!g' | tr A-Z a-z
+}
diff -uNr perl-5.26.1.orig/cnf/configure_args.sh perl-5.26.1/cnf/configure_args.sh
--- perl-5.26.1.orig/cnf/configure_args.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_args.sh	2018-02-26 03:21:37.000000000 -0600
@@ -0,0 +1,252 @@
+# Arguments parsing.
+
+defuser() {
+	define "$1" "$2" 'args'
+}
+
+defineyesno() {
+	if [ "$2" = "yes" ]; then
+		defuser "$1" "$3"
+	elif [ "$2" = "no" ]; then
+		defuser "$1" "$4"
+	elif [ -z "$2" ]; then
+		defuser "$1" "$3"
+	else
+		die "Bad value for $1, only 'yes' and 'no' are allowed"
+	fi
+}
+
+defyes() { defineyesno "$1" "$2" 'define' 'undef'; }
+defno()  { defineyesno "$1" "$2" 'undef' 'define'; }
+
+# setordefine key hasarg arg default-a default-b
+setordefine() {
+	if [ -n "$2" ]; then
+		defuser "$1" "$3"
+	else case "$1" in
+		# There are several variables that take true/false
+		# instead of define/undef. And some code that does not accept
+		# "define" instead of "true". Ugh.
+		useopcode|useposix|useshrplib|usevfork)
+			defuser "$1" "$5"
+			;;
+		*)
+			defuser "$1" "$4"
+			;;
+	esac fi
+}
+
+# Like source but avoid $PATH searches for simple file names.
+# Also guards loop variables from being clobbered by the loaded file.
+sourcenopath() {
+	case "$1" in
+		/*) source "$1" ;;
+		*) source "./$1" ;;
+	esac
+	shift
+	eval "$@"
+}
+
+define config_arg0 "$0"
+define config_argc $#
+define config_args "$*"
+
+alist=''
+
+# Do *not* use shifts here! The args may be used later
+# to call configure --mode=target, and saving them
+# by other means is hard.
+i=1
+n=''	# next opt
+while [ $i -le $# -o -n "$n" ]; do
+	# in case we've got a short-opt cluster (-abc etc.)
+	if [ -z "$n" ]; then
+		eval a="\${$i}"; i=$((i+1))	# arg ("set" or 'D')
+	else
+		a="-$n"
+		n=''
+	fi
+	k=''					# key ("prefix")
+	v=''					# value ("/usr/local")
+	x=''
+
+	# check what kind of option is this
+	case "$a" in
+		# short opts
+		-[dehrsEKOSV]*)
+			n=`echo "$a" | sed -e 's/^-.//'`
+			a=`echo "$a" | sed -e 's/^-\(.\).*/\1/'`
+			;;
+		-[A-Za-z]*)
+			k=`echo "$a" | sed -e 's/^-.//'`
+			a=`echo "$a" | sed -e 's/^-\(.\).*/\1/'`
+			;;
+		--[A-Za-z]*)
+			a=`echo "$a" | sed -e 's/^--//'`
+			;;
+		*)
+			echo "Bad option $a"
+			continue;
+			;;
+	esac
+	# split --set-foo and similar constructs into --set foo
+	# and things like --prefix=/foo into --prefix and /foo
+	case "$a" in
+		set-*|use-*|include-*)
+			k=`echo "$a" | sed -e 's/^[^-]*-//'`
+			a=`echo "$a" | sed -e 's/-.*//'`
+			;;
+		dont-use-*|dont-include-*)	
+			k=`echo "$a" | sed -e 's/^dont-[^-]*-//'`
+			a=`echo "$a" | sed -e 's/^\(dont-[^-]*\)-.*/\1/'`
+			;;
+		*=*)
+			k=`echo "$a" | sed -e 's/^[^=]*=//'`
+			a=`echo "$a" | sed -e 's/=.*//'`
+			;;
+	esac
+	# check whether kv is required
+	# note that $x==1 means $k must be set; the value, $v, may be empty
+	case "$a" in
+		help|regen*|mode|host|target|build|keeplog|[dehrsEKOSV]) x='' ;;
+		all-static|no-*) x='' ;;
+		*) x=1 ;;
+	esac
+	# fetch argument if necessary (--set foo=bar)
+	# note that non-empty n means there must be no argument
+	if [ -n "$x" -a -z "$k" -a -z "$n" ]; then
+		eval k="\${$i}"; i=$((i+1))
+	fi
+	# split kv pair into k and v (k=foo v=bar)
+	case "$k" in
+		*=*)
+			v=`echo "$k" | sed -e 's/^[^=]*=//'`
+			k=`echo "$k" | sed -e 's/=.*//'`
+			x=1
+			;;
+		*)
+			x=''
+			;;
+	esac
+	#echo "a=$a k=$k v=$v"
+
+	# Account for the fact that in "--set foo" foo is key
+	# while in "--mode foo" foo is value
+	case "$a" in
+		set|use|has|no|include|dont-use|dont-include|D|U)	
+			k=`echo "$k" | sed -e 's/-/_/g'`
+			;;
+		*)
+			if [ -z "$v" -a -n "$k" ]; then
+				v="$k"
+				k=""
+			fi
+	esac
+	#if [ -z "$v" -a -n "$k" ]; then v="$k"; k=""; fi
+
+	# ($a, $k, $v) are all set here by this point
+	# having non-empty x here means the option actually had a parameter
+	# and can be used to separate -Dfoo and -Dfoo=''
+	#log "a=$a k=$k v=$v ($x)"
+
+	# process the options
+	case "$a" in
+		mode) mode="$v" ;;
+		help) mode="help" ;;
+		regen|regenerate) mode="regen" ;;
+		keeplog) defuser "$a" 1 ;;
+		prefix|html[13]dir|libsdir)	defuser $a "$v" ;;
+		man[13]dir|otherlibsdir)	defuser $a "$v" ;;
+		siteprefix|sitehtml[13]dir)	defuser $a "$v" ;;
+		siteman[13]dir|vendorman[13]dir)defuser $a "$v" ;;
+		vendorprefix|vendorhtml[13]dir)	defuser $a "$v" ;;
+		target|targetarch)		defuser $a "$v" ;;
+		build|buildarch)		defuser $a "$v" ;;
+		cc|cpp|ar|ranlib|objdump)	defuser $a "$v" ;;
+		sysroot)			defuser $a "$v" ;;
+		ttp|tools-prefix|target-tools-prefix)
+			setenv 'toolsprefix' "$v"
+			;;
+		no-dynaloader|without-dynaloader)
+			defuser 'usedl' 'undef'
+			;;
+		with-dynaloader)
+			defuser 'usedl' 'define'
+			;;
+		hint|hints)
+			if [ -n "$userhints" ]; then
+				userhints="$userhints,$v"
+			else
+				userhints="$v"
+			fi
+			;;
+		libs)
+			if [ -n "$v" ]; then
+				v=`echo ",$v" | sed -r -e 's/,([^,]+)/-l\1 /g'`
+				defuser 'libs' "$v"
+			fi
+			;;
+		host-*)
+			what=`echo "$a" | sed -e 's/^host-//'`
+			hco="$hco --$what=$v"
+			;;
+		with-*)
+			what=`echo "$a" | sed -r -e 's/^[^-]+-//' -e 's/-/_/g'`
+			defuser "$what" "$v"
+			;;
+		disable-mod|disable-ext|disable-module|disable-modules)
+			for m in `echo "$v" | sed -e 's/,/ /g'`; do
+				s=`modsymname "$m"`
+				defuser "disable_$s" "1"
+			done
+			;;
+		static-mod|static-ext|static-modules|static)
+			for m in `echo "$v" | sed -e 's/,/ /g'`; do
+				s=`modsymname "$m"`
+				defuser "static_$s" "1"
+			done
+			;;
+		only-mod|only-ext|only-modules|only)
+			for m in `echo "$v" | sed -e 's/,/ /g'`; do
+				s=`modsymname "$m"`
+				defuser "only_$s" "1"
+				defuser "onlyext" "$s $onlyext"
+			done
+			;;
+		disable-disabled-mods) defuser 'disabledmods' 'undef' ;;
+		all-static) defuser 'allstatic' 1 ;;
+		use) defuser "use$k" 'define' ;;
+		dont-use) defuser "use$k" 'undef' ;;
+		set) defuser "$k" "$v" ;;
+		has) defyes "d_$k" "$v" ;;
+		no) defno "d_$k" "$v" ;;
+		include) defyes "i_$k" "$v" ;;
+		dont-include) defno "i_$k" "$v" ;;
+		host|target|build) ;;
+		# original Configure options
+		D)
+			setordefine "$k" "$x" "$v" 'define' 'true'
+			;;
+		U)
+			test -n "$v" && msg "WARNING: -Ukey=val, val ignored; use -Dkev=val instead"
+			setordefine "$k" "$x" "" 'undef' 'false' # "" is *not* a typo here!
+			;;
+		O) msg "WARNING: -O ignored" ;;
+		f) sourcenopath "$v" "i=$i" "n=$n" ;;
+		A) setenv "a_$k" "$v"; alist="$alist $k" ;;
+		S|V|K) die "-$a is not supported" ;;
+		d|r) msg "WARNING: -$a makes no sense for this version of configure and was ignored" ;;
+		e|E) msg "WARNING: -$a ignored; you'll have to proceed with 'make' anyway" ;;
+		*) die "Unknown argument $a" ;;
+	esac
+done
+
+for k in $alist; do
+	getenv v "x_$k"
+	test -n "$v" && die "Cannot append to an explicitly set variable $k"
+done
+
+unset -v i a k v x n
+
+# use64bitint must be passed to miniperl
+test "$use64bitint" = 'define' && hco="$hco -Duse64bitint"
diff -uNr perl-5.26.1.orig/cnf/configure_attr.sh perl-5.26.1/cnf/configure_attr.sh
--- perl-5.26.1.orig/cnf/configure_attr.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_attr.sh	2018-01-22 18:00:30.000000000 -0600
@@ -0,0 +1,137 @@
+# Checking compiler support for __attribute__s.
+
+# checkattr key "attr" <<END
+#    test file goes here
+# END
+checkddash() {
+	mstart "Checking if compiler supports $2"
+	hinted $1 "yes" "no" && return
+
+	try_start
+	try_cat
+	try_compile_check_warnings
+
+	resdef $1 'yes' 'no'
+}
+
+checkattr() {
+	checkddash "$1" "__attribute__(($2))"
+}
+
+checkattr d_attribute_format 'format' <<END
+#include <stdio.h>
+void my_special_printf(char* pat,...) __attribute__((__format__(__printf__,1,2)));
+END
+
+# TODO: check for empty format here
+
+checkattr d_attribute_malloc 'malloc' <<END
+#include <stdio.h>
+char *go_get_some_memory( int how_many_bytes ) __attribute__((malloc));
+END
+
+checkattr d_attribute_nonnull 'nonnull' <<END
+#include <stdio.h>
+void do_something (char *some_pointer,...) __attribute__((nonnull(1)));
+END
+
+checkattr d_attribute_noreturn 'noreturn' <<END
+#include <stdio.h>
+void fall_over_dead( void ) __attribute__((noreturn));
+END
+
+checkattr d_attribute_pure 'pure' <<END
+#include <stdio.h>
+int square( int n ) __attribute__((pure));
+END
+
+checkattr d_attribute_unused 'unused' <<END
+#include <stdio.h>
+int do_something( int dummy __attribute__((unused)), int n );
+END
+
+checkattr d_attribute_used 'used' <<END
+#include <stdio.h>
+int used_somewhere(void) __attribute__((used));
+END
+
+checkattr d_attribute_deprecated 'deprecated' <<END
+#include <stdio.h>
+int deprecated(void) __attribute__((deprecated));
+END
+
+checkattr d_attribute_warn_unused_result 'warn_unused_result' <<END
+#include <stdio.h>
+int I_will_not_be_ignored(void) __attribute__((warn_unused_result));
+END
+
+checkattr d_attribute_always_inline 'always_inline' <<END
+#include <stdio.h>
+int square(int n) __attribute__((always_inline));
+END
+
+# Compiler builtins. Should be gcc/clang only, but it's not like we support
+# any other compilers atm.
+define d_builtin_arith_overflow 'define'
+define d_builtin_choose_expr 'define'
+define d_builtin_ctz 'define'
+define d_builtin_expect 'define'
+define d_builtin_prefetch 'define'
+
+# add_overflow and sub_overflow only appear in gcc 5+
+checkddash d_builtin_add_overflow '__builtin_add_overflow' <<END
+int add_overflow(int a, long b, long* c)
+{
+	return __builtin_add_overflow(a, b, c);
+}
+END
+
+checkddash d_builtin_sub_overflow '__builtin_sub_overflow' <<END
+int sub_overflow(int a, long b, long* c)
+{
+	return __builtin_sub_overflow(a, b, c);
+}
+END
+
+checkddash d_builtin_mul_overflow '__builtin_mul_overflow' <<END
+int mul_overflow(int a, long b, long* c)
+{
+	return __builtin_mul_overflow(a, b, c);
+}
+END
+
+# volatile check also here, it's quite similar to __attribute__ checks
+
+mstart "Checking to see if your C compiler knows about volatile"
+if not hinted d_volatile 'yes' 'no'; then
+	try_start
+	try_cat << END
+int main()
+{
+	typedef struct _goo_struct goo_struct;
+	goo_struct * volatile goo = ((goo_struct *)0);
+	struct _goo_struct {
+		long long_int;
+		int reg_int;
+		char char_var;
+	};
+	typedef unsigned short foo_t;
+	char *volatile foo;
+	volatile int bar;
+	volatile foo_t blech;
+	foo = foo;
+}
+END
+	try_compile_check_warnings
+	resdef d_volatile 'yes' 'no'
+fi
+
+mstart "Checking C99 variadic macros"
+if not hinted d_c99_variadic_macros 'supported' 'missing'; then
+	try_start
+	try_add '#include <stdio.h>'
+	try_add '#define foo(fmt, ...) printf(fmt, __VA_ARGS__)'
+	try_add 'int main(void) { foo("%i\n", 1234); return 0; }'
+	try_compile
+	resdef d_c99_variadic_macros 'supported' 'missing'
+fi
diff -uNr perl-5.26.1.orig/cnf/configure_func.sh perl-5.26.1/cnf/configure_func.sh
--- perl-5.26.1.orig/cnf/configure_func.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_func.sh	2018-01-22 18:00:30.000000000 -0600
@@ -0,0 +1,303 @@
+# Tests for libc functions availability.
+
+checkfunc() {
+	require 'cc'
+	mstart "Checking for $2"
+	if not hinted $1 'found' 'missing'; then
+		try_start
+		funcincludes "$3" "$4" "$includes"
+		try_add "int main(void) { $2($3); return 0; }"
+		try_link -O0 -fno-builtin
+		resdef $1 'found' 'missing'
+	fi
+}
+
+funcincludes() {
+	case "$1" in
+		*NULL*) try_includes "stdlib.h" ;;
+	esac
+
+	test -n "$3" && try_includes $3
+	test -n "$2" && try_includes $2
+}
+
+# The naming scheme looks regular but it isn't!
+
+includes=''
+checkfunc d__fwalk '_fwalk'
+checkfunc d_accept4 'accept4' "0,NULL,NULL,0" 'sys/socket.h sys/types.h'
+checkfunc d_access 'access' "NULL,0" 'unistd.h'
+checkfunc d_accessx 'accessx'
+checkfunc d_aintl 'aintl'
+checkfunc d_alarm 'alarm' "0" 'unistd.h'
+checkfunc d_asctime64 'asctime64'
+checkfunc d_atolf 'atolf'
+checkfunc d_atoll 'atoll'
+checkfunc d_backtrace 'backtrace' 'NULL, 0' 'execinfo.h'
+checkfunc d_bcmp 'bcmp' "NULL,NULL,0" 'string.h'
+checkfunc d_bcopy 'bcopy' "NULL,NULL,0" 'string.h'
+checkfunc d_bzero 'bzero' "NULL,0" 'string.h'
+checkfunc d_chown 'chown' "NULL,0,0" 'unistd.h'
+checkfunc d_chroot 'chroot' "NULL" 'unistd.h'
+checkfunc d_chsize 'chsize' "0,0"
+checkfunc d_class 'class'
+checkfunc d_clearenv 'clearenv' "" 'stdlib.h'
+checkfunc d_closedir 'closedir' "NULL"
+checkfunc d_crypt 'crypt'
+checkfunc d_ctermid 'ctermid'
+checkfunc d_ctime64 'ctime64'
+checkfunc d_cuserid 'cuserid'
+checkfunc d_difftime 'difftime' "0,0"
+checkfunc d_difftime64 'difftime64'
+checkfunc d_dirfd 'dirfd'
+checkfunc d_dladdr 'dladdr' 'NULL, NULL' 'dlfcn.h'
+checkfunc d_dlerror 'dlerror'
+checkfunc d_dlopen 'dlopen'
+checkfunc d_drand48 'drand48'
+checkfunc d_dup2 'dup2' "0,0" 'unistd.h'
+checkfunc d_dup3 'dup3' "0,0,0" 'fcntl.h unistd.h'
+checkfunc d_duplocale 'duplocale' '0' 'locale.h'
+checkfunc d_eaccess 'eaccess'
+checkfunc d_endgrent 'endgrent'
+checkfunc d_endhent 'endhostent'
+checkfunc d_endnent 'endnetent'
+checkfunc d_endpent 'endprotoent'
+checkfunc d_endpwent 'endpwent'
+checkfunc d_endservent 'endservent'
+checkfunc d_fchdir 'fchdir' "0" 'unistd.h'
+checkfunc d_fchmod 'fchmod' "0,0" 'unistd.h'
+checkfunc d_fchmodat 'fchmodat' "0,NULL,0,0" 'unistd.h'
+checkfunc d_fchown 'fchown' "0,0,0" 'unistd.h'
+checkfunc d_fcntl 'fcntl' "0,0" 'unistd.h fcntl.h'
+checkfunc d_fdclose 'fdclose'
+checkfunc d_fgetpos 'fgetpos' "NULL, 0" 'stdio.h'
+checkfunc d_flock 'flock' "0,0" 'unistd.h'
+checkfunc d_fork 'fork' "" 'unistd.h'
+checkfunc d_fp_class 'fp_class'
+checkfunc d_fpathconf 'fpathconf' "0,0" 'unistd.h'
+checkfunc d_freelocale 'freelocale' '0' 'locale.h'
+checkfunc d_fseeko 'fseeko' 'NULL,0,0'
+checkfunc d_fsetpos 'fsetpos' 'NULL,0'
+checkfunc d_fstatfs 'fstatfs'
+checkfunc d_fstatvfs 'fstatvfs'
+checkfunc d_fsync 'fsync'
+checkfunc d_ftello 'ftello'
+checkfunc d_futimes 'futimes'
+checkfunc d_gai_strerror 'gai_strerror' '0' 'sys/types.h sys/socket.h netdb.h'
+checkfunc d_getaddrinfo 'getaddrinfo'
+checkfunc d_getcwd 'getcwd' 'NULL,0'
+checkfunc d_getespwnam 'getespwnam'
+checkfunc d_getfsstat 'getfsstat'
+checkfunc d_getgrent 'getgrent'
+checkfunc d_getgrps 'getgroups'
+checkfunc d_gethbyaddr 'gethostbyaddr'
+checkfunc d_gethbyname 'gethostbyname'
+checkfunc d_getnbyaddr 'getnetbyaddr' '0,0' 'netdb.h'
+checkfunc d_getnbyname 'getnetbyname' 'NULL' 'netdb.h'
+checkfunc d_gethent 'gethostent'
+checkfunc d_gethname 'gethostname'
+checkfunc d_getitimer 'getitimer'
+checkfunc d_getlogin 'getlogin'
+checkfunc d_getmnt 'getmnt'
+checkfunc d_getmntent 'getmntent'
+checkfunc d_getnameinfo 'getnameinfo'
+checkfunc d_getnent 'getnetent'
+checkfunc d_getnetbyaddr 'getnetbyaddr'
+checkfunc d_getnetbyname 'getnetbyname'
+checkfunc d_getpagsz 'getpagesize'
+checkfunc d_getpbyaddr 'getprotobyaddr'
+checkfunc d_getpbyname 'getprotobyname'
+checkfunc d_getpbynumber 'getprotobynumber'
+checkfunc d_getpent 'getprotoent'
+checkfunc d_getpgid 'getpgid'
+checkfunc d_getpgrp 'getpgrp' "" 'unistd.h'
+checkfunc d_getpgrp2 'getpgrp2'
+checkfunc d_getppid 'getppid'
+checkfunc d_getprior 'getpriority' "0,0" 'sys/time.h sys/resource.h'
+checkfunc d_getprpwnam 'getprpwnam'
+checkfunc d_getpwent 'getpwent'
+checkfunc d_getsbyaddr 'getservbyaddr'
+checkfunc d_getsbyname 'getservbyname'
+checkfunc d_getsbyport 'getservbyport'
+checkfunc d_getsent 'getservent'
+checkfunc d_setsent 'setservent'
+checkfunc d_endsent 'endservent'
+checkfunc d_getspnam 'getspnam'
+checkfunc d_gettimeod 'gettimeofday' 'NULL,NULL'
+checkfunc d_gmtime64 'gmtime64'
+checkfunc d_hasmntopt 'hasmntopt'
+checkfunc d_htonl 'htonl' "0" 'stdio.h sys/types.h netinet/in.h arpa/inet.h'
+checkfunc d_ilogbl 'ilogbl'
+checkfunc d_index 'index' "NULL,0" 'string.h strings.h'
+checkfunc d_inetaton 'inet_aton'
+checkfunc d_inetntop 'inet_ntop'
+checkfunc d_inetpton 'inet_pton'
+checkfunc d_isascii 'isascii' "'A'" 'stdio.h ctype.h'
+checkfunc d_isblank 'isblank' "' '" 'stdio.h ctype.h'
+checkfunc d_killpg 'killpg'
+checkfunc d_lchown 'lchown' "NULL, 0, 0" 'unistd.h'
+checkfunc d_link 'link' 'NULL,NULL'
+checkfunc d_linkat 'linkat' '0,NULL,0,NULL,0'
+checkfunc d_localtime64 'localtime64'
+checkfunc d_localeconv_l 'localeconv_l' 'NULL' 'locale.h'
+checkfunc d_locconv 'localeconv'
+checkfunc d_lockf 'lockf'
+checkfunc d_lstat 'lstat'
+checkfunc d_madvise 'madvise'
+checkfunc d_malloc_good_size 'malloc_good_size'
+checkfunc d_malloc_size 'malloc_size'
+checkfunc d_mblen 'mblen' '"", 0' 'stdlib.h'
+checkfunc d_mbstowcs 'mbstowcs'
+checkfunc d_mbtowc 'mbtowc' 'NULL, NULL, 0' 'stdlib.h'
+checkfunc d_mbrlen 'mbrlen' 'NULL, 0, NULL' 'wchar.h'
+checkfunc d_mbrtowc 'mbrtowc' 'NULL, NULL, 0, NULL' 'wchar.h'
+checkfunc d_memchr 'memchr' "NULL, 0, 0" 'string.h'
+checkfunc d_memcmp 'memcmp' "NULL, NULL, 0" 'string.h'
+checkfunc d_memcpy 'memcpy' "NULL, NULL, 0" 'string.h'
+checkfunc d_memmem 'memmem' "NULL, 0, NULL, 0" 'string.h'
+checkfunc d_memmove 'memmove' "NULL, NULL, 0" 'string.h'
+checkfunc d_memrchr 'memrchr' "NULL, 0, 0" 'string.h'
+checkfunc d_memset 'memset' "NULL, 0, 0" 'string.h'
+checkfunc d_mkdir 'mkdir' 'NULL, 0'
+checkfunc d_mkdtemp 'mkdtemp'
+checkfunc d_mkfifo 'mkfifo'
+checkfunc d_mkostemp 'mkostemp' 'NULL,0' 'stdlib.h'
+checkfunc d_mkstemp 'mkstemp' 'NULL'
+checkfunc d_mkstemps 'mkstemps'
+checkfunc d_mktime 'mktime' 'NULL'
+checkfunc d_mktime64 'mktime64'
+checkfunc d_mmap 'mmap'
+checkfunc d_mprotect 'mprotect'
+checkfunc d_msgctl 'msgctl'
+checkfunc d_msgget 'msgget'
+checkfunc d_msgrcv 'msgrcv'
+checkfunc d_msgsnd 'msgsnd'
+checkfunc d_msync 'msync'
+checkfunc d_munmap 'munmap'
+checkfunc d_newlocale 'newlocale' '0,NULL,0' 'locale.h'
+checkfunc d_nice 'nice' '0'
+checkfunc d_nl_langinfo 'nl_langinfo'
+checkfunc d_nl_langinfo_l 'nl_langinfo_l'
+checkfunc d_open 'open' "NULL,0,0" 'sys/types.h sys/stat.h fcntl.h'
+checkfunc d_openat 'openat' "0,NULL,0,0" 'sys/types.h sys/stat.h fcntl.h'
+checkfunc d_pathconf 'pathconf'
+checkfunc d_pause 'pause'
+checkfunc d_pipe 'pipe' 'NULL' 'fcntl.h unistd.h'
+checkfunc d_pipe2 'pipe' 'NULL,0' 'fcntl.h unistd.h'
+checkfunc d_poll 'poll'
+checkfunc d_prctl 'prctl'
+checkfunc d_pthread_atfork 'pthread_atfork'
+checkfunc d_pthread_attr_setscope 'pthread_attr_setscope'
+checkfunc d_pthread_yield 'pthread_yield'
+checkfunc d_querylocale 'querylocale'
+checkfunc d_qgcvt 'qgcvt' '1.0,1,NULL'
+checkfunc d_rand 'rand'
+checkfunc d_random 'random'
+checkfunc d_re_comp 're_comp'
+checkfunc d_readdir 'readdir' 'NULL'
+checkfunc d_readlink 'readlink'
+checkfunc d_readv 'readv'
+checkfunc d_recvmsg 'recvmsg'
+checkfunc d_regcmp 'regcmp'
+checkfunc d_regcomp 'regcomp'
+checkfunc d_rename 'rename' 'NULL,NULL'
+checkfunc d_renameat 'renameat' '0,NULL,0,NULL'
+checkfunc d_rewinddir 'rewinddir'
+checkfunc d_rmdir 'rmdir' 'NULL'
+checkfunc d_sched_yield 'sched_yield'
+checkfunc d_seekdir 'seekdir'
+checkfunc d_select 'select' '0,NULL,NULL,NULL,NULL'
+checkfunc d_semctl 'semctl'
+checkfunc d_semget 'semget'
+checkfunc d_semop 'semop'
+checkfunc d_sendmsg 'sendmsg'
+checkfunc d_setegid 'setegid'
+checkfunc d_setent 'setservent'
+checkfunc d_setenv 'setenv'
+checkfunc d_seteuid 'seteuid'
+checkfunc d_setgrent 'setgrent'
+checkfunc d_setgrps 'setgroups'
+checkfunc d_sethent 'sethostent'
+checkfunc d_setitimer 'setitimer'
+checkfunc d_setlinebuf 'setlinebuf'
+checkfunc d_setlocale 'setlocale' "0,NULL" 'locale.h'
+checkfunc d_setnent 'setnetent'
+checkfunc d_setpent 'setprotoent'
+checkfunc d_setpgid 'setpgid'
+checkfunc d_setpgrp 'setpgrp'
+checkfunc d_setpgrp2 'setpgrp2'
+checkfunc d_setprior 'setpriority'
+checkfunc d_setproctitle 'setproctitle'
+checkfunc d_setpwent 'setpwent'
+checkfunc d_setregid 'setregid'
+checkfunc d_setresgid 'setresgid'
+checkfunc d_setresuid 'setresuid'
+checkfunc d_setreuid 'setreuid'
+checkfunc d_setrgid 'setrgid'
+checkfunc d_setruid 'setruid'
+checkfunc d_setsid 'setsid'
+checkfunc d_setvbuf 'setvbuf' 'NULL,NULL,0,0'
+checkfunc d_sfreserve 'sfreserve' "" 'sfio.h'
+checkfunc d_shmat 'shmat'
+checkfunc d_shmctl 'shmctl'
+checkfunc d_shmdt 'shmdt'
+checkfunc d_shmget 'shmget'
+checkfunc d_sigaction 'sigaction'
+checkfunc d_sigprocmask 'sigprocmask'
+checkfunc d_sigsetjmp 'sigsetjmp' "NULL,0" 'setjmp.h'
+checkfunc d_snprintf 'snprintf'
+checkfunc d_sockatmark 'sockatmark'
+checkfunc d_socket 'socket' "0,0,0" 'sys/types.h sys/socket.h'
+checkfunc d_sockpair 'socketpair'
+checkfunc d_socks5_init 'socks5_init'
+checkfunc d_stat 'stat'
+checkfunc d_statvfs 'statvfs'
+checkfunc d_strchr 'strchr' "NULL,0" 'string.h strings.h'
+checkfunc d_strcoll 'strcoll' "NULL,NULL" 'string.h'
+checkfunc d_strerror 'strerror' "0" 'string.h stdlib.h'
+checkfunc d_strerror_l 'strerror_l'
+checkfunc d_strftime 'strftime' "NULL,0,NULL,NULL" 'time.h'
+checkfunc d_strlcat 'strlcat'
+checkfunc d_strlcpy 'strlcpy'
+checkfunc d_strnlen 'strnlen' '"",0' 'string.h'
+checkfunc d_strtod 'strtod' 'NULL,NULL'
+checkfunc d_strtol 'strtol' 'NULL,NULL,0'
+checkfunc d_strtold 'strtold'
+checkfunc d_strtold_l 'strtold_l'
+checkfunc d_strtoll 'strtoll'
+checkfunc d_strtoq 'strtoq'
+checkfunc d_strtoul 'strtoul' 'NULL,NULL,0'
+checkfunc d_strtoull 'strtoull' 'NULL,NULL,0'
+checkfunc d_strtouq 'strtouq'
+checkfunc d_strxfrm 'strxfrm'
+checkfunc d_symlink 'symlink'
+checkfunc d_syscall 'syscall'
+checkfunc d_sysconf 'sysconf' '0'
+checkfunc d_system 'system' 'NULL'
+checkfunc d_tcgetpgrp 'tcgetpgrp'
+checkfunc d_tcsetpgrp 'tcsetpgrp'
+checkfunc d_telldir 'telldir'
+checkfunc d_time 'time' 'NULL'
+checkfunc d_timegm 'timegm'
+checkfunc d_times 'times' 'NULL'
+checkfunc d_truncate 'truncate' 'NULL,0'
+checkfunc d_ualarm 'ualarm'
+checkfunc d_umask 'umask' '0'
+checkfunc d_uname 'uname'
+checkfunc d_unlinkat 'unlinkat' '0,NULL,0'
+checkfunc d_unordered 'unordered'
+checkfunc d_unsetenv 'unsetenv'
+checkfunc d_uselocale 'uselocale' '0' 'locale.h'
+checkfunc d_usleep 'usleep'
+checkfunc d_ustat 'ustat'
+define d_vfork 'undef' # unnecessary
+checkfunc d_vprintf 'vprintf' 'NULL,0'
+checkfunc d_vsnprintf 'vsnprintf'
+checkfunc d_wait4 'wait4'
+checkfunc d_waitpid 'waitpid' '0,NULL,0'
+checkfunc d_wcscmp 'wcscmp'
+checkfunc d_wcstombs 'wcstombs' 'NULL,NULL,0'
+checkfunc d_wcsxfrm 'wcsxfrm'
+checkfunc d_wctomb 'wctomb'
+checkfunc d_writev 'writev'
+unset includes
diff -uNr perl-5.26.1.orig/cnf/configure_func_dbl.sh perl-5.26.1/cnf/configure_func_dbl.sh
--- perl-5.26.1.orig/cnf/configure_func_dbl.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_func_dbl.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,104 @@
+# Same tests as with non-FP routines, but these all require math.h.
+
+includes='math.h'
+checkfunc d_acosh 'acosh' '0.0'
+checkfunc d_asinh 'asinh' '0.0'
+checkfunc d_atanh 'atanh' '0.0'
+checkfunc d_cbrt 'cbrt' '0.0'
+checkfunc d_copysign 'copysign' '0.0, 0.0'
+checkfunc d_copysignl 'copysignl' "0.0,0.0"
+checkfunc d_erf 'erf' '0.0'
+checkfunc d_erfc 'erfc' '0.0'
+checkfunc d_exp2 'exp2' '0.0'
+checkfunc d_expm1 'expm1' '0.0'
+checkfunc d_fdim 'fdim' '0.0, 0.0'
+checkfunc d_fegetround 'fegetround' '' 'fenv.h'
+checkfunc d_finite 'finite' "0.0"
+checkfunc d_finitel 'finitel' "0.0"
+checkfunc d_fma 'fma' '0.0, 0.0, 0.0'
+checkfunc d_fmax 'fmax' '0.0, 0.0'
+checkfunc d_fmin 'fmin' '0.0, 0.0'
+checkfunc d_fp_classify 'fp_classify' '0.0'
+checkfunc d_fp_classl 'fp_classl' '0.0'
+# d_fpclass see below
+# d_fpclassify see below
+checkfunc d_fpclassl 'fpclassl' "1.0" 'ieeefp.h'
+checkfunc d_fpgetround 'fpgetround' '' 'fenv.h'
+checkfunc d_frexpl 'frexpl' '0,NULL'
+checkfunc d_hypot 'hypot' '0.0, 0.0'
+checkfunc d_ilogb 'ilogb' '0.0'
+checkfunc d_isfinite 'isfinite' "0.0"
+checkfunc d_isfinitel 'isfinitel' '0.0'
+checkfunc d_isinf 'isinf' "0.0"
+checkfunc d_isinfl 'isinfl' '0.0'
+checkfunc d_isless 'isless' '0.0, 0.0'
+checkfunc d_isnan 'isnan' "0.0"
+checkfunc d_isnanl 'isnanl' "0.0"
+checkfunc d_isnormal 'isnormal' '0.0'
+checkfunc d_j0 'j0' '0.0'
+checkfunc d_j0l 'j0l' '0.0'
+checkfunc d_ldexpl 'ldexpl' '0.0, 0'
+checkfunc d_lgamma 'lgamma' '0.0'
+checkfunc d_lgamma_r 'lgamma_r' '0.0, NULL'
+checkfunc d_llabs 'llabs' '0LL'
+checkfunc d_llrint 'llrint' '0.0'
+checkfunc d_llrintl 'llrintl' '0.0'
+checkfunc d_llround 'llround' '0.0'
+checkfunc d_llroundl 'llroundl' '0.0'
+checkfunc d_log1p 'log1p' '0.0'
+checkfunc d_log2 'log2' '0.0'
+checkfunc d_logb 'logb' '0.0'
+checkfunc d_lrint 'lrint' '0.0'
+checkfunc d_lrintl 'lrintl' '0.0'
+checkfunc d_lround 'lround' '0.0'
+checkfunc d_lroundl 'lroundl' '0.0'
+checkfunc d_modfl 'modfl' "0.0,NULL"
+checkfunc d_nan 'nan' 'NULL' 'stdlib.h math.h'
+checkfunc d_nearbyint 'nearbyint' '0.0'
+checkfunc d_nextafter 'nextafter' '0.0, 0.0'
+checkfunc d_nexttoward 'nexttoward' '0.0, 0.0'
+checkfunc d_remainder 'remainder' '0.0, 0.0'
+checkfunc d_remquo 'remquo' '0.0, 0.0, NULL'
+checkfunc d_rint 'rint' '0.0'
+checkfunc d_round 'round' '0.0'
+checkfunc d_scalbn 'scalbn' '0.0, 0'
+checkfunc d_scalbnl 'scalbnl' "0.0,0"
+checkfunc d_signbit 'signbit' '.0'
+checkfunc d_sqrtl 'sqrtl' "0.0"
+checkfunc d_tgamma 'tgamma' '0.0'
+checkfunc d_trunc 'trunc' '0.0'
+checkfunc d_truncl 'truncl' '0.0'
+unset includes
+
+# Extended test for fpclassify. Linking alone is not enough apparently,
+# the constants must be defined as well.
+
+# checkfpclass d_func func 'includes' D1 D2 D3 ....
+checkfpclass() {
+	_sym=$1
+	_fun=$2
+	_inc=$3
+
+	mstart "Checking whether $_fun() is usable"
+	if not hinted $_sym 'yes' 'no'; then
+		try_start
+		try_includes $_inc
+		try_add "int main(void) { return $_fun(0.0); }"
+		shift; shift; shift;
+
+		for c in $*; do
+			try_add "int v_$c = $c;"
+		done
+
+		try_link
+		resdef $_sym 'yes' "no, disabling $_fun()"
+	fi
+}
+
+checkfpclass d_fpclassify fpclassify 'math.h' \
+	FP_NAN FP_INFINITE FP_NORMAL FP_SUBNORMAL FP_ZERO
+
+checkfpclass d_fpclass fpclass 'math.h ieeefp.h' \
+	FP_SNAN FP_QNAN FP_NEG_INF FP_POS_INF FP_NEG_INF \
+	FP_NEG_NORM FP_POS_NORM FP_NEG_NORM FP_NEG_DENORM FP_POS_DENORM \
+	FP_NEG_DENORM FP_NEG_ZERO FP_POS_ZERO FP_NEG_ZERO
diff -uNr perl-5.26.1.orig/cnf/configure_func_def.sh perl-5.26.1/cnf/configure_func_def.sh
--- perl-5.26.1.orig/cnf/configure_func_def.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_func_def.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,36 @@
+# Prototype checks. We supply a clearly bogus prototype,
+# and check whether the compiler throws an error.
+
+# It's probably safe to assume declared prototypes in all cases,
+# systems with K&R compilers are not likely to run perl-cross.
+
+hasproto() {
+	mstart "Checking $2 prototype"
+	if not hinted "$1" 'declared' 'missing'; then
+		try_start
+		try_add '#define _GNU_SOURCE'
+		try_includes $3
+		try_add 'struct foo;'
+		try_add "void* $2(struct foo* ptr);"
+		not try_compile
+		resdef $1 'declared' 'missing'
+	fi
+}
+
+hasproto d_dbminitproto 'dbminit' 'gdbm.h' # XXX
+hasproto d_drand48proto 'drand48' 'stdlib.h'
+hasproto d_flockproto 'flock' 'sys/file.h'
+hasproto d_lseekproto 'lseek' 'sys/types.h unistd.h'
+hasproto d_modflproto 'modfl' 'math.h'
+hasproto d_sbrkproto 'sbrk' 'unistd.h'
+hasproto d_sockatmarkproto 'sockatmark' 'sys/socket.h'
+hasproto d_sresgproto 'setresgid' 'unistd.h'
+hasproto d_sresuproto 'setresuid' 'unistd.h'
+hasproto d_syscallproto 'syscall' 'unistd.h sys/syscall.h'
+hasproto d_telldirproto 'telldir' 'dirent.h'
+hasproto d_usleepproto 'usleep' 'unistd.h'
+
+hasproto d_gethostprotos 'gethostbyaddr' 'netdb.h sys/socket.h'
+hasproto d_getservprotos 'getservbyport' 'netdb.h sys/socket.h'
+hasproto d_getnetprotos 'getnetbyaddr' 'netdb.h'
+hasproto d_getprotoprotos 'getprotobynumber' 'netdb.h'
diff -uNr perl-5.26.1.orig/cnf/configure_func_ext.sh perl-5.26.1/cnf/configure_func_ext.sh
--- perl-5.26.1.orig/cnf/configure_func_ext.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_func_ext.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,91 @@
+# Some extra compile/link tests
+
+# checkvar symbol name includes
+# We use try_link here instead of try_compile to be sure we have the
+# variable in question not only declared but also present somewhere in the libraries.
+checkvar() {
+	require 'cc'
+	mstart "Checking for $2"
+	if not hinted "$1" 'found' 'missing'; then
+		try_start
+		try_includes $3
+		try_add "void foo() { };"
+		try_add "int main() { foo($2); return 0; }"
+		try_link
+		resdef $1 'found' 'missing'
+	fi
+}
+
+checkintdefined() {
+	mstart "Checking whether $2 is defined"
+	if not hinted "$1" 'yes' 'no'; then
+		try_start
+		try_includes $3
+		try_add "int i = $2;"
+		try_compile
+		resdef $1 'yes' 'no'
+	fi
+}
+
+checkvar d_syserrlst sys_errlist 'stdio.h'
+checkvar d_sysernlst sys_errnolist 'stdio.h'
+checkvar d_tzname tzname 'time.h'
+
+checkintdefined d_dbl_dig DBL_DIG 'limits.h float.h'
+checkintdefined d_ldbl_dig LDBL_DIG 'limits.h float.h'
+checkintdefined d_scm_rights SCM_RIGHTS 'sys/socket.h sys/un.h'
+
+mstart "Checking whether closedir is void"
+if [ "$d_closedir" = 'define' ]; then
+	if not hinted d_void_closedir 'yes' 'no'; then
+		try_start
+		try_includes 'sys/types.h' 'dirent.h'
+		try_add "int main() { return closedir(NULL); }"
+		try_compile
+		resdef d_void_closedir 'yes' 'no'
+	fi
+else
+	define d_void_closedir 'undef'
+	result 'irrelevant'
+fi
+
+mstart "Checking whether prctl supports PR_SET_NAME"
+if [ "$d_prctl" = 'define' ]; then
+	if not hinted d_prctl_set_name 'yes' 'no'; then
+		try_start
+		try_includes 'sys/prctl.h'
+		try_add "int main (int argc, char *argv[]) {"
+		try_add "	return (prctl (PR_SET_NAME, \"Test\"));"
+		try_add "}"
+		try_compile
+		resdef d_prctl_set_name 'yes' 'no' 
+	fi
+else
+	define d_prctl_set_name 'undef'
+	result 'irrelevant'
+fi
+
+mstart "Checking FD_SET macros"
+if not hinted d_fd_macros 'found' 'missing'; then
+	try_start
+	try_includes sys/time.h sys/types.h unistd.h
+	try_cat <<END
+#if defined(FD_SET) && defined(FD_CLR) && defined(FD_ISSET) && defined(FD_ZERO)
+#else
+#error missing
+#endif
+END
+	try_compile
+	resdef d_fd_macros 'found' 'missing'
+fi
+
+mstart "Checking if we're using GNU libc"
+if not hinted d_gnulibc 'yes' 'no'; then
+	try_start
+	try_add '#include <stdio.h>'
+	try_add "#ifndef __GLIBC__"
+	try_add "#error here"
+	try_add "#endif"
+	try_compile
+	resdef d_gnulibc 'yes' 'no'
+fi
diff -uNr perl-5.26.1.orig/cnf/configure_func_sel.sh perl-5.26.1/cnf/configure_func_sel.sh
--- perl-5.26.1.orig/cnf/configure_func_sel.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_func_sel.sh	2018-01-22 18:00:30.000000000 -0600
@@ -0,0 +1,101 @@
+mstart "Checking whether you have the full shm*(2) library"
+log "d_shmctl=$d_shmctl d_shmge=$d_shmget d_shmat=$d_shmat d_shmdt=$d_shmdt"
+case ":$d_shmctl:$d_shmget:$d_shmat:$d_shmdt:" in
+	*::*|*:undef:*)
+		define d_shm 'undef'
+		result 'no'
+		;;
+	*)
+		define d_shm 'define'
+		result 'yes'
+		;;
+esac
+
+mstart "Checking whether you have the full sem*(2) library"
+log "d_semctl=$d_semctl d_semget=$d_semget d_semop=$d_semop"
+case ":$d_semctl:$d_semget:$d_semop:" in
+	*::*|*:undef:*)
+		define d_sem 'undef'
+		result 'no'
+		;;
+	*)
+		define d_sem 'define'
+		result 'yes'
+		;;
+esac
+
+mstart "Checking whether you have the full msg*(2) library"
+log "d_msgctl=$d_msgctl d_msgget=$d_msgget d_msgsnd=$d_msgsnd d_msgrcv=$d_msgrcv"
+case ":$d_msgctl:$d_msgget:$d_msgsnd:$d_msgrcv" in
+	*::*|*:undef:*)
+		define d_msg 'undef'
+		result 'no'
+		;;
+	*)
+		define d_msg 'define'
+		result 'yes'
+		;;
+esac
+
+mstart "Looking how to get error messages"
+log "d_strerror=$d_strerror d_sys_errlist=$d_sys_errlist"
+# Configure has quite a long piece on strerror, which basically means just this:
+if [ "$d_strerror" = 'define' ]; then
+	define d_strerrm 'strerror(e)'
+	result 'strerror()'
+elif [ "$d_sys_errlist" = 'define' ]; then
+	define d_strerrm '((e)<0||(e)>=sys_nerr?"unknown":sys_errlist[e])'
+	result 'sys_errlist[]'
+else
+	define d_strerrm 'unknown'
+	result 'nothing found'
+fi
+
+mstart "Looking for a random number function"
+log "d_drand=$d_drand48 d_random=$d_random d_rand=$d_rand"
+if [ "$d_drand48" = 'define' ]; then
+	define randfunc 'drand48'
+	define seedfunc 'srand48'
+	define randbits 48
+	define randseedtype 'long'
+	result 'good, found drand48()'
+elif [ "$d_random" = 'define' ]; then
+	define randfunc 'random'
+	define seedfunc 'srandom'
+	define randbits 31
+	define randseedtype 'int'
+	result 'ok, found random()'
+elif [ "$d_rand" = 'define' ]; then
+	define randfunc 'rand'
+	define seedfunc 'srand'
+	define randbits 15
+	define randseedtype 'int'
+	result 'yick, looks like I have to use rand()'
+else
+	define randfunc ''
+	define seedfunc ''
+	define randbits 0
+	define randseedtype 'int'
+	result 'none found'
+fi
+
+# It's a bit more complicated in original Configure, but let's
+# assume that if there's clock_t defined then that's what times() returns.
+mstart "Looking what times() may return"
+log "d_times=$d_times d_clock_t=$d_clock_t"
+if [ "$d_times" = 'define' ]; then
+	if not hinted clocktype; then
+		if [ "$d_clock_t" = 'define' ]; then
+			define clocktype 'clock_t'
+			result 'clock_t'
+		else
+			define clocktype 'long'
+			result "it's not clock_t, assuming long"
+		fi
+	fi
+else
+	result "irrelevant"
+fi
+
+# Assume nl_langinfo_l is threadsafe if available
+define d_thread_safe_nl_langinfo_l "$d_nl_langinfo_l"
diff -uNr perl-5.26.1.orig/cnf/configure_hdrs.sh perl-5.26.1/cnf/configure_hdrs.sh
--- perl-5.26.1.orig/cnf/configure_hdrs.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_hdrs.sh	2018-01-22 18:00:30.000000000 -0600
@@ -0,0 +1,159 @@
+# We cannot really check if a header is there, gcc reports no errors for (some?)
+# missing headers. And, in fact, we need not to. All we want to know is whether
+# it is safe to include this header, i.e., that it won't break the build.
+
+checkhdr() {
+	mstart "Checking whether to include <$2>"
+	if not hinted "$1"; then
+		try_start
+		try_add "#include <$2>"
+		try_compile
+		resdef "$1" 'yes' 'no'
+	fi
+}
+
+checkhdr i_arpainet 'arpa/inet.h'
+checkhdr i_assert 'assert.h'
+checkhdr i_bfd 'bfd.h'
+checkhdr i_bsdioctl 'sys/bsdioctl.h'
+checkhdr i_crypt 'crypt.h'
+checkhdr i_db 'db.h'
+checkhdr i_dbm 'dbm.h'
+checkhdr i_dirent 'dirent.h'
+checkhdr i_dlfcn 'dlfcn.h'
+checkhdr i_execinfo 'execinfo.h'
+checkhdr i_fcntl 'fcntl.h'
+checkhdr i_fenv 'fenv.h'
+checkhdr i_float 'float.h'
+checkhdr i_fp 'fp.h'
+checkhdr i_fp_class 'fp_class.h'
+checkhdr i_gdbm 'gdbm.h'
+checkhdr i_gdbm_ndbm 'gdbm-ndbm.h'
+checkhdr i_gdbmndbm 'gdbm/ndbm.h'
+checkhdr i_grp 'grp.h'
+checkhdr i_ieeefp 'ieeefp.h'
+checkhdr i_inttypes 'inttypes.h'
+checkhdr i_langinfo 'langinfo.h'
+checkhdr i_libutil 'libutil.h'
+checkhdr i_limits 'limits.h'
+checkhdr i_locale 'locale.h'
+checkhdr i_machcthr 'mach/cthreads.h'
+checkhdr i_malloc 'malloc.h'
+checkhdr i_mallocmalloc 'malloc/malloc.h'
+checkhdr i_math 'math.h'
+checkhdr i_memory 'memory.h'
+checkhdr i_mntent 'mntent.h'
+checkhdr i_ndbm 'ndbm.h'
+checkhdr i_netdb 'netdb.h'
+checkhdr i_neterrno 'net/errno.h'
+checkhdr i_netinettcp 'netinet/tcp.h'
+checkhdr i_niin 'netinet/in.h'
+checkhdr i_netinet_ip 'netinet/ip.h'	 # cperl
+checkhdr i_netinet_ip6 'netinet/ip6.h'	 # cperl
+checkhdr i_netinet6_in6 'netinet6/in6.h' # cperl
+checkhdr i_netinet_in_systm 'netinet/in_systm.h' # cperl
+checkhdr i_poll 'poll.h'
+checkhdr i_prot 'prot.h'
+checkhdr i_pthread 'pthread.h'
+checkhdr i_pwd 'pwd.h'
+checkhdr i_quadmath 'quadmath.h'
+checkhdr i_rpcsvcdbm 'rpcsvc/dbm.h'
+checkhdr i_sgtty 'sgtty.h'
+checkhdr i_shadow 'shadow.h'
+checkhdr i_socks 'socks.h'
+# i_stdarg below
+checkhdr i_stdbool 'stdbool.h'
+checkhdr i_stddef 'stddef.h'
+checkhdr i_stdint 'stdint.h'
+checkhdr i_stdlib 'stdlib.h'
+checkhdr i_string 'string.h'
+checkhdr i_sunmath 'sunmath.h'
+checkhdr i_sysaccess 'sys/access.h'
+checkhdr i_sysdir 'sys/dir.h'
+checkhdr i_sysfile 'sys/file.h'
+checkhdr i_sysfilio 'sys/filio.h'
+checkhdr i_sysin 'sys/in.h'
+checkhdr i_sysioctl 'sys/ioctl.h'
+checkhdr i_syslog 'syslog.h'
+checkhdr i_sysmman 'sys/mman.h'
+checkhdr i_sysmode 'sys/mode.h'
+checkhdr i_sysmount 'sys/mount.h'
+checkhdr i_sysndir 'sys/ndir.h'
+checkhdr i_sysparam 'sys/param.h'
+checkhdr i_syspoll 'sys/poll.h'
+checkhdr i_sysresrc 'sys/resource.h'
+checkhdr i_syssecrt 'sys/security.h'
+checkhdr i_sysselct 'sys/select.h'
+checkhdr i_syssockio 'sys/sockio.h'
+checkhdr i_sysstat 'sys/stat.h'
+checkhdr i_sysstatfs 'sys/statfs.h'
+checkhdr i_sysstatvfs 'sys/statvfs.h'
+checkhdr i_systime 'sys/time.h'
+define i_systimek 'undef' # not a plain header check
+checkhdr i_systimes 'sys/times.h'
+checkhdr i_systypes 'sys/types.h'
+checkhdr i_sysuio 'sys/uio.h'
+checkhdr i_sysun 'sys/un.h'
+checkhdr i_sysutsname 'sys/utsname.h'
+checkhdr i_sysvfs 'sys/vfs.h'
+checkhdr i_syswait 'sys/wait.h'
+checkhdr i_termio 'termio.h'
+checkhdr i_termios 'termios.h'
+checkhdr i_time 'time.h'
+checkhdr i_unistd 'unistd.h'
+checkhdr i_ustat 'ustat.h'
+checkhdr i_utime 'utime.h'
+checkhdr i_values 'values.h'
+# i_varargs is checked below
+# i_varhdr is checked below
+checkhdr i_vfork 'vfork.h'
+checkhdr i_wchar 'wchar.h'
+checkhdr i_xlocale 'xlocale.h'
+checkhdr i_zlib 'zlib.h' # cperl, only to disable modules
+
+# These two are mutually exclusive
+test "$i_varargs" != 'define' && checkhdr i_stdarg 'stdarg.h'
+test "$i_stdarg"  != 'define' && checkhdr i_varargs 'varargs.h'
+
+# simplified approach, compared to what Configure has.
+# assume header is usable as long as it's there
+mstart "Looking which header to use for varargs"
+if [ "$i_stdarg" = 'define' ]; then
+	define i_varargs 'undef'
+	define i_varhdr 'stdarg.h'
+	result '<stdarg.h>'	
+elif [ "$i_varargs" = 'define' ]; then
+	define i_stdarg 'undef'
+	define i_varhdr 'varargs.h'
+	result '<varargs.h>'
+else
+	define i_varhdr ''
+	result 'nothing found'
+fi
+
+# Set up largefile support, if needed.
+# The limiting factor here is uClibc features.h, with raises error
+# if FILE_OFFSET_BITS=64 is set but the library was built w/o LFS.
+mstart "Checking whether to enable large file support"
+if not hinted 'uselargefiles'; then
+	# Adding -D_FILE_OFFSET_BITS is mostly harmless, except
+	# when dealing with uClibc that was compiled w/o largefile
+	# support
+	case "$ccflags" in
+		*-D_FILE_OFFSET_BITS=*)
+			define uselargefiles 'define'
+			result "already there"
+			;;
+		*)
+			try_start
+			try_includes "stdio.h"
+			try_compile -D_FILE_OFFSET_BITS=64
+			resdef 'uselargefiles' "yes" "no"
+	esac
+fi
+if [ "$uselargefiles" = 'define' ]; then
+	append ccflags "-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"
+	log
+fi
+
+enddef ccflags # started in _tool
diff -uNr perl-5.26.1.orig/cnf/configure_help.sh perl-5.26.1/cnf/configure_help.sh
--- perl-5.26.1.orig/cnf/configure_help.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_help.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,121 @@
+cat <<EOF
+Usage:
+        configure [options]
+
+configure adheres to common GNU autoconf style, but also accepts most
+of the original Configure options. Both short (-D) and long (--define)
+options are supported. Valid ways to supply arguments for the options:
+-f config.sh, -fconfig.sh -D key=val, -Dkey=val, --set-key=val, --set key=val.
+Whenever necessary, dashes in "key" are converted to underscores so it's ok
+to use --set-d-something instead of --set-d_something.
+
+The options themselves are either self-explainatory or too obscure to be
+documented here. In latter case check which config.sh variable you're
+interested in and refer to Porting/Glossary for description.
+
+        --help                  show this message
+        --regenerate            Re-generate Makefile.config and config.h
+                                from config.sh, and xconfig.h from xconfig.sh
+
+        --prefix=/usr           Installation prefix
+        --html1dir=<dir>        For HTML documentation
+        --html3dir=<dir>
+        --man1dir=<dir>         For manual pages
+        --man3dir=<dir>
+
+        --build=<machine>       Default prefix for \$HOSTCC etc.
+        --target=<machine>      Same, for primary \$CC
+        --target-tools-prefix=<p>       same, but doesn't affect targetarch etc.
+        --hints=<h1>,<h2>,...   Use specified hints (cnf/hints/<h1> etc.)
+                                Does not affect hint selection for modules
+
+        --with-libs=<libs>      Comma-separated list of libraries to use
+                                (only basenames, use "dl" to have -ldl
+                                 passed to linker)
+
+        --with-cc=              C compiler
+        --with-cpp=             C preprocessor
+        --with-ranlib=          ranlib; set to 'true' or 'echo' if
+                                 you don't need it
+        --with-objdump=         objdump; only needed for some tests
+
+        --host-cc=              Same, for host/build system
+        --host-cpp=             (only useful when cross-compiling)
+        --host-ranlib=
+        --host-objdump=
+        --host-libs=
+
+        --sysroot=              path to (copy of) target system root
+
+Options from the original Configure which are not supported or make
+no sense for this version of configure:
+
+        -e      go on without questioning past the production of config.sh
+        -E      stop at the end of questions, after having produced config.sh
+        -r      reuse C symbols value if possible, skips costly nm extraction
+        -s      silent mode
+        -K      (not supported)
+        -S      perform variable substitutions on all .SH files
+        -V      show version number (not supported)
+
+The following options are used to manipulate the values configure will
+write to config.sh. Check Porting/Glossary for the list of possible
+symbols.
+
+        -d              (ignored) use defaults for all answers.
+        -f file.sh      load configuration from specified file
+        -h              (ignored)
+        -D symbol[=value]       define symbol to have some value:
+                -D symbol         symbol gets the value 'define'
+                -D symbol=value   symbol gets the value 'value'
+            common used examples (see INSTALL for more info):
+                -Duse64bitint            use 64bit integers
+                -Duse64bitall            use 64bit integers and pointers
+                -Dusethreads             use thread support (also --use-threads)
+                -Dinc_version_list=none  do not include older perl trees in @INC
+                -DEBUGGING=none          DEBUGGING options
+                -Dcc=gcc                 same as --with-cc=gcc
+                -Dprefix=/opt/perl5      same as --prefix=/opt/perl5
+        -O              (ignored)
+        -U symbol       undefine symbol:
+                -U symbol    symbol gets the value 'undef'
+                -U symbol=   symbol gets completely empty
+                e.g.:  -Uversiononly
+
+        -A symbol=value         append value to symbol
+
+        --enable-<something>            Set use<something> to 'define'
+        --has-<function>                Set d_<function> to 'define'
+        --include-<header>[=yes|no]     Set i_<header> to 'define' or 'undef'
+                                        e.g. for <sys/time.h>:
+                                                --include-sys-time-h=no
+        --set symbol=value              Set symbol to value
+
+When configuring a cross-build, -D/--set and other similar options affect
+target perl configuration (config.sh) only. Use the following options if
+you need to tweak xconfig.sh:
+
+        --host-<option>[=value]         Pass --<option>[=value] to miniperl
+                                        configure on the host system (xconfig.sh)
+                        e.g. --host-define-foo, --host-set-foo=bar
+
+Generally configure tries to build all modules it can find in the source tree.
+Use the following options to alter modules list:
+
+        --static-mod=mod1,mod2,...      Build specified modules statically
+        --disable-mod=mod1,mod2,...     Do not build specified modules
+                                        modX should be something like
+                                        cpan/Archive-Extract
+                                        static only applies to XS modules
+        --only-mod=mod1,mod2,...        Build listed modules only
+
+        --disable-disabled-mods         Do not generate make rules for  
+                                        disabled modules. Without this option,
+                                        any module found by counfigure can be built
+                                        manually with "make cpan/Module-Name".
+        --all-static                    Build all found XS modules as static
+                                        unless specified otherwise
+
+config.log contains verbose description of what was tested, and how.
+Check it if configure output looks suspicious.
+EOF
diff -uNr perl-5.26.1.orig/cnf/configure_hint.sh perl-5.26.1/cnf/configure_hint.sh
--- perl-5.26.1.orig/cnf/configure_hint.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_hint.sh	2018-01-22 18:00:30.000000000 -0600
@@ -0,0 +1,92 @@
+# Hints loading. This gets called after setting up the toolchains
+# but before everything else, and the goal of the hints is
+# to provide non-testable values and possibly suppress undesirable tests.
+
+# We want to see
+#	var=value
+# in hint files, but this would break things (overwrite argv variables
+# for instance). So we use sed to turn those lines into
+#	hint "var" "value"
+# Unlike pretty much any other place in cnf/, the last assignment
+# is effective here, not the first.
+
+tryhints() {
+	# win32 hints are mixed-case
+	_hint=`echo "$1" | tr A-Z a-z`
+	hintfile="$base/hints/$_hint"
+
+	if [ -f "$hintfile" ]; then
+		msg "	using $hintfile"
+		sed -r -e "/^([A-Za-z0-9_]+)=/s//hint \1 /"\
+			"$hintfile" > config.hint.tmp
+		. ./config.hint.tmp
+		rm -f config.hint.tmp
+	else
+		log "	no hints for $_hint"
+	fi
+}
+
+hint() {
+	define "$1" "$2" 'hinted'
+}
+
+set_win32_archname() {
+	if [ "$arch" = 'x86_64' ]; then
+		architecture='x64'
+	else
+		architecture="$arch"
+	fi
+
+	if [ "$usemulti" = 'define' ]; then
+		archname="MSWin32-$architecture-multi"
+	elif [ "$useperlio" = 'define' ]; then
+		archname="MSWin32-$architecture-perlio"
+	else
+		archname="MSWin32-$architecture"
+	fi
+
+	if [ "$useithreads" = 'define' ]; then
+		archname="$archname-thread"
+	fi
+
+	if [ "$arch" != 'x86_64' -a "$use64bitint" = 'define' ]; then
+		archname="$archname-64bit"
+	fi
+
+	if [ "$uselongdouble" = 'define' ]; then
+		archname="$archname-ld"
+	fi
+}
+
+msg "Checking which hints to use"
+
+arch=`echo "$targetarch" | cut -d - -f 1`
+
+if [ "$osname" = "MSWin32" ]; then
+	# Win32 archnames do not follow the simple scheme below
+	set_win32_archname
+else
+	# For i686-pc-linux-gnu, try linux and i686-linux
+	archname="$arch-$osname"
+fi
+
+if [ -n "$userhints" ]; then
+	for h in `echo "$userhints" | sed -e 's/,/ /g'`; do
+		tryhints 'hint' "$h"
+	done
+else
+	tryhints "$archname"
+	tryhints "$osname"
+fi
+
+# Check whether we'll need to append anything to archname
+# configure_version must be included somewhere before this point
+if [ "$useversionedarchname" = 'define' ]; then
+	msg "Using versioned archname ($archname-$api_versionstring)"
+	define archname "$archame-$api_versionstring"
+else
+	define archname "$archname"
+fi
+
+# Add separator to log file
+log
diff -uNr perl-5.26.1.orig/cnf/configure_libs.sh perl-5.26.1/cnf/configure_libs.sh
--- perl-5.26.1.orig/cnf/configure_libs.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_libs.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,86 @@
+# Deciding which libraries to use
+
+mstart "Deciding whether to use DynaLoader"
+if not hinted "$usedl"; then
+	test "$i_dlfcn" = 'define' -o "$i_nlist" = 'define'
+	resdef 'usedl' 'yes' 'no'
+fi
+
+if [ "$usedl" = 'undef' -a -z "$allstatic" ]; then
+	msg "DynaLoader is disabled, making all modules static"
+	define allstatic 1
+fi
+
+mstart "Checking which libraries are available"
+if not hinted 'libs'; then
+	require 'cc'
+	try_start
+	try_add "int main(void) { return 0; }"
+	try_dump
+
+	libs=""
+	for l in $libswanted; do
+		if try_link_libs -l$l; then
+			libs="$libs -l$l"
+		fi
+	done
+	libs=${libs# }
+
+	define libs "$libs"
+	result "$libs"
+fi
+
+# We need to know whether we're trying to use threads early
+# to decide whether to test for -lpthread
+case "$usethreads:$useithreads:$use5005threads" in
+	*define*) define usethreads 'define' ;;
+	*)        define usethreads 'undef'  ;;
+esac
+
+mstart "Checking which libs to use for perl"
+if not hinted 'perllibs'; then
+	# $libs lists available libs; $perllibs lists libs that the perl executable
+	# should be linked with.
+	# The whole idea is wrong, wrong, wrong, but it's tied to MakeMaker.
+	# Unlike Configure, we're picking libs presumably needed for perl
+	# (Configure uses all except for those it knows are not needed)
+	# This allows adding anything to $libswanted without introducing unnecessary perl dependencies.
+	# When perl itself needs something unusual, $perllibs value should be hinted.
+	predef perllibs ''
+	for i in $libs; do
+		case "$i" in 
+			-lm|-lcrypt)
+				append perllibs "$i" ;;
+			-ldl)
+				test "$usedl" != 'undef' && \
+					append perllibs "$i"
+				;;
+			-lpthread)
+				test "$usethreads" != 'undef' && \
+					append perllibs "$i"
+				;;
+			# For a static build, -lgdbm and friends are assumed to be in ext.libs
+		esac
+	done
+	enddef perllibs
+	result "$perllibs"
+fi
+
+if [ "$usesoname" = "define" ]; then
+	define soname "libperl.so.$PERL_API_REVISION.$PERL_API_VERSION"
+fi
+
+mstart "Deciding how to name libperl"
+if not hinted libperl; then
+	if [ -n "$soname" ]; then
+		define libperl "libperl.so.$PERL_API_REVISION.$PERL_API_VERSION.$PERL_API_SUBVERSION"
+		define "useshrplib" 'true'
+		result "$libperl (SONAME $soname, dynamic)"
+	elif [ "$useshrplib" = 'true' ]; then
+		define libperl "libperl.so"
+		result "$libperl (dynamic)"
+	else
+		define libperl "libperl.a"
+		result "$libperl (static)"
+	fi
+fi
diff -uNr perl-5.26.1.orig/cnf/configure_misc.sh perl-5.26.1/cnf/configure_misc.sh
--- perl-5.26.1.orig/cnf/configure_misc.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_misc.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,366 @@
+# Misc settings we do not test for.
+
+# Configured-by; disabled, no point in leaking usernames
+define cf_by ''
+define cf_email ''
+define cf_time 'undisclosed-time'
+# cpan/Config-Perl-V/t/10_base.t does check cf_time indirectly
+# *and* cannot handle empty value there.
+
+# No need to leak these either
+define perladmin 'nobody@nowhere.land'
+define osvers 'current'
+define myarchname ''
+define mydomain ''
+define myhostname ''
+define myuname ''
+
+define Author
+define Date '$Date'
+define Header
+define Id '$Id'
+define Locker
+define Log '$Log'
+define RCSfile '$RCSfile'
+define Revision '$Revision'
+define Source
+define State
+
+# "use MakeMaker direct LD Library Test"
+# see cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker/Liblist/Kid.pm
+# and resp. patch for reasons
+define usemmldlt 'define'
+
+# Used by modules?
+define dlext 'so'
+define dlsrc 'dl_dlopen.xs'
+
+# Required by lib/Config.t, and configpm may use these.
+# Empty values pass tests but essentially disable the code
+# in configpm, which is probably for good.
+define ccflags_uselargefiles ''
+define ldflags_uselargefiles ''
+define libs_uselargefiles ''
+define libswanted_uselargefiles ''
+
+# These are sometimes used in perl-cross, and sometimes also affect modules
+# Some *must* be "false" instead of "undef"! See configure_args.sh
+define use64bitall 'undef'
+define use64bitint 'undef'
+define usecbacktrace 'undef'
+define usecrosscompile 'undef'
+define usedevel 'undef'
+# define usedl 'define'            # set in configure_libs
+define usedtrace 'undef'
+define usefaststdio 'undef'
+# define use5005threads 'undef'    # set in configure_thrd
+# define useithreads 'undef'       # set in configure_thrd
+define usekernprocpathname 'undef'
+# define uselargefiles 'define'    # set in configure_hdrs
+define uselongdouble 'undef'
+define usemallocwrap 'define'
+define usemorebits 'undef'
+define usemultiplicity 'undef'
+define usemymalloc 'n'
+define usenm 'false'
+define usensgetexecutablepath 'undef'
+# define useopcode 'false'         # set in configure_mods
+define useperlio 'define'
+# define useposix 'true'           # set in configure_mods
+define usequadmath 'undef'
+define usereentrant 'undef'
+define userelocatableinc 'undef'
+define usesfio 'false'
+define useshrplib 'false'
+define usesitecustomize 'undef'
+define usesocks 'undef'
+define useversionedarchname 'undef'
+define usevfork 'false'
+
+# cperl-specific symbols
+define d_libname_unique 'undef'
+define d_vms_case_sensitive_symbols 'undef'
+define dl_so_eq_ext 'define'
+# tested for in several places (ext/Config/t/XSConfig.t, t/op/hashflood)
+define hash_func 'FNV1A' # cperl
+define c ''
+define d_bsd 'undef'
+define d_eunice 'undef'
+define d_xenix 'undef'
+define d_ftime 'undef'
+define d_oldsock 'undef'
+define extras ''
+
+# These are important but we don't test them
+define startsh '#!/bin/sh'
+define spitshell 'cat'
+define d_Gconvert 'sprintf((b),"%.*g",(n),(x))'
+define d_modfl_pow32_bug 'undef'
+define direntrytype 'struct dirent'
+define drand01 'drand48()'
+define fflushNULL 'define'
+define fflushall 'undef'
+define freetype 'void'
+define malloctype 'void*'
+define mmaptype 'void *'
+define modetype 'mode_t'
+define need_va_copy 'define'
+define o_nonblock 'O_NONBLOCK'
+define old_pthread_create_joinable 'PTHREAD_CREATE_JOINABLE'
+define prototype 'define'
+define rd_nodata -1
+define sched_yield 'sched_yield()'
+define socksizetype 'socklen_t'
+define vaproto 'define'
+define groupstype 'gid_t'
+define h_fcntl 'false'
+define h_sysfile 'true'
+define ldlibpthname 'LD_LIBRARY_PATH'
+define pidtype 'pid_t'
+define selectminbits '32'
+define selecttype 'fd_set *'
+define shmattype 'void *'
+define st_ino_sign 1
+define st_ino_size 4
+define d_open3 'define'
+define d_safebcpy 'define'
+define d_safemcpy 'undef'
+define d_sanemcmp 'define'
+define d_casti32 'undef'
+define d_castneg 'define'
+define d_static_inline 'undef'
+define d_stdstdio 'undef'
+define d_stdio_cnt_lval 'undef'
+define d_stdio_ptr_lval 'undef'
+define d_stdio_ptr_lval_nochange_cnt 'undef'
+define d_stdio_ptr_lval_sets_cnt 'undef'
+define d_stdiobase 'undef'
+define d_charvspr 'undef'
+define d_eofnblk 'define'
+define d_printf_format_null 'define'
+define d_const 'define'
+define d_csh 'undef'
+define d_suidsafe 'undef'
+define d_dosuid 'undef'
+define d_flexfnam 'define'
+define d_phostname 'undef'
+define d_bsdgetpgrp 'undef'
+define d_bsdsetpgrp 'undef'
+define d_shmatprototype 'define'
+define d_mymalloc 'undef'
+define d_strctcpy 'define'
+define d_pseudofork 'undef'
+define d_dlsymun 'undef'
+define d_fcntl_can_lock 'undef'
+define d_sprintf_returns_strlen 'define'
+define d_u32align 'undef'
+define d_dir_dd_fd 'undef'
+define d_old_pthread_create_joinable 'undef'
+define d_oldpthreads 'undef'
+define d_nv_zero_is_allbits_zero 'define'
+define d_stdio_stream_array 'undef'
+define d_faststdio 'undef'
+define d_libm_lib_version 'undef'
+define d_localtime_r_needs_tzset 'define'
+define signal_t 'void'
+define d_portable 'define'
+define d_voidtty 'define'
+define d_semctl_semid_ds 'define'
+define d_semctl_semun 'define'
+
+define d_msg_ctrunc 'undef'
+define d_msg_dontroute 'undef'
+define d_msg_oob 'undef'
+define d_msg_peek 'undef'
+define d_msg_proxy 'undef'
+
+define d_procselfexe 'undef'
+define procselfexe '""'
+
+define sGMTIME_max '2147483647'
+define sGMTIME_min '-2147483648'
+define sLOCALTIME_max '2147483647'
+define sLOCALTIME_min '-2147483648'
+
+# These should be in modules?
+define netdb_hlen_type 'socklen_t'
+define netdb_host_type 'const void *'
+define netdb_name_type int
+define netdb_net_type 'uint32_t'
+define db_hashtype 'unsigned int'
+define db_prefixtype 'size_t'
+define db_version_major ''
+define db_version_minor ''
+define db_version_patch ''
+define d_ndbm 'undef'
+define d_ndbm_h_uses_prototypes 'define'
+define d_gdbm_ndbm_h_uses_prototypes 'define'
+define d_gdbmndbm_h_uses_prototypes 'define'
+
+# These probably affect something in some cases but we don't test them
+define afs 'false'
+define afsroot '/afs'
+define baserev 5.0
+define bin_ELF 'define' # XXX safe default is 'undef'
+define castflags 0
+define ccsymbols ''
+define charbits 8
+define cpp_stuff 42
+define cppccsymbols
+define eagain 'EAGAIN'
+define ebcdic 'undef'
+define gccosandvers ''
+define gnulibc_version '' # not tested for
+define mips_type ''
+define multiarch 'undef'
+define perl_static_inline 'static'
+define phostname hostname
+define stdchar char
+define stdio_base
+define stdio_bufsiz
+define stdio_cnt
+define stdio_filbuf
+define stdio_ptr
+define stdio_stream_array
+define d_lc_monetary_2008 'undef'
+
+define sharpbang '#!'
+define startperl "$sharpbang$perlpath"
+
+# Non-toolchain commands; not used by perl-cross
+define ansi2knr
+define aphostname /bin/hostname
+define awk awk
+define bash bash
+define bison bison
+define byacc byacc
+define cat cat
+define chgrp chgrp
+define chmod chmod
+define chown chown
+define comm comm
+define contains grep
+define cp cp
+define cpio cpio
+define csh '' # do keep this disabled
+define date date
+define dtrace
+define echo echo
+define egrep egrep
+define emacs
+define expr expr
+define find
+define flex
+define full_ar ar
+define full_csh csh
+define full_sed sed
+define gmake gmake
+define grep grep
+define groupcat 'cat /etc/group'
+define gzip gzip
+define hostcat 'cat /etc/hosts'
+define inews # unused
+define issymlink "test -h"
+define ksh
+define less less
+define lint # unused
+define ln 'ln'
+define lns "$ln -s"
+define lp
+define lpr
+define ls ls
+define mail
+define mailx
+define make make
+define mkdir mkdir # unused
+define more more
+define mv
+define nroff nroff
+define pager less
+define passcat 'cat /etc/passwd'
+define pg pg # unused
+define pmake # unused
+define pr # unused
+define rm rm # unused
+define rm_try # unused
+define rmail # unused
+define runnm false # unused
+define sed sed # unused
+define sendmail
+define sh /bin/sh
+define shar # unused
+define sleep # unused
+define smail # unused
+define sort sort
+define tail
+define tar
+define tee
+define test test
+define touch touch
+define tr tr
+define trnl '\n'
+define troff
+define uuname
+define vi
+define zcat
+define zip zip
+define tbl
+define uname uname
+define uniq uniq
+define yacc yacc
+define yaccflags ''
+
+# These make sense in mainline perl build system but not in perl-cross
+define archname64
+define archobjs
+define ccname
+define compress
+define cryptlib
+define eunicefix ':'
+define firstmakefile 'Makefile'
+define from :
+define gccansipedantic
+define hint 'default'
+define ignore_versioned_solibs
+define incpath
+define initialinstalllocation ''
+define libc
+define libsfiles
+define libsfound
+define libspath
+define lkflags
+define locincpth
+define loclibpth
+define make_set_make '#'
+define mallocobj
+define mallocsrc
+define mistrustnm
+define n '-n'
+define orderlib
+define perl
+define perl5
+define run 'false'
+define shrpenv
+define shsharp 'true'
+define sockethdr
+define socketlib
+define src ''
+define strings
+define sysman ''
+define targetsh "$sh"
+define timeincl
+define to ':'
+define usrinc
+define versiononly 'undef'
+define xlibpth ''
+# cperl
+define sysincpth ''
+define syslibpth ''
+
+# Deprecated symbols
+define exe_ext ''
+define obj_ext .o
+define lib_ext .a
+define path_sep ':'
+define line
+define submit
diff -uNr perl-5.26.1.orig/cnf/configure_mods.sh perl-5.26.1/cnf/configure_mods.sh
--- perl-5.26.1.orig/cnf/configure_mods.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_mods.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,159 @@
+# In-tree perl modules discovery.
+
+test "$mode" = 'buildmini' && return
+
+# Since 5.10.1 the module dirs are flat, so there's no need
+# for recursive search etc.
+extdir() {
+	for i in $1/*; do
+		L=`echo ${i##*/} | sed -e 's!.*-!!'`
+		if [ "$L" = "DynaLoader" ]; then
+			# do nothing, it's DynaLoader
+			true
+		# just checking $i/$L.xs is NOT enough, since some extensions
+		# like cpan/List-Util have .xs files with different names
+		elif ls "$i" | grep -qE '.(xs|c)$'; then
+			extadd "xs" "$i"
+		elif [ -f "$i/Makefile.PL" -o -f "$i/Makefile" -o -d "$i/lib" -o -f "$i/$L.pm" ]; then
+			extadd "noxs" "$i"
+		fi
+	done
+}
+
+extadd() {
+	s=`modsymname "$2"`
+	if [ "$s" = "dynaloader" ]; then
+		msg "    skipping $2"
+		return
+	fi
+	known_extensions="$known_extensions$2 "
+	getenv o "only_$s"
+	if [ -n "$onlyext" -a -z "$o" ]; then
+		msg "    skipping $2"
+		extadddisabled "$1" "$2"
+		return
+	fi
+	getenv d "disable_$s"
+	if [ -n "$d" -a "$d" != "0" ]; then
+		msg "    disabled $2"
+		extadddisabled "$1" "$2"
+		return
+	fi
+	getenv t "static_$s"
+	if [ "$1" = "xs" -a -n "$t" -a "$t" != "0" ]; then
+		msg "    static $2"
+		static_ext="$static_ext$2 "
+	elif [ "$1" = "xs" -a -n "$allstatic" ]; then
+		msg "    static $2"
+		static_ext="$static_ext$2 "
+	elif [ "$1" = "xs" ]; then
+		msg "    dynamic $2"
+		dynamic_ext="$dynamic_ext$2 "
+	else 
+		msg "    non-xs $2"
+		nonxs_ext="$nonxs_ext$2 "
+	fi
+	# See also: findext.patch
+	if [ "$2" = "cpan/Scalar-List-Utils" ]; then
+		shadow_ext="${shadow_ext}cpan/List-Util "
+	fi
+}
+
+extadddisabled() {
+	s=`modsymname "$2"`
+	if [ "$1" = "xs" ]; then
+		disabled_dynamic_ext="$disabled_dynamic_ext$2 "
+	else
+		disabled_nonxs_ext="$disabled_nonxs_ext$2 "
+	fi
+}
+
+extonlyif() {
+	m="$1"; shift
+	s=`modsymname "$m"`
+	if [ "$@" ]; then
+		return
+	else
+		log "pre-disabling $s"
+		msg "    pre-disabling $s"
+		eval "disable_$s=1"
+	fi
+
+}
+
+definetrimspaces() {
+	v=`echo "$2" | sed -r -e 's/\s+/ /g' -e 's/^\s+//' -e 's/\s+$//'`
+	define $1 "$v"
+}
+
+msg "Looking which extensions should be disabled"
+
+# These are on unless hinted otherwise
+define useposix 'true'
+define useopcode 'true'
+
+extonlyif Devel-NYTProf "$i_zlib" = 'define'
+extonlyif DB_File "$i_db" = 'define'
+extonlyif GDBM_File "$i_gdbm" = 'define'
+extonlyif NDBM_File "$i_ndbm" = 'define'
+extonlyif ODBM_File "$i_odbm" = 'define'
+extonlyif I18N/Langinfo "$i_langinfo" = 'define' -a "$d_nl_langinfo" = 'define'
+extonlyif IPC/SysV "$i_msg" = 'define' -o "$i_shm" = 'define' -o "$d_sem" = 'define'
+extonlyif Opcode "$useopcode" = 'true'
+extonlyif POSIX "$useposix" = 'true'
+extonlyif Socket "$d_socket" = 'define'
+extonlyif Sys/Syslog "$d_socket" = 'define'
+extonlyif cpan/List-Util "$usedl" != 'undef'
+extonlyif XS/APItest "$usedl" = 'define'
+extonlyif XS/Typemap "$usedl" = 'define'
+extonlyif VMS-DCLsym "$osname" = "vms"		# XXX: is it correct?
+extonlyif VMS-Stdio "$osname" = "vms"
+extonlyif VMS-Filespec "$osname" = "vms"
+extonlyif Amiga-ARexx "$osname" = "amiga"
+extonlyif Amiga-Exec "$osname" = "amiga"
+extonlyif Win32 "$osname" = 'win32'		# XXX: or is it mingw32?
+extonlyif Win32API-File "$osname" = 'win32'
+extonlyif Win32CORE "$osname" = 'win32'
+
+extonlyif Thread "$usethreads" = 'define'
+
+known_extensions=
+dynamic_ext=
+static_ext=
+nonxs_ext=
+shadow_ext=
+
+for d in ext cpan dist; do
+	msg "Looking for extensions recursively under $d/"
+	extdir $d
+done
+
+msg
+msg "Static modules: $static_ext"
+msg "Non-XS modules: $nonxs_ext"
+msg "Dynamic modules: $dynamic_ext"
+
+definetrimspaces static_ext "$static_ext"
+definetrimspaces nonxs_ext "$nonxs_ext"
+definetrimspaces dynamic_ext "$dynamic_ext"
+definetrimspaces known_extensions "$known_extensions"
+
+# Unless the user explictily asks us not to do it,
+# allow building disabled mods with "make cpan/Some-Module"
+# This only affects perl-cross Makefile via Makefile.config
+
+if [ "$disabledmods" != 'define' ]; then
+	define disabledmods 'define'
+	definetrimspaces disabled_dynamic_ext "$disabled_dynamic_ext"
+	definetrimspaces disabled_nonxs_ext "$disabled_nonxs_ext"
+fi
+
+# Some of the tests use $Config{'extensions'} to decide whether to do their
+# thing or not. The original Configure uses weird old format for module names,
+# "File/Glob" for what should have been either File::Glob or ext/File-Glob.
+#
+# perl-cross keeps full directory names in ${...}_ext and $extensions,
+# and does the conversion in configpm. This keeps things simple when writing
+# Makefiles, and does not break tests later.
+
+definetrimspaces extensions "$static_ext $dynamic_ext $nonxs_ext $shadow_ext"
diff -uNr perl-5.26.1.orig/cnf/configure_path.sh perl-5.26.1/cnf/configure_path.sh
--- perl-5.26.1.orig/cnf/configure_path.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_path.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,184 @@
+# Path may only be set once we know version *and* archname.
+# So this must be called after _version and _tool.
+
+# $(something)exp were meant to be "expanded" values, as in
+# "~alex" and "/home/alex", but perl-cross does not do that,
+# so the values always match $(something).
+
+log
+msg "Deciding installation paths"
+
+define prefix "/usr"
+
+defrel() {
+	if [ "$userelocatableinc" = 'define' ]; then
+		v=`echo "$2" | sed -e "s@^$prefix@.../..@"`
+	else
+		v="$2"
+	fi
+
+	define "$1" "$v"
+}
+
+definst() {
+	if [ "$userelocatableinc" = 'define' ]; then
+		v=`echo "$2" | sed -e "s@^\.\.\./\.\.@$prefix@"`
+	else
+		v="$2"
+	fi
+
+	define "$1" "$installpath$v"
+}
+
+define sharedir "$prefix/share"
+define html1dir "$sharedir/doc/$perlname/html"
+define html3dir "$sharedir/doc/$perlname/html"
+define man1dir "$sharedir/man/man1"
+define man1ext "1"
+define man3dir "$sharedir/man/man3"
+define man3ext "3"
+define bin "$prefix/bin"
+define lib "$prefix/lib"
+define scriptdir "$prefix/bin"
+define libsdirs ' '
+defrel privlib "$prefix/lib/$package/$version"
+defrel archlib "$prefix/lib/$package/$version/$archname"
+define perlpath "$prefix/bin/$perlname"
+define d_archlib 'define'
+
+define sitebin	"$prefix/bin"
+defrel sitelib_stem "$prefix/lib/$package/site_perl"
+define sitelib "$sitelib_stem/$version"
+define sitearch "$sitelib_stem/$version/$archname"
+define siteprefix "$prefix"
+define sitescript "$prefix/bin"
+
+define sitebinexp "$sitebin"
+define sitelibexp "$sitelib"
+define siteprefixexp "$siteprefix"
+define sitescriptexp "$sitescript"
+define sitearchexp "$sitearch"
+define d_sitearch 'define'
+
+define inc_version_list ''
+define inc_version_list_init ''
+define d_inc_version_list 'undef'
+
+define otherlibdirs ''
+define d_perl_otherlibdirs 'undef'
+
+define siteman1dir "$man1dir"
+define siteman3dir "$man3dir"
+define sitehtml1dir "$html1dir"
+define sitehtml3dir "$html3dir"
+
+define installprefix ''
+definst installhtml1dir "$html1dir"
+definst installhtml3dir "$html3dir"
+definst installman1dir "$man1dir"
+definst installman3dir "$man3dir"
+definst installarchlib "$archlib"
+definst installbin "$bin"
+definst installlib "$lib"
+definst installprivlib "$privlib"
+definst installscript "$scriptdir"
+definst installsitearch "$sitearch"
+definst installsitebin "$sitebin"
+definst installsitehtml1dir "$sitehtml1dir"
+definst installsitehtml3dir "$sitehtml3dir"
+definst installsitelib "$sitelib"
+definst installsiteman1dir "$siteman1dir"
+definst installsiteman3dir "$siteman3dir"
+definst installsitescript "$sitescript"
+define installstyle lib/perl5
+define installusrbinperl define
+
+define prefixexp "$prefix"
+define installprefixexp "$installprefix"
+define html1direxp "$html1dir"
+define html3direxp "$html3dir"
+define siteman1direxp "$siteman1dir"
+define siteman3direxp "$siteman3dir"
+define sitehtml1direxp "$sitehtml1dir"
+define sitehtml3direxp "$sitehtml3dir"
+define scriptdirexp "$scriptdir"
+define man1direxp "$man1dir"
+define man3direxp "$man3dir"
+define archlibexp "$archlib"
+define privlibexp "$privlib"
+define binexp "$bin"
+
+define libpth "/lib /usr/lib /usr/local/lib"
+define glibpth "$libpth"
+define plibpth
+
+# Vendor prefix logic from Configure.
+# -Dusevendorprefix => set $vendorprefix to default value: not supported
+# -Dvendorprefix=/path => define $usevendorprefix, set $vendor*
+# no -Dvendorprefix => undef $usevendorprefix, set $vendor* = ''
+
+mstart "Deciding whether to use \$vendorprefix"
+define vendorprefix ''
+test -n "$vendorprefix"
+resdef usevendorprefix 'yes' 'no'
+
+if [ "$usevendorprefix" = 'define' -a -z "$vendorprefix" ]; then
+	die "must specify -Dvendorprefix with -Dusevendorprefix"
+elif [ "$usevendorprefix" != 'define' -a -n "$vendorprefix" ]; then
+	die "non-empty vendorprefix without -Dusevendorprefix"
+fi
+
+vendorpath() {
+	if [ -n "$vendorprefix" ]; then
+		define "$1" "$2"
+	else
+		define "$1" ''
+	fi
+}
+
+vendortest() {
+	if [ -n "$2" ]; then
+		define "$1" 'define'
+	else
+		define "$1" 'undef'
+	fi
+}
+
+vendorpath vendorbin "$vendorprefix/bin"
+vendorpath vendorlib_stem "$vendorprefix/lib/$package/vendor_perl"
+vendorpath vendorlib "$vendorlib_stem/$version"
+vendorpath vendorarch "$vendorlib_stem/$version/$archname"
+vendorpath vendorscript "$vendorprefix/bin"
+
+# These are used to control #ifdefs around vendorpath-specific code
+vendortest d_vendorarch "$vendorarch"
+vendortest d_vendorbin "$vendorbin"
+vendortest d_vendorlib "$vendorlib"
+vendortest d_vendorscript "$vendorscript"
+
+vendorpath vendorbinexp "$vendorbin"
+vendorpath vendorlibexp "$vendorlib"
+vendorpath vendorarchexp "$vendorarch"
+vendorpath vendorprefixexp "$vendorprefix"
+vendorpath vendorscriptexp "$vendorscript"
+
+vendorpath vendorman1dir "$man1dir"
+vendorpath vendorman3dir "$man3dir"
+vendorpath vendorhtml1dir "$html1dir"
+vendorpath vendorhtml3dir "$html3dir"
+
+vendorpath vendorman1direxp "$vendorman1dir"
+vendorpath vendorman3direxp "$vendorman3dir"
+vendorpath vendorhtml1direxp "$vendorhtml1dir"
+vendorpath vendorhtml3direxp "$vendorhtml3dir"
+
+vendorpath installvendorarch "$installpath$vendorarch"
+vendorpath installvendorbin "$installpath$vendorbin"
+vendorpath installvendorhtml1dir "$installpath$vendorhtml1dir"
+vendorpath installvendorhtml3dir "$installpath$vendorhtml3dir"
+vendorpath installvendorlib "$installpath$vendorlib"
+vendorpath installvendorman1dir "$installpath$vendorman1dir"
+vendorpath installvendorman3dir "$installpath$vendorman3dir"
+vendorpath installvendorscript "$installpath$vendorscript"
+
+log
diff -uNr perl-5.26.1.orig/cnf/configure_pfmt.sh perl-5.26.1/cnf/configure_pfmt.sh
--- perl-5.26.1.orig/cnf/configure_pfmt.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_pfmt.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,54 @@
+# Non-testable printf formats; must be hinted or guessed.
+
+define d_PRIEUldbl 'undef'
+define d_PRIFUldbl 'undef'
+define d_PRIGUldbl 'undef'
+define d_PRIXU64 'undef'
+define d_PRId64 'undef'
+define d_PRIeldbl 'undef'
+define d_PRIfldbl 'undef'
+define d_PRIgldbl 'undef'
+define d_PRIi64 'undef'
+define d_PRIo64 'undef'
+define d_PRIu64 'undef'
+define d_PRIx64 'undef'
+define d_SCNfldbl 'undef'
+define sPRIEUldbl '"LE"'
+define sPRIFUldbl '"LF"'
+define sPRIGUldbl '"LG"'
+define sPRIXU64 '"LX"'
+define sPRId64 '"Ld"'
+define sPRIeldbl '"Le"'
+define sPRIfldbl '"Lf"'
+define sPRIgldbl '"Lg"'
+define sPRIi64 '"Li"'
+define sPRIo64 '"Lo"'
+define sPRIu64 '"Lu"'
+define sPRIx64 '"Lx"'
+define sSCNfldbl '"Lf"'
+define nvEUformat '"E"'
+define nvFUformat '"F"'
+define nvGUformat '"G"'
+define nveformat '"e"'
+define nvfformat '"f"'
+define nvgformat '"g"'
+define uidformat '"lu"'
+define gidformat '"lu"'
+
+# 64 ints on 32 host should get %Ld instead of %ld.
+# 32 on 32, or 64 on 64, must get regular %ld.
+# This matters for use64bitint builds.
+
+if [ "$ivsize" -gt "$longsize" ]; then
+	define ivdformat '"Ld"'
+	define uvoformat '"Lo"'
+	define uvuformat '"Lu"'
+	define uvxformat '"Lx"'
+	define uvXUformat '"LX"'
+else
+	define ivdformat '"ld"'
+	define uvoformat '"lo"'
+	define uvuformat '"lu"'
+	define uvxformat '"lx"'
+	define uvXUformat '"lX"'
+fi
diff -uNr perl-5.26.1.orig/cnf/configure_sigs.sh perl-5.26.1/cnf/configure_sigs.sh
--- perl-5.26.1.orig/cnf/configure_sigs.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_sigs.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,67 @@
+# Check which signals are defined.
+# This may seem a little barbaric, but the whole procedure
+# doesn't require running any compiled executables.
+
+msg "Checking available signal names"
+
+signals='ZERO'
+siginit='"ZERO"'
+signums='0'
+signumi='0'
+sigsize=1
+
+for sig in HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1\
+	SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG\
+	XCPU XFSZ VTALRM PROF WINCH IO PWR SYS IOT CLD POLL UNUSED ; do
+	try_start
+	try_includes 'signal.h'
+
+	# OH SHI--
+	try_add "#if SIG$sig == 0"
+	try_add "number 0"
+	for num in `seq 1 100`; do
+		try_add "#elif SIG$sig == $num"
+		try_add "number $num"
+	done
+	try_add "#endif"
+
+	if try_preproc; then
+		num=`grep 'number ' try.out | sed -e 's/[^0-9]//g'`
+		if [ -n "$num" -a "$num" != 0 ]; then
+			msg "   got SIG$sig = $num" >&2
+			signals="$signals $sig"
+			siginit="$siginit, \"$sig\""
+			signums="$signums $num"
+			signumi="$signumi, $num"
+			sigsize=$((sigsize+1))
+		fi
+	fi
+done
+[ -z "$siginit" ] || siginit="$siginit, 0"
+[ -z "$signumi" ] || signumi="$signumi, 0"
+
+define sig_name "$signals"
+define sig_name_init "$siginit"
+define sig_num "$signums"
+define sig_num_init "$signumi"
+define sig_size "$sigsize"
+
+# try to get NSIG value
+mstart "Checking NSIG value"
+try_start
+try_includes 'signal.h'
+try_add 'configure check sig_count=NSIG'
+try_dump
+if try_preproc; then
+	num=`grep 'configure check sig_count' try.out | sed -e 's/.*=//' -e 's/[^0-9]//g'`
+	if [ -n "$num" ]; then
+		define sig_count "$num"
+		result "$num"
+	else
+		define sig_count "0"
+		result "unknown"
+	fi
+else
+	define sig_count "0"
+	result "unknown"
+fi
diff -uNr perl-5.26.1.orig/cnf/configure_thrd.sh perl-5.26.1/cnf/configure_thrd.sh
--- perl-5.26.1.orig/cnf/configure_thrd.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_thrd.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,432 @@
+# Thread support
+
+mstart 'Looking whether to enable threads'
+# $usethreads gets decided in configure_libs
+if [ "$usethreads" = 'define' ]; then
+	if [ "$use5005threads" = 'define' ]; then
+		define useithreads 'undef'
+		result 'yes, 5.005 threads'
+	elif [ "$useithreads" = 'define' ]; then
+		define use5005threads 'undef'
+		result 'yes, ithreads'
+	else
+		define useithreads 'define'
+		define use5005threads 'undef'
+		result 'yes, ithreads'
+	fi
+else
+	define useithreads 'undef'
+	define use5005threads 'undef'
+	result 'no'
+	msg "Disabling thread-related stuff"
+fi
+
+# Both presence *and* prototype for the function are checked here,
+# with the prototype encoded the same way as the constants from config.h:
+# 	[A-Za-z]_[A-Za-z]+
+# Each letter mean one type; first, return type, then arguments
+#	I_BBW	int foo(char*, char*, size_t)
+#	V_HI	void bar(FILE*, int)
+# Here's what each letter means:
+
+type_I='int'
+type_B='char*'
+type_C='const char*'
+type_V='void'
+type_H='FILE*'
+type_W='size_t'
+type_Z='double'
+type_E='int*'
+type_U='unsigned long'
+type_L='long int'
+type_i='int*'
+type_l='long*'
+type_t='int32_t*'
+type_s='socklen_t'
+type_u='uint32_t'
+
+# There are also four special letters:
+free_type_letters='T S D R'
+# Types for these are specified for each test separately (usually that's
+# a pointer to some struct)
+
+# The function is only usable if it links and its prototype is known.
+# Also, even if threads are disabled, we still have to put all those
+# symbols into config.sh.
+#
+# Hinting anything here is not a good idea.
+# Unless it's both d_func_r and func_r_proto.
+
+# funcproto func_r \
+#	includes \
+#	'P_ROTO1 P_ROTO2 ...' \
+#	'T=type_T' 'S=type_S' ...
+
+funcproto() {
+	fun=$1
+	inc=$2
+	shift 2
+
+	fsym="d_${fun}"
+	psym="${fun}_proto"
+
+	if [ "$usethreads" != 'define' ]; then
+		define $fsym 'undef'
+		define $psym '0'
+		return
+	fi
+
+	mstart "Checking for $fun"
+
+	if not checkfuncr $fsym $fun "$inc"; then
+		define $fsym 'undef'
+		define $psym '0'
+		result "missing"
+	elif not checkproto $psym $fun "$inc" "$@"; then
+		define $fsym 'undef'
+		define $psym '0'
+		result "unusable"
+	else
+		getenv proto "$psym"
+		define $fsym 'define'
+		define $psym "$proto"
+		result "found, $proto"
+	fi
+}
+
+checkfuncr() {
+	if gethint $1 found; then
+		test $found = 'define'
+	else
+		try_start
+		try_add "extern void $2(void);"
+		try_add "int main() { $2(); return 0; }"
+		try_link
+	fi
+}
+
+# The following "real" prototype checks may return false positives
+# if none of included headers declares prototype for $w. Because of
+# this, we must make sure there was at least one negative result.
+#
+# In case the first one we try succeeds, V_Z is used for a negative
+# test. None of the functions below have that kind of prototype,
+# so it must fail in all cases.
+
+checkproto() {
+	sym=$1
+	fun=$2
+	inc=$3
+	pro=$4
+	shift 4 # the rest are type assignments
+
+	require 'cc'
+	setfreetypes "$@"
+
+	if gethint $sym proto; then
+		test -n "$proto"
+		return $?
+	fi
+
+	setenv $sym ''
+	hadfailure='no'
+	hadsuccess='no'
+	for p in $pro; do
+		if tryproto $fun "$inc" $p; then
+			hadsuccess='yes'
+			break
+		else
+			hadfailure='yes'
+		fi
+	done
+
+	if [ "$hadsuccess" = 'no' ]; then
+		return 1
+	elif [ "$hadfailure" = 'yes' ]; then
+		true
+	elif tryproto $fun "$inc" 'V_Z'; then
+		return 1
+	fi
+
+	setenv $sym "$p"
+	return 0
+}
+
+setfreetypes() {
+	for cl in $free_type_letters; do
+		setenv "type_$cl" 'undef'
+	done
+
+	for cv in "$@"; do
+		cl=${cv%=*}
+		ct=${cv##*=}
+
+		test -n "$cl" || die "Bad type spec $cv (lhs)"
+		test -n "$ct" || die "Bad type spec $cv (rhs)"
+
+		setenv "type_$cl" "$ct"
+	done
+}
+
+tryproto() {
+	try_start
+	try_includes $2
+
+	fun=$1
+	pro=$3
+
+	# P_ROTO -> P
+	key=${pro%_*}
+	getenv ret "type_$key"
+	test -n "$ret" || die "Bad type letter $key in $fun($pro)"
+
+	# P_ROTO -> R O T O
+	keys=`echo "$pro" | sed -e 's/^._//' -e 's/\(.\)/\1 /g'`
+	args=''
+	for key in $keys; do
+		getenv arg "type_$key"
+		if [ -z "$arg" ]; then
+			die "Bad type letter $argkey in $fun($pro)"
+		elif [ "$argtype" = "undef" ]; then
+			die "Undef free type letter $argkey in $fun($pro)"
+		elif [ -z "$args" ]; then
+			args="$arg"
+		else
+			args="$args, $arg"
+		fi
+	done
+
+	try_add "$ret $fun($args);"
+	try_compile
+}
+
+funcproto asctime_r \
+	'time.h' \
+	'B_SB B_SBI I_SB I_SBI' \
+	'S=const struct tm*'
+
+funcproto ctime_r \
+	'time.h' \
+	'B_SB B_SBI I_SB I_SBI' \
+	'S=const time_t*'
+
+funcproto crypt_r \
+	'sys/types.h stdio.h crypt.h' \
+	'B_CCS B_CCD' \
+	'S=struct crypt_data*' 'D=CRYPTD*'
+
+funcproto ctermid_r \
+	'sys/types.h stdio.h' \
+	'B_B'
+
+funcproto endpwent_r \
+	'sys/types.h stdio.h pwd.h' \
+	'I_H V_H'
+
+funcproto getgrent_r \
+	'sys/types.h stdio.h grp.h'\
+	'I_SBWR I_SBIR S_SBW S_SBI I_SBI I_SBIH'\
+	'S=struct group*' 'R=struct group**'
+
+funcproto endgrent_r \
+	'sys/types.h stdio.h grp.h' \
+	'I_H V_H'
+
+funcproto getgrgid_r \
+	'sys/types.h stdio.h grp.h' \
+	'I_TSBWR I_TSBIR I_TSBI S_TSBI' \
+	'T=gid_t' 'S=struct group*' 'R=struct group**'
+
+funcproto getgrnam_r \
+	'sys/types.h stdio.h grp.h' \
+	'I_CSBWR I_CSBIR S_CBI I_CSBI S_CSBI' \
+	'S=struct group*' 'R=struct group**'
+
+funcproto drand48_r \
+	'sys/types.h stdio.h stdlib.h' \
+	'I_ST' \
+	'S=struct drand48_data*' 'T=double*'
+
+funcproto endhostent_r \
+	'sys/types.h stdio.h netdb.h' \
+	'I_D V_D' \
+	'D=struct hostent_data*'
+
+funcproto endnetent_r \
+	'sys/types.h stdio.h netdb.h' \
+	'I_D V_D' \
+	'D=struct netent_data*'
+
+funcproto endprotoent_r \
+	'sys/types.h stdio.h netdb.h' \
+	'I_D V_D' \
+	'D=struct protoent_data*'
+
+funcproto endservent_r \
+	'sys/types.h stdio.h netdb.h' \
+	'I_D V_D' \
+	'D=struct servent_data*'
+
+funcproto gethostbyaddr_r \
+	'netdb.h' \
+	'I_CWISBWRE S_CWISBWIE S_CWISBIE S_TWISBIE S_CIISBIE S_CSBIE S_TSBIE I_CWISD I_CIISD I_CII I_TsISBWRE' \
+	'T=const void*' 'S=struct hostent*' 'D=struct hostent_data*' 'R=struct hostent**'
+
+funcproto gethostbyname_r \
+	'netdb.h' \
+	'I_CSBWRE S_CSBIE I_CSD' \
+	'S=struct hostent*' 'R=struct hostent**' 'D=struct hostent_data*'
+
+funcproto gethostent_r \
+	'netdb.h' \
+	'I_SBWRE I_SBIE S_SBIE S_SBI I_SBI I_SD'\
+	'S=struct hostent*' 'R=struct hostent**' 'D=struct hostent_data*'
+
+funcproto getlogin_r \
+	'unistd.h' \
+	'I_BW I_BI B_BW B_BI'
+
+funcproto getnetbyaddr_r \
+	'netdb.h' \
+	'I_UISBWRE I_LISBI S_TISBI S_LISBI I_TISD I_LISD I_IISD I_uISBWRE'\
+	'T=in_addr_t' 'S=struct netent*' 'D=struct netent_data*' 'R=struct netent**'
+
+funcproto getnetbyname_r \
+	'netdb.h' \
+	'I_CSBWRE I_CSBI S_CSBI I_CSD' \
+	'S=struct netent*' 'R=struct netent**' 'D=struct netent_data*'
+
+funcproto getnetent_r \
+	'netdb.h' \
+	'I_SBWRE I_SBIE S_SBIE S_SBI I_SBI I_SD' \
+	'S=struct netent*' 'R=struct netent**' 'D=struct netent_data*'
+
+funcproto getprotobyname_r \
+	'netdb.h' \
+	'I_CSBWR S_CSBI I_CSD' \
+	'S=struct protoent*' 'R=struct protoent**' 'D=struct protoent_data*'
+
+funcproto getprotobynumber_r \
+	'netdb.h' \
+	'I_ISBWR S_ISBI I_ISD' \
+	'S=struct protoent*' 'R=struct protoent**' 'D=struct protoent_data*'
+
+funcproto getprotoent_r \
+	'netdb.h' \
+	'I_SBWR I_SBI S_SBI I_SD' \
+	'S=struct protoent*' 'R=struct protoent**' 'D=struct protoent_data*'
+
+funcproto getpwent_r \
+	'pwd.h' \
+	'I_SBWR I_SBIR S_SBW S_SBI I_SBI I_SBIH' \
+	'S=struct passwd*' 'R=struct passwd**'
+
+funcproto getpwnam_r \
+	'pwd.h' \
+	'I_CSBWR I_CSBIR S_CSBI I_CSBI' \
+	'S=struct passwd*' 'R=struct passwd**'
+
+funcproto getpwuid_r \
+	'sys/types.h pwd.h' \
+	'I_TSBWR I_TSBIR I_TSBI S_TSBI' \
+	 'T=uid_t' 'S=struct passwd*' 'R=struct passwd**'
+
+funcproto getservbyname_r \
+	'netdb.h' \
+	'I_CCSBWR S_CCSBI I_CCSD' \
+	'S=struct servent*' 'R=struct servent**' 'D=struct servent_data*'
+
+funcproto getservbyport_r \
+	'netdb.h' \
+	'I_ICSBWR S_ICSBI I_ICSD' \
+	'S=struct servent*' 'R=struct servent**' 'D=struct servent_data*'
+
+funcproto getservent_r \
+	'netdb.h' \
+	'I_SBWR I_SBI S_SBI I_SD' \
+	'S=struct servent*' 'R=struct servent**' 'D=struct servent_data*'
+
+funcproto getspnam_r \
+	'shadow.h' \
+	'I_CSBWR S_CSBI' \
+	'S=struct spwd*' 'R=struct spwd**'
+
+funcproto gmtime_r \
+	'time.h' \
+	'S_TS I_TS' \
+	'S=struct tm*' 'T=const time_t*'
+
+funcproto localtime_r \
+	'time.h' \
+	'S_TS I_TS' \
+	'S=struct tm*' 'T=const time_t*'
+
+funcproto random_r \
+	'stdlib.h' \
+	'I_iS I_lS I_St' \
+	'S=struct random_data*'
+
+funcproto readdir64_r \
+	'stdio.h dirent.h' \
+	'I_TSR I_TS' \
+	'T=DIR*' 'S=struct dirent64*' 'R=struct dirent64**'
+
+funcproto readdir_r \
+	'stdio.h dirent.h' \
+	'I_TSR I_TS' \
+	'T=DIR*' 'S=struct dirent*' 'R=struct dirent**'
+
+funcproto setgrent_r \
+	'grp.h' \
+	'I_SBWR I_SBIR S_SBW S_SBI I_SBI I_SBIH' \
+	'S=struct group*' 'R=struct group**'
+
+funcproto sethostent_r \
+	'netdb.h' \
+	'I_ID V_ID' \
+	'D=struct hostent_data*'
+
+funcproto setlocale_r \
+	'locale.h' \
+	'I_ICBI'
+
+funcproto setnetent_r \
+	'netdb.h' \
+	'I_ID V_ID' \
+	'D=struct netent_data*'
+
+funcproto setprotoent_r \
+	'netdb.h' \
+	'I_ID V_ID' \
+	'D=struct protoent_data*'
+
+funcproto setpwent_r \
+	'pwd.h' \
+	'I_H V_H'
+
+funcproto setservent_r \
+	'netdb.h' \
+	'I_ID V_ID' \
+	'D=struct servent_data*'
+
+funcproto srand48_r \
+	'stdlib.h' \
+	'I_LS' \
+	'S=struct drand48_data*'
+
+funcproto srandom_r \
+	'stdlib.h' \
+	'I_TS' \
+	'T=unsigned int' 'S=struct random_data*'
+
+funcproto strerror_r \
+	'string.h' \
+	'I_IBW I_IBI B_IBW'
+
+funcproto tmpnam_r \
+	'stdio.h' \
+	'B_B'
+
+funcproto ttyname_r \
+	'stdio.h unistd.h' \
+	'I_IBW I_IBI B_IBI'
diff -uNr perl-5.26.1.orig/cnf/configure_tool.sh perl-5.26.1/cnf/configure_tool.sh
--- perl-5.26.1.orig/cnf/configure_tool.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_tool.sh	2018-03-05 15:38:45.000000000 -0600
@@ -0,0 +1,343 @@
+# Toolchain detection
+
+tryprog() {
+	log "trying $1=$2"
+	if command -v "$2" 1>/dev/null 2>/dev/null; then
+		define "$1" "$2"
+		result "$2"
+		return 0
+	else
+		return 1
+	fi
+}
+
+tryfromenv() {
+	if [ "$mode" = "buildmini" ]; then
+		getenv ev "HOST$2"
+	else
+		getenv ev "$2"
+	fi
+
+	if [ -n "$ev" ]; then
+		tryprog $1 "$ev" && return 0
+		die "Supplied $ev is not usable"
+	fi
+
+	unset ev
+	return 1
+}
+
+# This is only a function for easy access to return-s
+# try.out contains `$cc --version` output.
+#
+# Figuring out gcc is necessary to make sure -fwrapv fix gets applied.
+
+detect_cc_version() {
+	_v=`sed -ne '/^gcc version \([0-9][0-9.]*\).*/s//\1/p' try.out`
+
+	if [ -n "$_v" ]; then
+		define cctype 'gcc'
+		define ccversion "$_v"
+		define gccversion "$_v"
+		result "gcc $_v"
+		return
+	fi
+
+	_v=`sed -ne '/^clang version \([0-9][0-9.]*\).*/s//\1/p' try.out`
+
+	if [ -n "$_v" ]; then
+		define cctype 'clang'
+		define ccversion "$_v"
+		define gccversion "0.0"
+		result "clang $_v"
+		return
+	fi
+
+	define cctype 'cc'
+	define ccversion ''
+	define gccversion '0.0'
+	result 'unknown'
+}
+
+# whichprog symbol VAR prog1 prog2
+whichprog() {
+	mstart "Checking for $1"
+	hinted "$1" && return 0
+
+	# Maybe we've got $CC or $HOSTCC?
+	tryfromenv "$1" "$2" && return 0
+
+	# For anything that sounds like a native compilation,
+	# try no-prefix tools *first*. This is to avoid using
+	# long names is case the host happens to have them.
+	if [ "$mode" = 'native' -o "$mode" = 'buildmini' ]; then
+		tryprog $1 "$3" && return 0
+	fi
+
+	# Finally, try $target-gcc
+	test -n "$toolsprefix" && tryprog $1 "$toolsprefix$3"  && return 0
+	test -n "$target"      && tryprog $1 "$target-$3"      && return 0
+	test -n "$targetarch"  && tryprog $1 "$targetarch-$3"  && return 0
+
+	result "none found"
+	return 1
+}
+
+whichprog cc CC gcc || whichprog cc CC cc || die "No C compiler found"
+#whichprog ld LD ld # while correct, this breaks MM library test
+whichprog ar AR ar || die "Cannot find ar"
+whichprog nm NM nm
+whichprog ranlib RANLIB ranlib
+whichprog readelf READELF readelf || die "Cannot find readelf"
+whichprog objdump OBJDUMP objdump || die "Cannot find objdump"
+
+# XXX: this looks wrong, but the usemmldlt code depends on $ld being able
+# to compile try.c. What kind of moron could have written that. Oh wait.
+#
+# But, there was probably a reason to assume this, likely becase mainline
+# Configure did and still does the same. So, ugh, leaving it as is for now.
+# Speak of backward bug compatibility.
+define ld "$cc"
+
+log
+
+mstart "Trying $cc"
+if not hinted 'cctype'; then
+	run $cc -v >try.out 2>&1
+	try_dump_out
+	detect_cc_version
+fi
+
+mstart "Checking whether $cc is a C++ compiler"
+if not hinted 'd_cplusplus'; then
+	try_start
+	try_cat <<END
+#if defined(__cplusplus)
+YES
+#endif
+END
+	try_dump
+	if not run $cc $ccflags -E try.c > try.out 2>>$cfglog; then
+		define d_cplusplus 'undef'
+		result "probably no"
+	else
+		_r=`grep -v '^#' try.out | grep . | head -1 | grep '^YES'`
+		if [ -n "$_r" ]; then
+			define d_cplusplus 'define'
+			result "yes"
+		else
+			define d_cplusplus 'undef'
+			result 'no'
+		fi
+	fi
+fi
+
+mstart "Deciding how to declare external symbols"
+if not hinted "extern_C"; then
+	case "$d_cplusplus" in
+		define)
+			define "extern_C" 'extern "C"'
+			result "$extern_C"
+			;;
+		*)
+			define "extern_C" 'extern'
+			result "$extern_C"
+			;;
+	esac
+fi
+
+# File name extensions, must be set before running any compile/link tests
+define _o '.o'
+define _a '.a'
+define so 'so'
+define _exe ''
+
+# Used only for modules
+define cccdlflags '-fPIC -Wno-unused-function'
+define ccdlflags '-Wl,-E'
+
+# Misc flags setup
+predef lddlflags "-shared"	# modules
+predef ccflags ''		# perl and modules
+predef ldflags ''		# perl only?
+predef cppflags ''		# unused?
+
+# setfromvar what SHELLVAR
+setfromenv() {
+	getenv v "$2"
+	test -n "$v" && append "$1" "$v"
+}
+
+if [ "$mode" = 'target' -o "$mode" = 'native' ]; then
+	setfromenv ccflags CFLAGS
+	setfromenv ldflags LDFLAGS
+	if [ -n "$sysroot" ]; then
+		msg "Adding --sysroot to {cc,ld}flags"
+		prepend ccflags "--sysroot=$sysroot"
+		prepend ldflags "--sysroot=$sysroot"
+		# While cccdlflags are used together with ccflags,
+		# ld is always called with lddlflags *instead*of* ldflags
+		prepend lddlflags "--sysroot=$sysroot"
+		# Same for cpp
+		prepend cppflags "--sysroot=$sysroot"
+	fi
+elif [ "$mode" = 'buildmini' ]; then
+	setfromenv ccflags HOSTCFLAGS
+	setfromenv ldflags HOSTLDFLAGS
+fi
+
+# Use $ldflags as default value for $lddlflags, together with whatever
+# hints provided, but avoid re-setting anyting specified in the command line
+if [ -n "$ldflags" -a "$x_lddlflags" != "user" ]; then
+	msg "Checking which flags from \$ldflags to move to \$lddlflags"
+	for f in $ldflags; do
+		case "$f" in
+			-L*|-R*|-Wl,-R*)
+				msg "    added $f"
+				append lddlflags "$f"
+				;;
+		esac
+	done
+fi
+
+# enddef ccflags # done later in _hdrs because of LARGEFILE_SOURCE
+enddef ldflags
+enddef lddlflags
+enddef cppflags
+
+mstart "Checking whether ld supports scripts"
+if not hinted 'ld_can_script'; then
+	cat > try.c <<EOM
+void foo() {}
+void bar() {}
+EOM
+	cat > try.h <<EOM
+LIBTEST_42 {
+ global:
+  foo;
+ local: *;
+ };
+EOM
+	log "try.c"
+	try_dump
+	log "try.h"
+	try_dump_h
+	rm -f a.out 2>/dev/null
+
+	if run $cc $cccdlflags $ccdlflags $ccflags $lddlflags -o a.out try.c \
+		-Wl,--version-script=try.h >/dev/null 2>&1 \
+		&& test -s a.out
+	then
+		define ld_can_script 'define'
+		result "yes"
+	else
+		define ld_can_script 'undef'
+		result "no"
+	fi
+fi
+
+# Guessing OS is better done with the toolchain available.
+# CC output is crucial here -- Android toolchains come with
+# generic armeabi prefix and "android" is one of the few osname
+# values that make difference later.
+
+mstart "Trying to guess target OS"
+if not hinted 'osname'; then
+	run $cc -v > try.out 2>&1
+	try_dump_out
+
+	_ct=`sed -ne '/^Target: /s///p' try.out`
+	test -z "$_ct" && _ct="$targetarch"
+
+	case "$_ct" in
+		*-mingw32)
+			define osname "MSWin32"
+			result "MSWin32"
+			;;
+		*-android|*-androideabi)
+			define osname "android"
+			result "Android"
+			;;
+		*-linux*)
+			define osname "linux"
+			result "Linux"
+			;;
+		*-bsd*)
+			define osname "bsd"
+			result "BSD"
+			;;
+		*)
+			result "no"
+			;;
+	esac
+fi
+
+# Check whether debugging should be enabled
+# Allow -DEBUGGING as well (sets EBUGGING=define)
+case "$DEBUGGING:$EBUGGING" in
+	:*)
+		DEBUGGING=$EBUGGING
+		;;
+esac
+
+mstart "Checking whether to enable -g"
+predef optimize ''
+case "$DEBUGGING" in
+	both|define)
+		append optimize "-g"
+		result "yes" ;;
+	*)
+		result "no" ;;
+esac
+
+mstart "Checking whether to use -DDEBUGGING"
+case "$DEBUGGING" in
+	both|define)
+		append optimize '-DDEBUGGING'
+		result "yes" ;;
+	*)
+		result "no" ;;
+esac
+
+# gcc 4.9 and above does some optimizations that break perl.
+# see perl ticket 121505.
+if [ "$cctype" = 'gcc' ]; then
+	case "$ccversion" in
+		1.*|2.*|3.*) ;;
+		4.9*) append 'optimize' '-fwrapv -fno-strict-aliasing' ;;
+		4.*) ;;
+		*) append 'optimize' '-fwrapv -fno-strict-aliasing' ;;
+	esac
+fi
+enddef optimize
+
+# These are kind-of part of toolchain, but we do not test them
+
+# For newer gcc-s, -E alone is *not* enough! Perl expects cpp not to break
+# lines, but gcc injects #line directives in-between tokens, subtly breaking
+# try_preproc and Errno.pm
+define cpp "$cc -E -P"
+define cpprun "$cpp"
+define cppstdin "$cpp"
+
+define cpplast -
+define cppminus -
+define cppsymbols
+
+define nm_opt
+define nm_so_opt
+
+# cperl wants to know this for some reason
+mstart "Checking whether address sanitizer is enabled"
+if not hinted sanitize_address 'yes' 'no'; then
+	case "$ccflags" in
+		*-fsanitize=address*|*-faddress-sanitizer*)
+			define sanitize_address 'define'
+			result 'yes'
+			;;
+		*)
+			define sanitize_address 'undef'
+			result 'no'
+			;;
+	esac
+fi
diff -uNr perl-5.26.1.orig/cnf/configure_type.sh perl-5.26.1/cnf/configure_type.sh
--- perl-5.26.1.orig/cnf/configure_type.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_type.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,142 @@
+# Check availability of some types, and possibly their size
+
+# useinttype namesym type sizesym size
+useitype() {
+	define $1 "$2"
+	define $3 "$4"
+}
+
+# checktype symbol type 'includes'
+checktype() {
+	mstart "Checking type $2"
+	hinted $1 'found' 'missing' && return
+
+	try_start
+	try_includes $3
+	try_add "$2 foo;"
+	try_compile
+
+	resdef $1 'found' 'missing'
+}
+
+# XXX: this probably won't work on non-ELF hosts.
+# TODO: add test for readelf usability, and switch
+# to objdump if possible
+
+# checksize symbol type includes
+checksize() {
+	mstart "Checking size of $2"
+	hinted $1 && return
+	
+	try_start
+	try_includes $3
+	try_add "$2 foo;"
+
+	if not try_compile; then
+		define $1 'undef'
+		result 'missing'
+		return
+	fi
+
+	if not try_readelf -s > try.out 2>>$cfglog; then
+		result 'unknown'
+		die "Cannot determine sizeof($2), use -D${1}size="
+		return
+	fi
+
+	result=`grep foo try.out | sed -r -e 's/.*: [0-9]+ +//' -e 's/ .*//'`
+	if [ -z "$result" -o "$result" -le 0 ]; then
+		result "unknown"
+		die "Cannot determine sizeof($2)"
+		return
+	fi
+
+	define $1 "$result"
+	result $result\ `bytes $result`
+}
+
+# usetypesize typesym sizesym type 'includes'
+usetypesize() {
+	mstart "Checking $1"
+	if not hinted $1; then
+		define $1 $3
+		result "$3"
+		checksize $2 $3 "$4"
+	else
+		getenv t "$1"
+		checksize $2 "$t" "$4"
+	fi
+}
+
+# Mainline perl Configure implements/-ed a kind of crude stdint.h
+# replacement in case the header is not available. We won't do that.
+
+test "$i_stdint" = 'define' || die "Cannot proceed without <stdint.h>"
+
+define d_int64_t 'define'
+
+useitype  u8type  uint8_t  u8size 1
+useitype u16type uint16_t u16size 2
+useitype u32type uint32_t u32size 4
+useitype u64type uint64_t u64size 8
+
+useitype  i8type  int8_t  i8size 1
+useitype i16type int16_t i16size 2
+useitype i32type int32_t i32size 4
+useitype i64type int64_t i64size 8
+
+define d_quad 'define'
+define quadtype 'int64_t'
+define uquadtype 'uint64_t'
+define quadkind 'QUAD_IS_INT64_t'
+
+checktype d_longdbl 'long double'
+checktype d_longlong 'long long'
+
+checksize charsize 'char'
+checksize shortsize 'short'
+checksize intsize 'int'
+checksize longsize 'long'
+checksize doublesize 'double'
+checksize ptrsize 'void*'
+test "$d_longdbl" = 'define'  && checksize longdblsize 'long double'
+test "$d_longlong" = 'define' && checksize longlongsize 'long long'
+
+checktype d_fd_set 'fd_set' 'sys/types.h'
+checktype d_fpos64_t 'fpos64_t' 'stdio.h'
+checktype d_off64_t 'off64_t' 'sys/types.h'
+checktype d_ptrdiff_t 'ptrdiff_t' 'stddef.h'
+checktype d_cmsghdr_s 'struct cmsghdr' 'netinet/in.h'
+checktype d_fs_data_s 'struct fs_data' 'sys/vfs.h'
+checktype d_msghdr_s 'struct msghdr' 'sys/types.h sys/socket.h sys/uio.h'
+checktype d_statfs_s 'struct statfs' \
+	'sys/types.h sys/param.h sys/mount.h sys/vfs.h sys/statfs.h'
+checktype d_union_semun 'union semun' 'sys/types.h sys/ipc.h sys/sem.h'
+checktype d_socklen_t 'socklen_t' 'sys/types.h sys/socket.h'
+checktype d_sockaddr_in6 'struct sockaddr_in6' 'sys/socket.h netinet/in.h'
+checktype d_clock_t 'clock_t' 'sys/times.h' # not in Glossary, for d_times
+
+# These checks are simplified compared to what Configure does.
+checktype d_ip_mreq 'struct ip_mreq' \
+	'sys/types.h sys/socket.h netinet/in.h'
+checktype d_ip_mreq_source 'struct ip_mreq_source' \
+	'sys/types.h sys/socket.h netinet/in.h'
+checktype d_ipv6_mreq 'struct ipv6_mreq' \
+	'sys/types.h sys/socket.h netinet/in.h'
+checktype d_ipv6_mreq_source 'struct ipv6_mreq_source' \
+	'sys/types.h sys/socket.h netinet/in.h'
+
+# For these mainline perl does some guessing like int64_t instead
+# of possibly missing off_t, but we won't do that.
+# We do still need to check type sizes.
+
+usetypesize sizetype sizesize 'size_t' 'sys/types.h'
+usetypesize fpostype fpossize 'fpos_t' 'stdio.h sys/types.h'
+usetypesize lseektype lseeksize 'off_t' 'unistd.h'
+usetypesize uidtype uidsize 'uid_t' 'sys/types.h'
+usetypesize gidtype gidsize 'gid_t' 'sys/types.h'
+usetypesize timetype timesize 'time_t' 'sys/types.h'
+
+define ssizetype 'ssize_t'
+define uidsign '1'
+define gidsign '1'
diff -uNr perl-5.26.1.orig/cnf/configure_type_dbl.sh perl-5.26.1/cnf/configure_type_dbl.sh
--- perl-5.26.1.orig/cnf/configure_type_dbl.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_type_dbl.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,190 @@
+# These tests only provide (unsafe) defaults. Proper values must be hinted.
+
+# Assumption: floating-point endianess matches integer endianess
+predef 'doublekind' '-1'
+case "$byteorder" in
+	1234*) doublekind=3 ;;
+	*4321) doublekind=4 ;;
+esac
+case "$doublekind" in
+1) msg "Assuming IEEE 754 32-bit little endian doubles." ;;
+2) msg "Assuming IEEE 754 32-bit big endian doubles." ;;
+3) msg "Assuming IEEE 754 64-bit little endian doubles." ;;
+4) msg "Assuming IEEE 754 64-bit big endian doubles." ;;
+5) msg "Assuming IEEE 754 128-bit little endian doubles." ;;
+6) msg "Assuming IEEE 754 128-bit big endian doubles." ;;
+7) msg "Assuming IEEE 754 64-bit mixed endian doubles (32-bit LEs in BE)." ;;
+8) msg "Assuming IEEE 754 64-bit mixed endian doubles (32-bit BEs in LE)." ;;
+*) die "doublekind must be hinted for this architecture" ;;
+esac
+enddef doublekind
+
+# We will not guess longdblkind; those vary, and must be hinted.
+if [ "$d_longdbl" = 'define' ]; then
+	predef longdblkind '0'
+else
+	predef longdblkind '-1'
+fi
+case "$longdblkind" in
+0) msg "Assuming long doubles are doubles." ;;
+1) msg "Assuming IEEE 754 128-bit little endian long doubles." ;;
+2) msg "Assuming IEEE 754 128-bit big endian long doubles." ;;
+3) msg "Assuming x86 80-bit little endian long doubles." ;;
+4) msg "Assuming x86 80-bit big endian long doubles." ;;
+5) msg "Assuming 128-bit fully little-endian double-double long doubles (64-bit LEs in LE)." ;;
+6) msg "Assuming 128-bit fully big-endian double-double long doubles (64-bit BEs in BE)." ;;
+7) msg "Assuming 128-bit mixed double-double long doubles (64-bit LEs in BE)." ;;
+8) msg "Assuming 128-bit mixed double-double long doubles (64-bit BEs in LE)." ;;
+*) msg "No idea which longdblkind you have, disabling it" ;;
+esac
+enddef longdblkind
+
+# Again, no tests for these.
+predef doubleinfbytes 'undef'
+predef doublenanbytes 'undef'
+case "$doublekind" in
+1) # IEEE 754 32-bit LE
+   doubleinfbytes='0x00, 0x00, 0xf0, 0x7f'
+   doublenanbytes='0x00, 0x00, 0xf8, 0x7f'
+   ;;
+2) # IEEE 754 32-bit BE
+   doubleinfbytes='0x7f, 0xf0, 0x00, 0x00'
+   doublenanbytes='0x7f, 0xf8, 0x00, 0x00'
+   ;;
+3) # IEEE 754 64-bit LE
+   doubleinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'
+   doublenanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f'
+   ;;
+4) # IEEE 754 64-bit BE
+   doubleinfbytes='0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+   doublenanbytes='0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+   ;;
+5) # IEEE 754 128-bit LE
+   doubleinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'
+   doublenanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f'
+   ;;
+6) # IEEE 754 128-bit BE
+   doubleinfbytes='0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+   doublenanbytes='0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+   ;;
+7) # IEEE 754 64-bit mixed: 32-bit LEs in BE
+   doubleinfbytes='0x00, 0x00, 0xf0, 0x7f, 0x00, 0x00, 0x00, 0x00'
+   doublenanbytes='0x00, 0x00, 0xf8, 0x7f, 0x00, 0x00, 0x00, 0x00'
+   ;;
+8) # IEEE 754 64-bit mixed: 32-bit BEs in LE
+   doubleinfbytes='0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00'
+   doublenanbytes='0x00, 0x00, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00'
+   ;;
+esac
+enddef doubleinfbytes
+enddef doublenanbytes
+
+# The default longdblkind=0 means long double *is*double*!
+predef longdblinfbytes "undef"
+predef longdblnanbytes "undef"
+case "$longdblkind" in
+0) # long doubles are doubles
+   longdblinfbytes="$doubleinfbytes"
+   longdblnanbytes="$doublenanbytes"
+   ;;
+1) # IEEE 754 128-bit LE
+   longdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f'
+   longdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f'
+   ;;
+2) # IEEE 754 128-bit BE
+   longdblinfbytes='0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+   longdblnanbytes='0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+   ;;
+3) # IEEE 754 80-bit LE, 12 or 16 bytes (x86)
+   case "$longdblsize" in
+   12) # x86 32-bit (96 bits, or 4 x 32, or 12 x 8)
+       longdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 0x00, 0x00'
+       longdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x7f, 0x00, 0x00'
+       ;;
+   16) # x86_64
+       longdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+       longdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+       ;;
+   *)  # No idea.
+       longdblinfbytes='undef'
+       longdblnanbytes='undef'
+   ;;
+   esac
+   ;;
+4) # IEEE 754 80-bit BE, 12 or 16 bytes
+   case "$longdblsize" in
+   12) # 32-bit system
+       longdblinfbytes='0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+       longdblnanbytes='0x7f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+       ;;
+   16) # 64-bit system
+       longdblinfbytes='0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+       longdblnanbytes='0x7f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+       ;;
+   *)  # No idea.
+       longdblinfbytes='undef'
+       longdblnanbytes='undef'
+   ;;
+   esac
+   ;;
+5) # 128-bit LE-LE "double double"
+   longdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'
+   longdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f'
+   ;;
+6) # 128-bit BE-BE "double double"
+   longdblinfbytes='0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+   longdblnanbytes='0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+   ;;
+7) # 128-bit LE-BE "double double"
+   longdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+   longdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+   ;;
+8) # 128-bit BE-LE "double double"
+   longdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+   longdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'
+   ;;
+*) # No idea.
+   longdblinfbytes='undef'
+   longdblnanbytes='undef'
+   ;;
+esac
+enddef longdblinfbytes
+enddef longdblnanbytes
+
+define alignbytes 8
+
+# perl-5.25.7+; not tested atm, we do not support platforms where
+# any of these values are different.
+
+define d_double_has_inf 'define'
+define d_double_has_nan 'define'
+define d_double_has_negative_zero 'define'
+define d_double_has_subnormals 'define'
+
+define d_double_style_ieee 'define'
+define d_double_style_cray 'undef'
+define d_double_style_ibm 'undef'
+define d_double_style_vax 'undef'
+
+predef d_long_double_style_ieee 'undef'
+predef d_long_double_style_ieee_std 'undef'
+predef d_long_double_style_ieee_extended 'undef'
+predef d_long_double_style_ieee_doubledouble 'undef'
+predef d_long_double_style_vax 'undef'
+
+case "$longdblkind" in
+	1|2|3|4|5|6|7|8) d_long_double_style_ieee='define' ;;
+esac
+
+case "$longdblkind" in
+	1|2) d_long_double_style_ieee_std='define' ;;
+	3|4) d_long_double_style_ieee_extended='define' ;;
+	5|6|7|8) d_long_double_style_ieee_doubledouble='define' ;;
+	9) d_long_double_style_vax='define' ;;
+esac
+
+enddef d_long_double_style_ieee
+enddef d_long_double_style_ieee_std
+enddef d_long_double_style_ieee_extended
+enddef d_long_double_style_ieee_doubledouble
+enddef d_long_double_style_vax
diff -uNr perl-5.26.1.orig/cnf/configure_type_ext.sh perl-5.26.1/cnf/configure_type_ext.sh
--- perl-5.26.1.orig/cnf/configure_type_ext.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_type_ext.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,46 @@
+# Check whether structure X has field Y.
+
+# checkfield name struct field 'includes'
+checkfield() {
+	mstart "Checking whether $2 has $3"
+	hinted "$1" 'yes' 'no' && return
+	
+	try_start
+	try_includes $4
+	try_add 'void foo();'
+	try_add 'void bar()'
+        try_add "{"
+	try_add "	$2 value;"
+	try_add "	foo(value.$3);"
+	try_add "}"
+	try_compile
+
+	resdef $1 'yes' 'no'
+}
+
+checkfield d_statfs_f_flags 'struct statfs' f_flags sys/vfs.h
+checkfield d_tm_tm_zone 'struct tm' tm_zone time.h
+checkfield d_tm_tm_gmtoff 'struct tm' tm_gmtoff time.h
+checkfield d_pwquota 'struct passwd' pw_quota pwd.h
+checkfield d_pwage 'struct passwd' pw_age pwd.h
+checkfield d_pwchange 'struct passwd' pw_change pwd.h
+checkfield d_pwclass 'struct passwd' pw_class pwd.h
+checkfield d_pwexpire 'struct passwd' pw_expire pwd.h
+checkfield d_pwcomment 'struct passwd' pw_comment pwd.h
+checkfield d_pwgecos 'struct passwd' pw_gecos pwd.h
+checkfield d_pwpasswd 'struct passwd' pw_passwd pwd.h
+checkfield d_statblks 'struct stat' st_blocks 'sys/types.h sys/stat.h'
+checkfield d_dirnamlen 'struct dirent' d_namelen 'sys/types.h'
+checkfield d_grpasswd 'struct group' gr_passwd grp.h
+checkfield d_sockaddr_sa_len 'struct sockaddr' sa_len 'sys/types.h sys/socket.h'
+checkfield d_sin6_scope_id 'struct sockaddr_in6' sin6_scope_id 'sys/types.h sys/socket.h netinet/in.h'
+checkfield d_fds_bits 'fd_set' fds_bits 'sys/time.h sys/types.h unistd.h'
+
+checkfield d_siginfo_si_errno 'siginfo_t' si_errno 'signal.h'
+checkfield d_siginfo_si_pid 'siginfo_t' si_pid 'signal.h'
+checkfield d_siginfo_si_uid 'siginfo_t' si_uid 'signal.h'
+checkfield d_siginfo_si_addr 'siginfo_t' si_addr 'signal.h'
+checkfield d_siginfo_si_band 'siginfo_t' si_band 'signal.h'
+checkfield d_siginfo_si_value 'siginfo_t' si_value 'signal.h'
+checkfield d_siginfo_si_fd 'siginfo_t' si_fd 'signal.h'
+checkfield d_siginfo_si_status 'siginfo_t' si_status 'signal.h'
diff -uNr perl-5.26.1.orig/cnf/configure_type_sel.sh perl-5.26.1/cnf/configure_type_sel.sh
--- perl-5.26.1.orig/cnf/configure_type_sel.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_type_sel.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,152 @@
+# After we know what types we have, we've got to chose which
+# of them to use.
+
+msg "Choosing C types to be used for perl internal types"
+case "$use64bitint:$d_quad:$quadtype" in
+	define:define:?*)
+		define ivtype "$quadtype"
+		define uvtype "$uquadtype"
+		define ivsize '8'
+		define uvsize '8'
+		;;
+	*)	define ivtype "long"
+		define uvtype "unsigned long"
+		define ivsize $longsize
+		define uvsize $longsize
+		;;
+esac
+
+case "$uselongdouble:$d_longdbl" in
+	define:define)
+		define nvtype 'long double'
+		define nvsize $longdblsize
+		;;
+	*)	define nvtype 'double'
+		define nvsize $doublesize
+		;;
+esac
+msg "	IV will be "$ivtype", $ivsize bytes"
+msg "	UV will be "$uvtype", $uvsize bytes"
+msg "	NV will be "$nvtype", $nvsize bytes"
+
+# The following code may be wrong, but there is no way to tell that
+# for sure without running on-target tests.
+# Using "undef" as a safe default fails op/range.t on some targets.
+#
+# Note that there's really not that much choice here, since nvtype
+# is almost invariably IEEE 754 double (8 bytes) or long double
+# (10 bytes), while uvtype is either 4-byte of 8-byte unsigned integer.
+#
+# Quite surprisingly, perl seems to be content with nv_preserves_uv_bits=0
+# in all cases. However, given the floating-point type selection above,
+# it seems safe to assume preserved bits match IEEE 754 definitions.
+#
+# Signedness of uvtype does not generally matter, except when it's long double
+# vs 64bit int. However, uvtype should always be unsigned, and the code above
+# makes sure it is.
+mstart "Guessing nv_preserves_uv_bits value"
+if not hinted "nv_preserves_uv_bits"; then
+	case "$nvsize:$uvsize" in
+		4:*)
+			define nv_preserves_uv_bits 16
+			result "$nv_preserves_uv_bits"
+			;;
+		*:4)
+			define nv_preserves_uv_bits 32
+			result "$nv_preserves_uv_bits"
+			;;
+		8:8)
+			define nv_preserves_uv_bits 53
+			result "$nv_preserves_uv_bits"
+			;;
+		10:8)
+			define nv_preserves_uv_bits 64
+			result "$nv_preserves_uv_bits"
+			;;
+		*)
+			define nv_preserves_uv_bits 0
+			result "no idea"
+			;;
+	esac
+fi
+
+mstart "Deciding whether nv preserves full uv"
+if not hinted "d_nv_preserves_uv"; then
+	test $((8*uvsize)) = $nv_preserves_uv_bits
+	resdef d_nv_preserves_uv "yes" "no"
+fi
+
+# nv_overflows_integers_at is a property of nvtype alone, it does
+# not depend on uvtype at all. Assuming IEEE 754 floats here once again.
+mstart "Checking integer capacity of nv"
+if not hinted "nv_overflows_integers_at"; then
+	case "$nvsize" in
+		10)	define nv_overflows_integers_at '256.0*256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0'
+			result "long double"
+			;;
+		8)	define nv_overflows_integers_at '256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'
+			result "double"
+			;;
+		4)	define nv_overflows_integers_at '256.0*256.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0'
+			result "float"
+			;;
+		*)	define nv_overflows_integers_at '0.0'
+			result "unknown"
+			;;
+	esac
+fi
+
+# Target byte order check. Must be done after choosing $uvtype.
+mstart "Guessing byte order"
+if not hinted 'byteorder'; then
+	try_start
+	try_includes "stdint.h" "sys/types.h"
+	if [ "$uvsize" = 8 ]; then
+		try_add "$uvtype foo = 0x8877665544332211;"
+	elif [ "$uvsize" = 4 ]; then
+		try_add "$uvtype foo = 0x44332211;"
+	elif [ -n "$uvsize" ]; then
+		result "unknown"
+		die "Cannot check byte order with uvsize=$uvsize"
+	else
+		result "unknown"
+		die "Cannot check byte order without known uvsize"
+	fi
+
+	# Most targets use .data but PowerPC has .sdata instead
+	if try_compile && try_objdump -j .data -j .sdata -s; then
+		bo=`grep '11' try.out | grep '44' | sed -e 's/  .*//' -e 's/[^1-8]//g' -e 's/\([1-8]\)\1/\1/g'`
+	else
+		bo=''
+	fi
+
+	if [ -n "$bo" ]; then
+		define byteorder "$bo"
+		result "$bo"
+	else
+		result "unknown"
+		msg "Cannot determine byteorder for this target,"
+		msg "please supply -Dbyteorder= in the command line."
+		msg "Common values: 1234 for 32bit little-endian, 4321 for 32bit big-endian."
+		exit 255
+	fi
+fi
+
+# Mantissa bits, not counting the implicit bit.
+setmantbits() {
+	mstart "Checking mantissa bits in $3"
+	case "$2" in
+		4) define $1 '23' ;;
+		8) define $1 '52' ;;
+		10) define $1 '64' ;;
+		16) define $1 '112' ;;
+		*) define $1 '0' ;;
+	esac
+	getenv v $1
+	result "$v"
+	unset v
+}
+
+setmantbits nvmantbits "$nvsize" "$nvtype"
+setmantbits doublemantbits "$doublesize" 'double'
+setmantbits longdblmantbits "$longdblsize" 'long double'
diff -uNr perl-5.26.1.orig/cnf/configure_version.sh perl-5.26.1/cnf/configure_version.sh
--- perl-5.26.1.orig/cnf/configure_version.sh	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/configure_version.sh	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,77 @@
+# Perl version has to be extracted from patchlevel.h
+
+# setverpart name NAME
+verpart() {
+	q=`grep '#define' patchlevel.h | grep "$2" | head -1 | sed -r -e "s/#define $2\s+//" -e "s/\s.*//"`
+	define $1 "$q"
+}
+
+mstart "Checking perl version"
+if [ -r patchlevel.h ]; then
+	verpart revision PERL_REVISION
+	verpart patchlevel PERL_VERSION
+	verpart subversion PERL_SUBVERSION
+	verpart api_revision PERL_API_REVISION
+	verpart api_version PERL_API_VERSION
+	verpart api_subversion PERL_API_SUBVERSION
+
+	q=`egrep ',"(MAINT|SMOKE)[0-9][0-9]*"' patchlevel.h|tail -1|sed 's/[^0-9]//g'`
+	define perl_patchlevel "$q"
+else
+	result "unknown"
+	die "No patchlevel.h found, aborting"
+fi
+
+predef version_patchlevel_string "version $patchlevel subversion $subversion"
+if [ "$perl_patchlevel" != '' -a "$perl_patchlevel" != '0' ]; then
+	perl_patchlevel=`echo $perl_patchlevel | sed 's/.* //'`
+	append version_patchlevel_string "patch $perl_patchlevel"
+fi
+enddef version_patchlevel_string
+
+define PERL_CONFIG_SH 'true'
+define PERL_REVISION "$revision"
+define PERL_VERSION "$patchlevel"
+define PERL_SUBVERSION "$subversion"
+define PERL_PATCHLEVEL "$perl_patchlevel"
+define PERL_API_REVISION "$api_revision"
+define PERL_API_VERSION "$api_version"
+define PERL_API_SUBVERSION "$api_subversion"
+define api_versionstring "$api_revision.$api_version.$api_subversion"
+
+# Detect cperl to apply cperl-specific settings, here and in other files as well
+# Note $base points to cnf/ not the top-level source dir.
+
+if [ -f $base/../pod/perlcperl.pod ]; then
+	define usecperl 'define'
+	define package 'cperl'
+	define perlname 'cperl'
+	define spackage 'cPerl'
+else
+	define package 'perl5'
+	define perlname 'perl'
+	define spackage 'Perl5'
+fi
+
+define version "$PERL_REVISION.$PERL_VERSION.$PERL_SUBVERSION"
+packver="$package-$version"
+result "$packver"
+
+# These should have been in _misc but the setting differ between
+# mainline perl and cperl.
+
+if [ "$package" = "cperl" ]; then
+	define fake_signatures 'define'
+	define default_inc_excludes_dot 'define'
+else
+	define default_inc_excludes_dot 'undef'
+fi
+
+# Check for patches. Missing patchset indicates unsupported version,
+# and almost certain build failure.
+
+if [ ! -d "$base/diffs/$packver" ]; then
+	msg "No patchset found for $packver in $base/diffs"
+	msg "This perl version is probably not supported by perl-cross"
+	exit 255
+fi
diff -uNr perl-5.26.1.orig/cnf/cpan/Digest/MD5.pm perl-5.26.1/cnf/cpan/Digest/MD5.pm
--- perl-5.26.1.orig/cnf/cpan/Digest/MD5.pm	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/cpan/Digest/MD5.pm	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,176 @@
+package Digest::MD5;
+
+# This is Digest::Perl::MD5 module by Christian Lackas,
+# with docs, OOP and some other unnecessary things removed.
+# See http://search.cpan.org/dist/Digest-Perl-MD5/
+
+# Some of the install scripts depend on Digest::MD5,
+# but regular Digest::MD5 is an XS module and cannot
+# be used with miniperl, so this code is used instead.
+
+use strict;
+use integer;
+use Exporter;
+use vars qw($VERSION @ISA @EXPORTER @EXPORT_OK);
+
+@EXPORT_OK = qw(md5 md5_hex md5_base64);
+
+@ISA = 'Exporter';
+$VERSION = '1.6';
+
+sub A() { 0x67_45_23_01 }
+sub B() { 0xef_cd_ab_89 }
+sub C() { 0x98_ba_dc_fe }
+sub D() { 0x10_32_54_76 }
+sub MAX() { 0xFFFFFFFF }
+
+sub padding {
+    my $l = length (my $msg = shift() . chr(128));
+    $msg .= "\0" x (($l%64<=56?56:120)-$l%64);
+    $l = ($l-1)*8;
+    $msg .= pack 'VV', $l & MAX , ($l >> 16 >> 16);
+}
+
+
+sub rotate_left($$) {
+    ($_[0] << $_[1]) | (( $_[0] >> (32 - $_[1])  )  & ((1 << $_[1]) - 1));
+}
+
+sub gen_code {
+  my $MSK = ((1 << 16) << 16) ? ' & ' . MAX : '';
+  my %f = (
+        FF => "X0=rotate_left((X3^(X1&(X2^X3)))+X0+X4+X6$MSK,X5)+X1$MSK;",
+        GG => "X0=rotate_left((X2^(X3&(X1^X2)))+X0+X4+X6$MSK,X5)+X1$MSK;",
+        HH => "X0=rotate_left((X1^X2^X3)+X0+X4+X6$MSK,X5)+X1$MSK;",
+        II => "X0=rotate_left((X2^(X1|(~X3)))+X0+X4+X6$MSK,X5)+X1$MSK;",
+  );
+
+  my %s = (
+        S11 => 7, S12 => 12, S13 => 17, S14 => 22, S21 => 5, S22 => 9, S23 => 14,
+        S24 => 20, S31 => 4, S32 => 11, S33 => 16, S34 => 23, S41 => 6, S42 => 10,
+        S43 => 15, S44 => 21
+  );
+
+  my $insert = "";
+  while(<DATA>) {
+        chomp;
+        next unless /^[FGHI]/;
+        my ($func,@x) = split /,/;
+        my $c = $f{$func};
+        $c =~ s/X(\d)/$x[$1]/g;
+        $c =~ s/(S\d{2})/$s{$1}/;
+        $c =~ s/^(.*)=rotate_left\((.*),(.*)\)\+(.*)$//;
+
+        $c = "\$r = $2;
+        $1 = ((\$r << $3) | ((\$r >> (32 - $3))  & ((1 << $3) - 1))) + $4";
+        $insert .= "\t$c\n";
+  }
+  close DATA;
+
+  my $dump = '
+  sub round {
+        my ($a,$b,$c,$d) = @_[0 .. 3];
+        my $r;
+
+        ' . $insert . '
+        $_[0]+$a' . $MSK . ', $_[1]+$b ' . $MSK .
+        ', $_[2]+$c' . $MSK . ', $_[3]+$d' . $MSK . ';
+  }';
+  eval $dump;
+}
+
+gen_code();
+
+sub _encode_hex { unpack 'H*', $_[0] }
+sub _encode_base64 {
+        my $res;
+        while ($_[0] =~ /(.{1,45})/gs) {
+                $res .= substr pack('u', $1), 1;
+                chop $res;
+        }
+        $res =~ tr|` -_|AA-Za-z0-9+/|;#`
+        chop $res; chop $res;
+        $res
+}
+
+sub md5 {
+        my $message = padding(join'',@_);
+        my ($a,$b,$c,$d) = (A,B,C,D);
+        my $i;
+        for $i (0 .. (length $message)/64-1) {
+                my @X = unpack 'V16', substr $message,$i*64,64;
+                ($a,$b,$c,$d) = round($a,$b,$c,$d,@X);
+        }
+        pack 'V4',$a,$b,$c,$d;
+}
+sub md5_hex { _encode_hex &md5 }
+sub md5_base64 { _encode_base64 &md5 }
+
+
+1;
+
+__DATA__
+FF,$a,$b,$c,$d,$_[4],7,0xd76aa478,/* 1 */
+FF,$d,$a,$b,$c,$_[5],12,0xe8c7b756,/* 2 */
+FF,$c,$d,$a,$b,$_[6],17,0x242070db,/* 3 */
+FF,$b,$c,$d,$a,$_[7],22,0xc1bdceee,/* 4 */
+FF,$a,$b,$c,$d,$_[8],7,0xf57c0faf,/* 5 */
+FF,$d,$a,$b,$c,$_[9],12,0x4787c62a,/* 6 */
+FF,$c,$d,$a,$b,$_[10],17,0xa8304613,/* 7 */
+FF,$b,$c,$d,$a,$_[11],22,0xfd469501,/* 8 */
+FF,$a,$b,$c,$d,$_[12],7,0x698098d8,/* 9 */
+FF,$d,$a,$b,$c,$_[13],12,0x8b44f7af,/* 10 */
+FF,$c,$d,$a,$b,$_[14],17,0xffff5bb1,/* 11 */
+FF,$b,$c,$d,$a,$_[15],22,0x895cd7be,/* 12 */
+FF,$a,$b,$c,$d,$_[16],7,0x6b901122,/* 13 */
+FF,$d,$a,$b,$c,$_[17],12,0xfd987193,/* 14 */
+FF,$c,$d,$a,$b,$_[18],17,0xa679438e,/* 15 */
+FF,$b,$c,$d,$a,$_[19],22,0x49b40821,/* 16 */
+GG,$a,$b,$c,$d,$_[5],5,0xf61e2562,/* 17 */
+GG,$d,$a,$b,$c,$_[10],9,0xc040b340,/* 18 */
+GG,$c,$d,$a,$b,$_[15],14,0x265e5a51,/* 19 */
+GG,$b,$c,$d,$a,$_[4],20,0xe9b6c7aa,/* 20 */
+GG,$a,$b,$c,$d,$_[9],5,0xd62f105d,/* 21 */
+GG,$d,$a,$b,$c,$_[14],9,0x2441453,/* 22 */
+GG,$c,$d,$a,$b,$_[19],14,0xd8a1e681,/* 23 */
+GG,$b,$c,$d,$a,$_[8],20,0xe7d3fbc8,/* 24 */
+GG,$a,$b,$c,$d,$_[13],5,0x21e1cde6,/* 25 */
+GG,$d,$a,$b,$c,$_[18],9,0xc33707d6,/* 26 */
+GG,$c,$d,$a,$b,$_[7],14,0xf4d50d87,/* 27 */
+GG,$b,$c,$d,$a,$_[12],20,0x455a14ed,/* 28 */
+GG,$a,$b,$c,$d,$_[17],5,0xa9e3e905,/* 29 */
+GG,$d,$a,$b,$c,$_[6],9,0xfcefa3f8,/* 30 */
+GG,$c,$d,$a,$b,$_[11],14,0x676f02d9,/* 31 */
+GG,$b,$c,$d,$a,$_[16],20,0x8d2a4c8a,/* 32 */
+HH,$a,$b,$c,$d,$_[9],4,0xfffa3942,/* 33 */
+HH,$d,$a,$b,$c,$_[12],11,0x8771f681,/* 34 */
+HH,$c,$d,$a,$b,$_[15],16,0x6d9d6122,/* 35 */
+HH,$b,$c,$d,$a,$_[18],23,0xfde5380c,/* 36 */
+HH,$a,$b,$c,$d,$_[5],4,0xa4beea44,/* 37 */
+HH,$d,$a,$b,$c,$_[8],11,0x4bdecfa9,/* 38 */
+HH,$c,$d,$a,$b,$_[11],16,0xf6bb4b60,/* 39 */
+HH,$b,$c,$d,$a,$_[14],23,0xbebfbc70,/* 40 */
+HH,$a,$b,$c,$d,$_[17],4,0x289b7ec6,/* 41 */
+HH,$d,$a,$b,$c,$_[4],11,0xeaa127fa,/* 42 */
+HH,$c,$d,$a,$b,$_[7],16,0xd4ef3085,/* 43 */
+HH,$b,$c,$d,$a,$_[10],23,0x4881d05,/* 44 */
+HH,$a,$b,$c,$d,$_[13],4,0xd9d4d039,/* 45 */
+HH,$d,$a,$b,$c,$_[16],11,0xe6db99e5,/* 46 */
+HH,$c,$d,$a,$b,$_[19],16,0x1fa27cf8,/* 47 */
+HH,$b,$c,$d,$a,$_[6],23,0xc4ac5665,/* 48 */
+II,$a,$b,$c,$d,$_[4],6,0xf4292244,/* 49 */
+II,$d,$a,$b,$c,$_[11],10,0x432aff97,/* 50 */
+II,$c,$d,$a,$b,$_[18],15,0xab9423a7,/* 51 */
+II,$b,$c,$d,$a,$_[9],21,0xfc93a039,/* 52 */
+II,$a,$b,$c,$d,$_[16],6,0x655b59c3,/* 53 */
+II,$d,$a,$b,$c,$_[7],10,0x8f0ccc92,/* 54 */
+II,$c,$d,$a,$b,$_[14],15,0xffeff47d,/* 55 */
+II,$b,$c,$d,$a,$_[5],21,0x85845dd1,/* 56 */
+II,$a,$b,$c,$d,$_[12],6,0x6fa87e4f,/* 57 */
+II,$d,$a,$b,$c,$_[19],10,0xfe2ce6e0,/* 58 */
+II,$c,$d,$a,$b,$_[10],15,0xa3014314,/* 59 */
+II,$b,$c,$d,$a,$_[17],21,0x4e0811a1,/* 60 */
+II,$a,$b,$c,$d,$_[8],6,0xf7537e82,/* 61 */
+II,$d,$a,$b,$c,$_[15],10,0xbd3af235,/* 62 */
+II,$c,$d,$a,$b,$_[6],15,0x2ad7d2bb,/* 63 */
+II,$b,$c,$d,$a,$_[13],21,0xeb86d391,/* 64 */
diff -uNr perl-5.26.1.orig/cnf/diffs/README perl-5.26.1/cnf/diffs/README
--- perl-5.26.1.orig/cnf/diffs/README	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/README	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,7 @@
+Patchsets here are tagged with exact upstream version, but that's mostly
+to catch misapplications early, and to ensure the patches themselves remain
+readable. In most case a new version only needs minor offset tweaks.
+
+Copy the closest available version and update the patches if necessary.
+
+Note cperl comes with liblist.patch already integrated.
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/configpm.patch perl-5.26.1/cnf/diffs/cperl-5.24.0/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.0/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -56,9 +56,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -250,7 +253,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/customized.patch perl-5.26.1/cnf/diffs/cperl-5.24.0/customized.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/customized.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.0/customized.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,17 @@
+Not really necessary to build perl, but porting/customized.t will check
+the sums. Doing this defeats the purpose of customized.dat, but it's not
+like there's much choice.
+
+Separated from other patches to avoid dependence on patch ordering.
+
+--- a/t/porting/customized.dat
++++ b/t/porting/customized.dat
+@@ -34,7 +34,7 @@
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker.pm d88649ead5abb549df286334a035af924cc2befa
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Mkbootstrap.pm d79b98465a632dc3bde76a0210d01014d2257dc6
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Any.pm 62b0abc38e8c8734fade49c5e63477fe9fc0ea05
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 9b0e03ff7966e8dfc3daeaf67e7b83c427ab1ba9
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 47208f01aced7f872ce0f027850d49c87d568cde
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/basic.t 6cdc7701b50e586bc9c4cfb1616de8eb0b1baf34
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/lib/MakeMaker/Test/NoXS.pm 371cdff1b2375017907cfbc9c8f4a31f5ad10582
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/Liblist.t 9a3baf8a2c2281037f803b909d26e77a1bb099af
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/dynaloader.patch perl-5.26.1/cnf/diffs/cperl-5.24.0/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.0/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ # Some silly modules like mod_perl use DynaLoader.a in a shared
+ # module, so add cccdlflags if we're going for a shared libperl
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/extconfigxs.patch perl-5.26.1/cnf/diffs/cperl-5.24.0/extconfigxs.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/extconfigxs.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.0/extconfigxs.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,41 @@
+XS Config uses pack to check ptrsize and ivsize, which yields host values
+when running under miniperl.
+
+--- a/ext/Config/Config_xs.PL
++++ b/ext/Config/Config_xs.PL
+@@ -30,16 +30,6 @@
+         unshift @INC, '../../lib', '../../lib/auto';
+         $in_core = 1;
+     }
+-    my $ptrsize = length(pack('P',""));
+-    my $ivsize =  length(pack('j',0));
+-    die "unknown pointer size" if $ptrsize != 4 && $ptrsize != 8; #POSIX.pm not available
+-    eval 'sub SPTR_MIN () { '.($ptrsize == 8 ? '-9223372036854775808' : '-2147483648').' } '.
+-    'sub SPTR_MAX () { '.($ptrsize == 8 ? '0x7FFFFFFFFFFFFFFF' : '0x7FFFFFFF').' } '.
+-    'sub IV_MIN () { '.($ivsize == 8 ? '-9223372036854775808' : '-2147483648').' } '.
+-    'sub IV_MAX () { '.($ivsize == 8 ? '0x7FFFFFFFFFFFFFFF' : '0x7FFFFFFF').' } '.
+-    'sub PTRSIZE () { '.$ptrsize.' } '.
+-    'sub INLSIZE () { '.($ptrsize == 8 ? 13 : 5).' } '.
+-    'sub BE () { '.((pack('N', 1) eq pack('L', 1))+0).'}';
+ }
+ use strict ;
+ use Config ;
+@@ -49,6 +39,18 @@
+     require 'regen/regen_lib.pl';
+ }
+ 
++my $ivsize = $Config{'ivsize'};
++my $ptrsize = $Config{'ptrsize'};
++my $byteorder = $Config{'byteorder'};
++die "unknown pointer size" if $ptrsize != 4 && $ptrsize != 8; #POSIX.pm not available
++sub SPTR_MIN () { ($ptrsize == 8 ? -9223372036854775808 : -2147483648) };
++sub SPTR_MAX () { ($ptrsize == 8 ? 0x7FFFFFFFFFFFFFFF : 0x7FFFFFFF) };
++sub IV_MIN () { ($ivsize == 8 ? -9223372036854775808 : -2147483648) };
++sub IV_MAX () { ($ivsize == 8 ? 0x7FFFFFFFFFFFFFFF : 0x7FFFFFFF) };
++sub PTRSIZE () { $ptrsize };
++sub INLSIZE () { ($ptrsize == 8 ? 13 : 5) };
++sub BE () { ($byteorder == 0x4321 or $byteorder == 0x87654321) };
++
+ ###########################################################################
+ 
+ my $force = @ARGV ? $ARGV[0] eq '--force' : 0;
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/findext.patch perl-5.26.1/cnf/diffs/cperl-5.24.0/findext.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.0/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -120,10 +120,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/installscripts.patch perl-5.26.1/cnf/diffs/cperl-5.24.0/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.0/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -217,6 +215,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -405,7 +404,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -431,6 +431,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/makemaker.patch perl-5.26.1/cnf/diffs/cperl-5.24.0/makemaker.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/makemaker.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.0/makemaker.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -37,7 +37,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+     $Is{Darwin}  = $^O eq 'darwin';
+ }
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/posix-makefile.patch perl-5.26.1/cnf/diffs/cperl-5.24.0/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.0/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/test-checkcase.patch perl-5.26.1/cnf/diffs/cperl-5.24.0/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.0/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/xconfig.patch perl-5.26.1/cnf/diffs/cperl-5.24.0/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.0/xconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
+-#   include "config.h"
++#   ifndef USE_CROSS_COMPILE
++#       include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* NOTE 1: that with gcc -std=c89 the __STDC_VERSION__ is *not* defined
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/xsconfig.patch perl-5.26.1/cnf/diffs/cperl-5.24.0/xsconfig.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.0/xsconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.0/xsconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,45 @@
+XSConfig.t checks for XS and non-XS Config.pm to match exactly.
+However, the script that makes the XS version (ext/Config/Config_xs.PL)
+is not meant to do exactly translation. It only writes keys expected
+for this particular perl version.
+
+Multi-version support in perl-cross does sometimes generate keys
+not meant for the perl version being compiled. This is probably
+harmless, and definitely much easier to support, so we relax the
+test to allow extra keys in non-XS module.
+
+XS module in never used at build time with perl-cross.
+
+--- a/ext/Config/t/XSConfig.t
++++ b/ext/Config/t/XSConfig.t
+@@ -50,7 +50,7 @@
+ Config->import();
+ require 'Config_heavy.pl';
+ require Test::More;
+-Test::More->import (tests => 4);
++Test::More->import (tests => 3);
+ 
+ ok(isXSUB($cv), 'XS Config:: is XS');
+ 
+@@ -146,12 +146,17 @@
+   for my $k (@cannedkeys) {
+     $Config_copy{$k} = '' unless exists $Config{$k};
+   }
+-  is (scalar keys %Config_copy, $klenXS, 'same adjusted key count');
+-} else {
+-  is (scalar(keys %Config), $klenXS, 'same key count');
+ }
+ 
+-is_deeply ($copy ? \%Config_copy : \%Config, \%XSConfig, "cmp PP to XS hashes");
++$Config = $copy ? \%Config_copy : \%Config;
++
++# Non-XS config *may* contain additional keys in perl-cross.
++# Remove them to avoid false positives with is_deeply.
++foreach(keys %$Config) {
++	delete $Config->{$_} unless exists $XSConfig{$_};
++}
++
++is_deeply ($Config, \%XSConfig, "cmp PP to XS hashes");
+ 
+ # old Test::Builders dont have is_passing
+ if ( Test::More->builder->can('is_passing')
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/configpm.patch perl-5.26.1/cnf/diffs/cperl-5.24.1/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.1/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -56,9 +56,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -254,7 +254,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/customized.patch perl-5.26.1/cnf/diffs/cperl-5.24.1/customized.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/customized.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.1/customized.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,17 @@
+Not really necessary to build perl, but porting/customized.t will check
+the sums. Doing this defeats the purpose of customized.dat, but it's not
+like there's much choice.
+
+Separated from other patches to avoid dependence on patch ordering.
+
+--- a/t/porting/customized.dat
++++ b/t/porting/customized.dat
+@@ -34,7 +34,7 @@
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker.pm d88649ead5abb549df286334a035af924cc2befa
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Mkbootstrap.pm d79b98465a632dc3bde76a0210d01014d2257dc6
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Any.pm 62b0abc38e8c8734fade49c5e63477fe9fc0ea05
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 9b0e03ff7966e8dfc3daeaf67e7b83c427ab1ba9
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 47208f01aced7f872ce0f027850d49c87d568cde
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/basic.t 6cdc7701b50e586bc9c4cfb1616de8eb0b1baf34
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/lib/MakeMaker/Test/NoXS.pm 371cdff1b2375017907cfbc9c8f4a31f5ad10582
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/Liblist.t 9a3baf8a2c2281037f803b909d26e77a1bb099af
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/dynaloader.patch perl-5.26.1/cnf/diffs/cperl-5.24.1/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.1/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ # Some silly modules like mod_perl use DynaLoader.a in a shared
+ # module, so add cccdlflags if we're going for a shared libperl
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/extconfigxs.patch perl-5.26.1/cnf/diffs/cperl-5.24.1/extconfigxs.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/extconfigxs.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.1/extconfigxs.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,41 @@
+XS Config uses pack to check ptrsize and ivsize, which yields host values
+when running under miniperl.
+
+--- a/ext/Config/Config_xs.PL
++++ b/ext/Config/Config_xs.PL
+@@ -30,16 +30,6 @@
+         unshift @INC, '../../lib', '../../lib/auto';
+         $in_core = 1;
+     }
+-    my $ptrsize = length(pack('P',""));
+-    my $ivsize =  length(pack('j',0));
+-    die "unknown pointer size" if $ptrsize != 4 && $ptrsize != 8; #POSIX.pm not available
+-    eval 'sub SPTR_MIN () { '.($ptrsize == 8 ? '-9223372036854775808' : '-2147483648').' } '.
+-    'sub SPTR_MAX () { '.($ptrsize == 8 ? '0x7FFFFFFFFFFFFFFF' : '0x7FFFFFFF').' } '.
+-    'sub IV_MIN () { '.($ivsize == 8 ? '-9223372036854775808' : '-2147483648').' } '.
+-    'sub IV_MAX () { '.($ivsize == 8 ? '0x7FFFFFFFFFFFFFFF' : '0x7FFFFFFF').' } '.
+-    'sub PTRSIZE () { '.$ptrsize.' } '.
+-    'sub INLSIZE () { '.($ptrsize == 8 ? 13 : 5).' } '.
+-    'sub BE () { '.((pack('N', 1) eq pack('L', 1))+0).'}';
+ }
+ use strict ;
+ use Config ;
+@@ -49,6 +39,18 @@
+     require './regen/regen_lib.pl';
+ }
+ 
++my $ivsize = $Config{'ivsize'};
++my $ptrsize = $Config{'ptrsize'};
++my $byteorder = $Config{'byteorder'};
++die "unknown pointer size" if $ptrsize != 4 && $ptrsize != 8; #POSIX.pm not available
++sub SPTR_MIN () { ($ptrsize == 8 ? -9223372036854775808 : -2147483648) };
++sub SPTR_MAX () { ($ptrsize == 8 ? 0x7FFFFFFFFFFFFFFF : 0x7FFFFFFF) };
++sub IV_MIN () { ($ivsize == 8 ? -9223372036854775808 : -2147483648) };
++sub IV_MAX () { ($ivsize == 8 ? 0x7FFFFFFFFFFFFFFF : 0x7FFFFFFF) };
++sub PTRSIZE () { $ptrsize };
++sub INLSIZE () { ($ptrsize == 8 ? 13 : 5) };
++sub BE () { ($byteorder == 0x4321 or $byteorder == 0x87654321) };
++
+ ###########################################################################
+ 
+ my $force = @ARGV ? $ARGV[0] eq '--force' : 0;
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/findext.patch perl-5.26.1/cnf/diffs/cperl-5.24.1/findext.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.1/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -120,10 +120,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/installscripts.patch perl-5.26.1/cnf/diffs/cperl-5.24.1/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.1/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -217,6 +215,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -405,7 +404,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -431,6 +431,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/makemaker.patch perl-5.26.1/cnf/diffs/cperl-5.24.1/makemaker.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/makemaker.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.1/makemaker.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -37,7 +37,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+     $Is{Darwin}  = $^O eq 'darwin';
+ }
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/posix-makefile.patch perl-5.26.1/cnf/diffs/cperl-5.24.1/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.1/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/term-readkey.patch perl-5.26.1/cnf/diffs/cperl-5.24.1/term-readkey.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/term-readkey.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.1/term-readkey.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,29 @@
+Term::ReadKey wants to load its XS part to check its blockoptions()
+value, which actually comes down to availability of poll() and select().
+
+--- a/cpan/Term-ReadKey/ReadKey_pm.PL
++++ b/cpan/Term-ReadKey/ReadKey_pm.PL
+@@ -495,14 +495,17 @@
+ !FIRSTPART
+ 
+ close OUT;
+-# preload the XS module needed for the blockoptions() expansions below
+-# does not work with miniperl
+-package Term::ReadKey;
+-require DynaLoader;
+-our @ISA = qw(DynaLoader);
++
++require Config;
++
++sub blockoptions {
++	my $ret = 1; # host has fcntl O_NDELAY
++	$ret |= 2 if $Config{'d_poll'} eq 'define';
++	$ret |= 4 if $Config{'d_select'} eq 'define';
++	return $ret;
++}
+ 
+ print "Bootstrapping the XS for blockoptions: ";
+-bootstrap Term::ReadKey or die;
+ print blockoptions()."\n";
+ 
+ open OUT, ">>", $file or die "Can't append to $file: $!";
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/test-checkcase.patch perl-5.26.1/cnf/diffs/cperl-5.24.1/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.1/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/xconfig.patch perl-5.26.1/cnf/diffs/cperl-5.24.1/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.1/xconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
+-#   include "config.h"
++#   ifndef USE_CROSS_COMPILE
++#       include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* NOTE 1: that with gcc -std=c89 the __STDC_VERSION__ is *not* defined
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/xsconfig.patch perl-5.26.1/cnf/diffs/cperl-5.24.1/xsconfig.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.1/xsconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.1/xsconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,45 @@
+XSConfig.t checks for XS and non-XS Config.pm to match exactly.
+However, the script that makes the XS version (ext/Config/Config_xs.PL)
+is not meant to do exactly translation. It only writes keys expected
+for this particular perl version.
+
+Multi-version support in perl-cross does sometimes generate keys
+not meant for the perl version being compiled. This is probably
+harmless, and definitely much easier to support, so we relax the
+test to allow extra keys in non-XS module.
+
+XS module in never used at build time with perl-cross.
+
+--- a/ext/Config/t/XSConfig.t
++++ b/ext/Config/t/XSConfig.t
+@@ -50,7 +50,7 @@
+ Config->import();
+ require 'Config_heavy.pl';
+ require Test::More;
+-Test::More->import (tests => 4);
++Test::More->import (tests => 3);
+ 
+ ok(isXSUB($cv), 'XS Config:: is XS');
+ 
+@@ -146,12 +146,17 @@
+   for my $k (@cannedkeys) {
+     $Config_copy{$k} = '' unless exists $Config{$k};
+   }
+-  is (scalar keys %Config_copy, $klenXS, 'same adjusted key count');
+-} else {
+-  is (scalar(keys %Config), $klenXS, 'same key count');
+ }
+ 
+-is_deeply ($copy ? \%Config_copy : \%Config, \%XSConfig, "cmp PP to XS hashes");
++$Config = $copy ? \%Config_copy : \%Config;
++
++# Non-XS config *may* contain additional keys in perl-cross.
++# Remove them to avoid false positives with is_deeply.
++foreach(keys %$Config) {
++	delete $Config->{$_} unless exists $XSConfig{$_};
++}
++
++is_deeply ($Config, \%XSConfig, "cmp PP to XS hashes");
+ 
+ # old Test::Builders dont have is_passing
+ if ( Test::More->builder->can('is_passing')
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/configpm.patch perl-5.26.1/cnf/diffs/cperl-5.24.2/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.2/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -56,9 +56,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -254,7 +257,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/customized.patch perl-5.26.1/cnf/diffs/cperl-5.24.2/customized.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/customized.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.2/customized.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,17 @@
+Not really necessary to build perl, but porting/customized.t will check
+the sums. Doing this defeats the purpose of customized.dat, but it's not
+like there's much choice.
+
+Separated from other patches to avoid dependence on patch ordering.
+
+--- a/t/porting/customized.dat
++++ b/t/porting/customized.dat
+@@ -51,7 +51,7 @@
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker.pm 69351c5e5418046f9800b0d78cf454f5c1931e2d
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Mkbootstrap.pm d79b98465a632dc3bde76a0210d01014d2257dc6
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Any.pm 561661b773f86428be2e87207e33d28eb6ad0547
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 01638a386424cafbed6a53b0c9b780c4d8637a92
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 329a8acefabf1d4e13b2794282aa930c5260a85e
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/basic.t 6cdc7701b50e586bc9c4cfb1616de8eb0b1baf34
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/lib/MakeMaker/Test/NoXS.pm 371cdff1b2375017907cfbc9c8f4a31f5ad10582
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/Liblist.t 9a3baf8a2c2281037f803b909d26e77a1bb099af
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/dynaloader.patch perl-5.26.1/cnf/diffs/cperl-5.24.2/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.2/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ # Some silly modules like mod_perl use DynaLoader.a in a shared
+ # module, so add cccdlflags if we're going for a shared libperl
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/extconfigxs.patch perl-5.26.1/cnf/diffs/cperl-5.24.2/extconfigxs.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/extconfigxs.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.2/extconfigxs.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,41 @@
+XS Config uses pack to check ptrsize and ivsize, which yields host values
+when running under miniperl.
+
+--- a/ext/Config/Config_xs.PL
++++ b/ext/Config/Config_xs.PL
+@@ -29,16 +29,6 @@
+         unshift @INC, '../../lib', '../../lib/auto';
+         $in_core = 1;
+     }
+-    my $ptrsize = length(pack('P',""));
+-    my $ivsize =  length(pack('j',0));
+-    die "unknown pointer size" if $ptrsize != 4 && $ptrsize != 8; #POSIX.pm not available
+-    eval 'sub SPTR_MIN () { '.($ptrsize == 8 ? '-9223372036854775808' : '-2147483648').' } '.
+-    'sub SPTR_MAX () { '.($ptrsize == 8 ? '0x7FFFFFFFFFFFFFFF' : '0x7FFFFFFF').' } '.
+-    'sub IV_MIN () { '.($ivsize == 8 ? '-9223372036854775808' : '-2147483648').' } '.
+-    'sub IV_MAX () { '.($ivsize == 8 ? '0x7FFFFFFFFFFFFFFF' : '0x7FFFFFFF').' } '.
+-    'sub PTRSIZE () { '.$ptrsize.' } '.
+-    'sub INLSIZE () { '.($ptrsize == 8 ? 13 : 5).' } '.
+-    'sub BE () { '.((pack('N', 1) eq pack('L', 1))+0).'}';
+ }
+ use strict ;
+ use Config ;
+@@ -48,6 +38,18 @@
+     require './regen/regen_lib.pl';
+ }
+ 
++my $ivsize = $Config{'ivsize'};
++my $ptrsize = $Config{'ptrsize'};
++my $byteorder = $Config{'byteorder'};
++die "unknown pointer size" if $ptrsize != 4 && $ptrsize != 8; #POSIX.pm not available
++sub SPTR_MIN () { ($ptrsize == 8 ? -9223372036854775808 : -2147483648) };
++sub SPTR_MAX () { ($ptrsize == 8 ? 0x7FFFFFFFFFFFFFFF : 0x7FFFFFFF) };
++sub IV_MIN () { ($ivsize == 8 ? -9223372036854775808 : -2147483648) };
++sub IV_MAX () { ($ivsize == 8 ? 0x7FFFFFFFFFFFFFFF : 0x7FFFFFFF) };
++sub PTRSIZE () { $ptrsize };
++sub INLSIZE () { ($ptrsize == 8 ? 13 : 5) };
++sub BE () { ($byteorder == 0x4321 or $byteorder == 0x87654321) };
++
+ ###########################################################################
+ 
+ my $force = @ARGV ? $ARGV[0] eq '--force' : 0;
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/findext.patch perl-5.26.1/cnf/diffs/cperl-5.24.2/findext.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.2/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -120,10 +120,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/installscripts.patch perl-5.26.1/cnf/diffs/cperl-5.24.2/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.2/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -216,6 +214,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -404,7 +403,8 @@
+ } elsif ($Is_W32) {
+     @corefiles = <*.h $perl*$Config{lib_ext}>;
+ } else {
+-    @corefiles = ($libperl, <*.h libc?perl*.* perl*$Config{lib_ext}>);
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -430,6 +430,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/makemaker.patch perl-5.26.1/cnf/diffs/cperl-5.24.2/makemaker.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/makemaker.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.2/makemaker.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -37,7 +37,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+     $Is{Darwin}  = $^O eq 'darwin';
+ }
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/posix-makefile.patch perl-5.26.1/cnf/diffs/cperl-5.24.2/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.2/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/term-readkey.patch perl-5.26.1/cnf/diffs/cperl-5.24.2/term-readkey.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/term-readkey.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.2/term-readkey.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,41 @@
+Term::ReadKey wants to load its XS part to check its blockoptions()
+value, which actually comes down to availability of poll() and select().
+
+--- a/cpan/Term-ReadKey/ReadKey_pm.PL
++++ b/cpan/Term-ReadKey/ReadKey_pm.PL
+@@ -503,25 +503,18 @@
+ !FIRSTPART
+ 
+ close OUT;
+-# preload the XS module needed for the blockoptions() expansions below
+-# does not work with miniperl
+-package Term::ReadKey;
+-require DynaLoader;
+-our @ISA = qw(DynaLoader);
+ 
+-print "Bootstrapping the XS for blockoptions: ";
+-my $blockoptions;
+-eval { bootstrap Term::ReadKey };
+-if (!$@) {
+-  $blockoptions = blockoptions();
+-} elsif ($^ eq 'MSWin32') {
+-  $blockoptions = 8;
+-} else {
+-  system "$Config{make} blockoptions";
+-  my $cmd = "./blockoptions" . $Config{exe_ext};
+-  # $cmd = "$Config{ldlibpthname}=../.. $cmd" if $Config{useshrplib} =~ /^(true|yes)$/;
+-  $blockoptions = `$cmd`;
++require Config;
++
++sub blockoptions {
++	my $ret = 1; # host has fcntl O_NDELAY
++	$ret |= 2 if $Config{'d_poll'} eq 'define';
++	$ret |= 4 if $Config{'d_select'} eq 'define';
++	return $ret;
+ }
++
++print "Bootstrapping the XS for blockoptions: ";
++my $blockoptions = blockoptions();
+ print $blockoptions,"\n";
+ 
+ open OUT, ">>", $file or die "Can't append to $file: $!";
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/test-checkcase.patch perl-5.26.1/cnf/diffs/cperl-5.24.2/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.2/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/xconfig.patch perl-5.26.1/cnf/diffs/cperl-5.24.2/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.2/xconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
+-#   include "config.h"
++#   ifndef USE_CROSS_COMPILE
++#       include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* NOTE 1: that with gcc -std=c89 the __STDC_VERSION__ is *not* defined
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/xsconfig.patch perl-5.26.1/cnf/diffs/cperl-5.24.2/xsconfig.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.24.2/xsconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.24.2/xsconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,45 @@
+XSConfig.t checks for XS and non-XS Config.pm to match exactly.
+However, the script that makes the XS version (ext/Config/Config_xs.PL)
+is not meant to do exactly translation. It only writes keys expected
+for this particular perl version.
+
+Multi-version support in perl-cross does sometimes generate keys
+not meant for the perl version being compiled. This is probably
+harmless, and definitely much easier to support, so we relax the
+test to allow extra keys in non-XS module.
+
+XS module in never used at build time with perl-cross.
+
+--- a/ext/Config/t/XSConfig.t
++++ b/ext/Config/t/XSConfig.t
+@@ -50,7 +50,7 @@
+ Config->import();
+ require 'Config_heavy.pl';
+ require Test::More;
+-Test::More->import (tests => 4);
++Test::More->import (tests => 3);
+ 
+ ok(isXSUB($cv), 'XS Config:: is XS');
+ 
+@@ -146,12 +146,17 @@
+   for my $k (@cannedkeys) {
+     $Config_copy{$k} = '' unless exists $Config{$k};
+   }
+-  is (scalar keys %Config_copy, $klenXS, 'same adjusted key count');
+-} else {
+-  is (scalar(keys %Config), $klenXS, 'same key count');
+ }
+ 
+-is_deeply ($copy ? \%Config_copy : \%Config, \%XSConfig, "cmp PP to XS hashes");
++$Config = $copy ? \%Config_copy : \%Config;
++
++# Non-XS config *may* contain additional keys in perl-cross.
++# Remove them to avoid false positives with is_deeply.
++foreach(keys %$Config) {
++	delete $Config->{$_} unless exists $XSConfig{$_};
++}
++
++is_deeply ($Config, \%XSConfig, "cmp PP to XS hashes");
+ 
+ # old Test::Builders dont have is_passing
+ if ( Test::More->builder->can('is_passing')
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/configpm.patch perl-5.26.1/cnf/diffs/cperl-5.26.0/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.0/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -56,9 +56,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -254,7 +257,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/customized.patch perl-5.26.1/cnf/diffs/cperl-5.26.0/customized.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/customized.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.0/customized.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,17 @@
+Not really necessary to build perl, but porting/customized.t will check
+the sums. Doing this defeats the purpose of customized.dat, but it's not
+like there's much choice.
+
+Separated from other patches to avoid dependence on patch ordering.
+
+--- a/t/porting/customized.dat
++++ b/t/porting/customized.dat
+@@ -52,7 +52,7 @@
+ ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker.pm 69351c5e5418046f9800b0d78cf454f5c1931e2d
+ ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/lib/ExtUtils/Mkbootstrap.pm d79b98465a632dc3bde76a0210d01014d2257dc6
+ ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/lib/ExtUtils/MM_Any.pm 3857ce6550b897d8bbc626e11b63c2266d624e07
+-ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 01638a386424cafbed6a53b0c9b780c4d8637a92
++ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 329a8acefabf1d4e13b2794282aa930c5260a85e
+ ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/t/basic.t 7d00e360e0e59099e5f9ff407f5f42f3f1816791
+ ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/t/lib/MakeMaker/Test/NoXS.pm 371cdff1b2375017907cfbc9c8f4a31f5ad10582
+ ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/t/Liblist.t 9a3baf8a2c2281037f803b909d26e77a1bb099af
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/dynaloader.patch perl-5.26.1/cnf/diffs/cperl-5.26.0/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.0/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ # Some silly modules like mod_perl use DynaLoader.a in a shared
+ # module, so add cccdlflags if we're going for a shared libperl
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/extconfigxs.patch perl-5.26.1/cnf/diffs/cperl-5.26.0/extconfigxs.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/extconfigxs.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.0/extconfigxs.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,41 @@
+XS Config uses pack to check ptrsize and ivsize, which yields host values
+when running under miniperl.
+
+--- a/ext/Config/Config_xs.PL
++++ b/ext/Config/Config_xs.PL
+@@ -30,16 +30,6 @@
+         unshift @INC, '../../lib', '../../lib/auto';
+         $in_core = 1;
+     }
+-    my $ptrsize = length(pack('P',""));
+-    my $ivsize =  length(pack('j',0));
+-    die "unknown pointer size" if $ptrsize != 4 && $ptrsize != 8; #POSIX.pm not available
+-    eval 'sub SPTR_MIN () { '.($ptrsize == 8 ? '-9223372036854775808' : '-2147483648').' } '.
+-    'sub SPTR_MAX () { '.($ptrsize == 8 ? '0x7FFFFFFFFFFFFFFF' : '0x7FFFFFFF').' } '.
+-    'sub IV_MIN () { '.($ivsize == 8 ? '-9223372036854775808' : '-2147483648').' } '.
+-    'sub IV_MAX () { '.($ivsize == 8 ? '0x7FFFFFFFFFFFFFFF' : '0x7FFFFFFF').' } '.
+-    'sub PTRSIZE () { '.$ptrsize.' } '.
+-    'sub INLSIZE () { '.($ptrsize == 8 ? 13 : 5).' } '.
+-    'sub BE () { '.((pack('N', 1) eq pack('L', 1))+0).'}';
+ }
+ use strict ;
+ use Config ;
+@@ -49,6 +39,18 @@
+     require './regen/regen_lib.pl';
+ }
+ 
++my $ivsize = $Config{'ivsize'};
++my $ptrsize = $Config{'ptrsize'};
++my $byteorder = $Config{'byteorder'};
++die "unknown pointer size" if $ptrsize != 4 && $ptrsize != 8; #POSIX.pm not available
++sub SPTR_MIN () { ($ptrsize == 8 ? -9223372036854775808 : -2147483648) };
++sub SPTR_MAX () { ($ptrsize == 8 ? 0x7FFFFFFFFFFFFFFF : 0x7FFFFFFF) };
++sub IV_MIN () { ($ivsize == 8 ? -9223372036854775808 : -2147483648) };
++sub IV_MAX () { ($ivsize == 8 ? 0x7FFFFFFFFFFFFFFF : 0x7FFFFFFF) };
++sub PTRSIZE () { $ptrsize };
++sub INLSIZE () { ($ptrsize == 8 ? 13 : 5) };
++sub BE () { ($byteorder == 0x4321 or $byteorder == 0x87654321) };
++
+ ###########################################################################
+ 
+ my $force = @ARGV ? $ARGV[0] eq '--force' : 0;
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/findext.patch perl-5.26.1/cnf/diffs/cperl-5.26.0/findext.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.0/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -120,10 +120,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/makemaker-test.patch perl-5.26.1/cnf/diffs/cperl-5.26.0/makemaker-test.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/makemaker-test.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.0/makemaker-test.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,149 @@
+See https://github.com/perl11/cperl/pull/278
+and https://github.com/perl11/cperl/pull/287
+
+diff --git a/dist/ExtUtils-MakeMaker/t/INSTALL_BASE.t b/dist/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+index fc31611..2f44b7a 100644
+--- a/dist/ExtUtils-MakeMaker/t/INSTALL_BASE.t
++++ b/dist/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+@@ -15,12 +15,13 @@ $CLEANUP &&= 1; # so always 1 or numerically 0
+ 
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+-use Test::More;
+ use Config;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+-    : (tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP));
++    : ();
++plan tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP);
+ 
+ my $Is_VMS = $^O eq 'VMS';
+ 
+diff --git a/dist/ExtUtils-MakeMaker/t/PL_FILES.t b/dist/ExtUtils-MakeMaker/t/PL_FILES.t
+index f96186f..e6bc0cf 100644
+--- a/dist/ExtUtils-MakeMaker/t/PL_FILES.t
++++ b/dist/ExtUtils-MakeMaker/t/PL_FILES.t
+@@ -11,9 +11,9 @@ use File::Temp qw[tempdir];
+ use MakeMaker::Test::Setup::PL_FILES;
+ use MakeMaker::Test::Utils;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 9);
+ 
+diff --git a/dist/ExtUtils-MakeMaker/t/basic.t b/dist/ExtUtils-MakeMaker/t/basic.t
+index b06a1f1..112fedb 100644
+--- a/dist/ExtUtils-MakeMaker/t/basic.t
++++ b/dist/ExtUtils-MakeMaker/t/basic.t
+@@ -20,9 +20,9 @@ use utf8;
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 171);
+ use File::Find;
+diff --git a/dist/ExtUtils-MakeMaker/t/min_perl_version.t b/dist/ExtUtils-MakeMaker/t/min_perl_version.t
+index c5d78d6..2ef118d 100644
+--- a/dist/ExtUtils-MakeMaker/t/min_perl_version.t
++++ b/dist/ExtUtils-MakeMaker/t/min_perl_version.t
+@@ -13,9 +13,9 @@ use TieOut;
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::MPV;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 36);
+ use File::Path;
+diff --git a/dist/ExtUtils-MakeMaker/t/pm_to_blib.t b/dist/ExtUtils-MakeMaker/t/pm_to_blib.t
+index 07c2f74..a9194f7 100644
+--- a/dist/ExtUtils-MakeMaker/t/pm_to_blib.t
++++ b/dist/ExtUtils-MakeMaker/t/pm_to_blib.t
+@@ -12,9 +12,9 @@ use ExtUtils::MakeMaker;
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : 'no_plan';
+ 
+diff --git a/dist/ExtUtils-MakeMaker/t/recurs.t b/dist/ExtUtils-MakeMaker/t/recurs.t
+index 6f1c093..d3c4d4a 100644
+--- a/dist/ExtUtils-MakeMaker/t/recurs.t
++++ b/dist/ExtUtils-MakeMaker/t/recurs.t
+@@ -14,9 +14,9 @@ use File::Temp qw[tempdir];
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::Recurs;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 26);
+ 
+diff --git a/dist/ExtUtils-MakeMaker/t/several_authors.t b/dist/ExtUtils-MakeMaker/t/several_authors.t
+index 4753541..f7534ff 100644
+--- a/dist/ExtUtils-MakeMaker/t/several_authors.t
++++ b/dist/ExtUtils-MakeMaker/t/several_authors.t
+@@ -13,9 +13,9 @@ use TieOut;
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::SAS;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 20);
+ use File::Path;
+diff --git a/dist/ExtUtils-MakeMaker/t/unicode.t b/dist/ExtUtils-MakeMaker/t/unicode.t
+index 2bb56aa..8087c2a 100644
+--- a/dist/ExtUtils-MakeMaker/t/unicode.t
++++ b/dist/ExtUtils-MakeMaker/t/unicode.t
+@@ -6,16 +6,19 @@ BEGIN {
+ chdir 't';
+ 
+ use strict;
++use ExtUtils::MM;
++use MakeMaker::Test::Setup::Unicode;
++use MakeMaker::Test::Utils qw(makefile_name make make_run run);
+ use Test::More;
+ use Config;
+ BEGIN {
+   plan skip_all => 'Need perlio and perl 5.8+.'
+     if $] < 5.008 or !$Config{useperlio};
++  plan skip_all => 'cross-compiling and make not available'
++    if !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'};
++
+   plan tests => 9;
+ }
+-use ExtUtils::MM;
+-use MakeMaker::Test::Setup::Unicode;
+-use MakeMaker::Test::Utils qw(makefile_name make_run run);
+ use TieOut;
+ 
+ my $MM = bless { DIR => ['.'] }, 'MM';
+-- 
+
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/makemaker.patch perl-5.26.1/cnf/diffs/cperl-5.26.0/makemaker.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/makemaker.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.0/makemaker.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/dist/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/dist/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -37,7 +37,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+     $Is{Darwin}  = $^O eq 'darwin';
+ }
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/posix-makefile.patch perl-5.26.1/cnf/diffs/cperl-5.26.0/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.0/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/term-readkey.patch perl-5.26.1/cnf/diffs/cperl-5.26.0/term-readkey.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/term-readkey.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.0/term-readkey.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+Term::ReadKey wants to load its XS part to check its blockoptions()
+value, which actually comes down to availability of poll() and select().
+
+--- a/cpan/Term-ReadKey/ReadKey_pm.PL
++++ b/cpan/Term-ReadKey/ReadKey_pm.PL
+@@ -503,15 +503,18 @@
+ !FIRSTPART
+ 
+ close OUT;
+-# preload the XS module needed for the blockoptions() expansions below
+-# does not work with miniperl
+-package Term::ReadKey;
+-eval { require DynaLoader; };
+-our @ISA = qw(DynaLoader);
++
++require Config;
++
++sub blockoptions {
++	my $ret = 1; # host has fcntl O_NDELAY
++	$ret |= 2 if $Config{'d_poll'} eq 'define';
++	$ret |= 4 if $Config{'d_select'} eq 'define';
++	return $ret;
++}
+ 
+ print "Bootstrapping the XS for blockoptions: ";
+ my $blockoptions;
+-eval { bootstrap Term::ReadKey };
+ if (!$@) {
+   $blockoptions = blockoptions();
+ } elsif ($^ eq 'MSWin32') {
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/test-checkcase.patch perl-5.26.1/cnf/diffs/cperl-5.26.0/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.0/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/xconfig.patch perl-5.26.1/cnf/diffs/cperl-5.26.0/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.0/xconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
+-#   include "config.h"
++#   ifndef USE_CROSS_COMPILE
++#       include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* this is used for functions which take a depth trailing
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/xsconfig.patch perl-5.26.1/cnf/diffs/cperl-5.26.0/xsconfig.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.0/xsconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.0/xsconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,45 @@
+XSConfig.t checks for XS and non-XS Config.pm to match exactly.
+However, the script that makes the XS version (ext/Config/Config_xs.PL)
+is not meant to do exactly translation. It only writes keys expected
+for this particular perl version.
+
+Multi-version support in perl-cross does sometimes generate keys
+not meant for the perl version being compiled. This is probably
+harmless, and definitely much easier to support, so we relax the
+test to allow extra keys in non-XS module.
+
+XS module in never used at build time with perl-cross.
+
+--- a/ext/Config/t/XSConfig.t
++++ b/ext/Config/t/XSConfig.t
+@@ -50,7 +50,7 @@
+ Config->import();
+ require 'Config_heavy.pl';
+ require Test::More;
+-Test::More->import (tests => 4);
++Test::More->import (tests => 3);
+ 
+ ok(isXSUB($cv), 'XS Config:: is XS');
+ 
+@@ -146,12 +146,17 @@
+   for my $k (@cannedkeys) {
+     $Config_copy{$k} = '' unless exists $Config{$k};
+   }
+-  is (scalar keys %Config_copy, $klenXS, 'same adjusted key count');
+-} else {
+-  is (scalar(keys %Config), $klenXS, 'same key count');
+ }
+ 
+-is_deeply ($copy ? \%Config_copy : \%Config, \%XSConfig, "cmp PP to XS hashes");
++$Config = $copy ? \%Config_copy : \%Config;
++
++# Non-XS config *may* contain additional keys in perl-cross.
++# Remove them to avoid false positives with is_deeply.
++foreach(keys %$Config) {
++	delete $Config->{$_} unless exists $XSConfig{$_};
++}
++
++is_deeply ($Config, \%XSConfig, "cmp PP to XS hashes");
+ 
+ # old Test::Builders dont have is_passing
+ if ( Test::More->builder->can('is_passing')
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/configpm.patch perl-5.26.1/cnf/diffs/cperl-5.26.1/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.1/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -56,9 +56,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -254,7 +257,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/customized.patch perl-5.26.1/cnf/diffs/cperl-5.26.1/customized.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/customized.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.1/customized.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,17 @@
+Not really necessary to build perl, but porting/customized.t will check
+the sums. Doing this defeats the purpose of customized.dat, but it's not
+like there's much choice.
+
+Separated from other patches to avoid dependence on patch ordering.
+
+--- a/t/porting/customized.dat
++++ b/t/porting/customized.dat
+@@ -56,7 +56,7 @@
+ ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/lib/ExtUtils/Mkbootstrap.pm 76819099ea23505b590d76818ec9d8c5ec69b9bb
+ ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/lib/ExtUtils/MM.pm c49b0fc30a30dd8af0d74fed15fb8d95b7c850f4
+ ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/lib/ExtUtils/MM_Any.pm 1e0b0023bdd29e6c4ab315c8be8cb3c09fdc134a
+-ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 420379b10bf7ecbec169a8047ebe27cc69e629be
++ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 1c432d8399a4658a51464155f546b5f08b996870
+ ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/t/basic.t 3cb8d7aca46f529dfe62f9c5ed57aee7940bd6ca
+ ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/t/lib/MakeMaker/Test/NoXS.pm 371cdff1b2375017907cfbc9c8f4a31f5ad10582
+ ExtUtils::MakeMaker dist/ExtUtils-MakeMaker/t/Liblist.t 9a3baf8a2c2281037f803b909d26e77a1bb099af
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/dynaloader.patch perl-5.26.1/cnf/diffs/cperl-5.26.1/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.1/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ # Some silly modules like mod_perl use DynaLoader.a in a shared
+ # module, so add cccdlflags if we're going for a shared libperl
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/extconfigxs.patch perl-5.26.1/cnf/diffs/cperl-5.26.1/extconfigxs.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/extconfigxs.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.1/extconfigxs.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,41 @@
+XS Config uses pack to check ptrsize and ivsize, which yields host values
+when running under miniperl.
+
+--- a/ext/Config/Config_xs.PL
++++ b/ext/Config/Config_xs.PL
+@@ -30,16 +30,6 @@
+         unshift @INC, '../../lib', '../../lib/auto';
+         $in_core = 1;
+     }
+-    my $ptrsize = length(pack('P',""));
+-    my $ivsize =  length(pack('j',0));
+-    die "unknown pointer size" if $ptrsize != 4 && $ptrsize != 8; #POSIX.pm not available
+-    eval 'sub SPTR_MIN () { '.($ptrsize == 8 ? '-9223372036854775808' : '-2147483648').' } '.
+-    'sub SPTR_MAX () { '.($ptrsize == 8 ? '0x7FFFFFFFFFFFFFFF' : '0x7FFFFFFF').' } '.
+-    'sub IV_MIN () { '.($ivsize == 8 ? '-9223372036854775808' : '-2147483648').' } '.
+-    'sub IV_MAX () { '.($ivsize == 8 ? '0x7FFFFFFFFFFFFFFF' : '0x7FFFFFFF').' } '.
+-    'sub PTRSIZE () { '.$ptrsize.' } '.
+-    'sub INLSIZE () { '.($ptrsize == 8 ? 13 : 5).' } '.
+-    'sub BE () { '.((pack('N', 1) eq pack('L', 1))+0).'}';
+ }
+ use strict ;
+ use Config ;
+@@ -49,6 +39,18 @@
+     require './regen/regen_lib.pl';
+ }
+ 
++my $ivsize = $Config{'ivsize'};
++my $ptrsize = $Config{'ptrsize'};
++my $byteorder = $Config{'byteorder'};
++die "unknown pointer size" if $ptrsize != 4 && $ptrsize != 8; #POSIX.pm not available
++sub SPTR_MIN () { ($ptrsize == 8 ? -9223372036854775808 : -2147483648) };
++sub SPTR_MAX () { ($ptrsize == 8 ? 0x7FFFFFFFFFFFFFFF : 0x7FFFFFFF) };
++sub IV_MIN () { ($ivsize == 8 ? -9223372036854775808 : -2147483648) };
++sub IV_MAX () { ($ivsize == 8 ? 0x7FFFFFFFFFFFFFFF : 0x7FFFFFFF) };
++sub PTRSIZE () { $ptrsize };
++sub INLSIZE () { ($ptrsize == 8 ? 13 : 5) };
++sub BE () { ($byteorder == 0x4321 or $byteorder == 0x87654321) };
++
+ ###########################################################################
+ 
+ my $force = @ARGV ? $ARGV[0] eq '--force' : 0;
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/findext.patch perl-5.26.1/cnf/diffs/cperl-5.26.1/findext.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.1/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -120,10 +120,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/makemaker.patch perl-5.26.1/cnf/diffs/cperl-5.26.1/makemaker.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/makemaker.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.1/makemaker.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/dist/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/dist/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -36,7 +36,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+     $Is{Darwin}  = $^O eq 'darwin';
+ }
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/posix-makefile.patch perl-5.26.1/cnf/diffs/cperl-5.26.1/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.1/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/term-readkey.patch perl-5.26.1/cnf/diffs/cperl-5.26.1/term-readkey.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/term-readkey.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.1/term-readkey.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+Term::ReadKey wants to load its XS part to check its blockoptions()
+value, which actually comes down to availability of poll() and select().
+
+--- a/cpan/Term-ReadKey/ReadKey_pm.PL
++++ b/cpan/Term-ReadKey/ReadKey_pm.PL
+@@ -503,15 +503,18 @@
+ !FIRSTPART
+ 
+ close OUT;
+-# preload the XS module needed for the blockoptions() expansions below
+-# does not work with miniperl
+-package Term::ReadKey;
+-eval { require DynaLoader; };
+-our @ISA = qw(DynaLoader);
++
++require Config;
++
++sub blockoptions {
++	my $ret = 1; # host has fcntl O_NDELAY
++	$ret |= 2 if $Config{'d_poll'} eq 'define';
++	$ret |= 4 if $Config{'d_select'} eq 'define';
++	return $ret;
++}
+ 
+ print "Bootstrapping the XS for blockoptions: ";
+ my $blockoptions;
+-eval { bootstrap Term::ReadKey };
+ if (!$@) {
+   $blockoptions = blockoptions();
+ } elsif ($^ eq 'MSWin32') {
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/test-checkcase.patch perl-5.26.1/cnf/diffs/cperl-5.26.1/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.1/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/xconfig.patch perl-5.26.1/cnf/diffs/cperl-5.26.1/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.1/xconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
+-#   include "config.h"
++#   ifndef USE_CROSS_COMPILE
++#       include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* this is used for functions which take a depth trailing
diff -uNr perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/xsconfig.patch perl-5.26.1/cnf/diffs/cperl-5.26.1/xsconfig.patch
--- perl-5.26.1.orig/cnf/diffs/cperl-5.26.1/xsconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/cperl-5.26.1/xsconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,45 @@
+XSConfig.t checks for XS and non-XS Config.pm to match exactly.
+However, the script that makes the XS version (ext/Config/Config_xs.PL)
+is not meant to do exactly translation. It only writes keys expected
+for this particular perl version.
+
+Multi-version support in perl-cross does sometimes generate keys
+not meant for the perl version being compiled. This is probably
+harmless, and definitely much easier to support, so we relax the
+test to allow extra keys in non-XS module.
+
+XS module in never used at build time with perl-cross.
+
+--- a/ext/Config/t/XSConfig.t
++++ b/ext/Config/t/XSConfig.t
+@@ -50,7 +50,7 @@
+ Config->import();
+ require 'Config_heavy.pl';
+ require Test::More;
+-Test::More->import (tests => 4);
++Test::More->import (tests => 3);
+ 
+ ok(isXSUB($cv), 'XS Config:: is XS');
+ 
+@@ -146,12 +146,17 @@
+   for my $k (@cannedkeys) {
+     $Config_copy{$k} = '' unless exists $Config{$k};
+   }
+-  is (scalar keys %Config_copy, $klenXS, 'same adjusted key count');
+-} else {
+-  is (scalar(keys %Config), $klenXS, 'same key count');
+ }
+ 
+-is_deeply ($copy ? \%Config_copy : \%Config, \%XSConfig, "cmp PP to XS hashes");
++$Config = $copy ? \%Config_copy : \%Config;
++
++# Non-XS config *may* contain additional keys in perl-cross.
++# Remove them to avoid false positives with is_deeply.
++foreach(keys %$Config) {
++	delete $Config->{$_} unless exists $XSConfig{$_};
++}
++
++is_deeply ($Config, \%XSConfig, "cmp PP to XS hashes");
+ 
+ # old Test::Builders dont have is_passing
+ if ( Test::More->builder->can('is_passing')
diff -uNr perl-5.26.1.orig/cnf/diffs/dedup.px perl-5.26.1/cnf/diffs/dedup.px
--- perl-5.26.1.orig/cnf/diffs/dedup.px	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/dedup.px	2018-03-26 06:17:30.000000000 -0500
@@ -0,0 +1,60 @@
+#!/usr/bin/perl
+
+@files = (ls("perl*/*.patch"), ls("cperl*/*.patch"));
+
+print "#!/bin/sh\n\n";
+
+%map = ( );
+
+foreach(@files) {
+	$hash = `sha1sum $_`;
+	$hash =~ s/\s.*//s;
+
+	if(!defined($map{$hash})) {
+		$map{$hash} = $_;
+		deref($_) if -l $_;
+	} elsif(-l $_) {
+		$old = inode($map{$hash});
+		$new = inode($_);
+		lnsf($map{$hash}, $_) unless $old eq $new;
+	} else {
+		lnsf($map{$hash}, $_);
+	}
+}
+
+# Version-aware glob; sorts 5.27.10 after 5.27.9
+
+sub ls {
+	return sort {
+		my @a = split /\./, $a;
+		my @b = split /\./, $b;
+		while(@a && @b) {
+			my $ai = shift @a;
+			my $bi = shift @b;
+			my $r = $ai <=> $bi;
+			return $r if $r;
+		}
+		return 1 if @a;
+		return -1 if $b;
+		return 0;
+	} glob(shift);
+}
+
+sub lnsf
+{
+	my ($orig,$link) = @_;
+	print "ln -sf ../$orig $link\n";
+}
+
+sub deref
+{
+	my $name = shift;
+	print "cp $name $name.tmp && rm $name && mv $name.tmp $name\n";
+}
+
+sub inode
+{
+	my $name = shift;
+	my @stat = stat $name or die "stat $name: $!";
+	return @stat[0].':'.@stat[1];
+}
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.22.3/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.3/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -252,7 +255,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/constant.patch perl-5.26.1/cnf/diffs/perl5-5.22.3/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.3/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.22.3/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.3/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/findext.patch perl-5.26.1/cnf/diffs/perl5-5.22.3/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.3/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -115,10 +115,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.22.3/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.3/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -186,6 +184,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -367,7 +366,8 @@
+     )
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -385,6 +385,29 @@
+     }
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/makemaker-test.patch perl-5.26.1/cnf/diffs/perl5-5.22.3/makemaker-test.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/makemaker-test.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.3/makemaker-test.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,159 @@
+fix EUMM 7.04 & 7.10_01
+
+see https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker/pull/178
+and https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker/pull/181
+both PR already merged.
+
+Signed-off-by: Francois Perrad <francois.perrad@gadz.org>
+
+diff --git a/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t b/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+--- a/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
++++ b/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+@@ -15,12 +15,13 @@
+ 
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+-use Test::More;
+ use Config;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+-    : (tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP));
++    : ();
++plan tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP);
+ 
+ my $Is_VMS = $^O eq 'VMS';
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/PL_FILES.t b/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
+--- a/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
++++ b/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
+@@ -11,9 +11,9 @@
+ use MakeMaker::Test::Setup::PL_FILES;
+ use MakeMaker::Test::Utils;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 9);
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/basic.t b/cpan/ExtUtils-MakeMaker/t/basic.t
+--- a/cpan/ExtUtils-MakeMaker/t/basic.t
++++ b/cpan/ExtUtils-MakeMaker/t/basic.t
+@@ -20,9 +20,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 171);
+ use File::Find;
+diff --git a/cpan/ExtUtils-MakeMaker/t/echo.t b/cpan/ExtUtils-MakeMaker/t/echo.t
+--- a/cpan/ExtUtils-MakeMaker/t/echo.t
++++ b/cpan/ExtUtils-MakeMaker/t/echo.t
+@@ -14,9 +14,9 @@
+ use File::Temp;
+ use Cwd 'abs_path';
+ 
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : ();
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/min_perl_version.t b/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
+--- a/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
++++ b/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
+@@ -13,9 +13,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::MPV;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 36);
+ use File::Path;
+diff --git a/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t b/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
+--- a/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
++++ b/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
+@@ -12,9 +12,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : 'no_plan';
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/recurs.t b/cpan/ExtUtils-MakeMaker/t/recurs.t
+--- a/cpan/ExtUtils-MakeMaker/t/recurs.t
++++ b/cpan/ExtUtils-MakeMaker/t/recurs.t
+@@ -14,9 +14,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::Recurs;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 26);
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/several_authors.t b/cpan/ExtUtils-MakeMaker/t/several_authors.t
+--- a/cpan/ExtUtils-MakeMaker/t/several_authors.t
++++ b/cpan/ExtUtils-MakeMaker/t/several_authors.t
+@@ -13,9 +13,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::SAS;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 20);
+ use File::Path;
+diff --git a/cpan/ExtUtils-MakeMaker/t/unicode.t b/cpan/ExtUtils-MakeMaker/t/unicode.t
+--- a/cpan/ExtUtils-MakeMaker/t/unicode.t
++++ b/cpan/ExtUtils-MakeMaker/t/unicode.t
+@@ -6,16 +6,19 @@
+ chdir 't';
+ 
+ use strict;
++use ExtUtils::MM;
++use MakeMaker::Test::Utils qw(makefile_name make make_run run);
+ use Test::More;
+ use Config;
+ BEGIN {
+   plan skip_all => 'Need perlio and perl 5.8+.'
+     if $] < 5.008 or !$Config{useperlio};
++  plan skip_all => 'cross-compiling and make not available'
++    if !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'};
++
+   plan tests => 9;
+ }
+-use ExtUtils::MM;
+ use MakeMaker::Test::Setup::Unicode;
+-use MakeMaker::Test::Utils qw(makefile_name make_run run);
+ use TieOut;
+ 
+ my $MM = bless { DIR => ['.'] }, 'MM';
+
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.22.3/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.3/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.22.3/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.3/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.22.3/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.3/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.3/xconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
+-#   include "config.h"
++#   ifndef USE_CROSS_COMPILE
++#       include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* NOTE 1: that with gcc -std=c89 the __STDC_VERSION__ is *not* defined
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.22.4/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.4/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -252,7 +255,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/constant.patch perl-5.26.1/cnf/diffs/perl5-5.22.4/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.4/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.22.4/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.4/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/findext.patch perl-5.26.1/cnf/diffs/perl5-5.22.4/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.4/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -115,10 +115,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.22.4/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.4/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -186,6 +184,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -367,7 +366,8 @@
+     )
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -385,6 +385,29 @@
+     }
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/makemaker-test.patch perl-5.26.1/cnf/diffs/perl5-5.22.4/makemaker-test.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/makemaker-test.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.4/makemaker-test.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,159 @@
+fix EUMM 7.04 & 7.10_01
+
+see https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker/pull/178
+and https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker/pull/181
+both PR already merged.
+
+Signed-off-by: Francois Perrad <francois.perrad@gadz.org>
+
+diff --git a/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t b/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+--- a/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
++++ b/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+@@ -15,12 +15,13 @@
+ 
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+-use Test::More;
+ use Config;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+-    : (tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP));
++    : ();
++plan tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP);
+ 
+ my $Is_VMS = $^O eq 'VMS';
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/PL_FILES.t b/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
+--- a/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
++++ b/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
+@@ -11,9 +11,9 @@
+ use MakeMaker::Test::Setup::PL_FILES;
+ use MakeMaker::Test::Utils;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 9);
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/basic.t b/cpan/ExtUtils-MakeMaker/t/basic.t
+--- a/cpan/ExtUtils-MakeMaker/t/basic.t
++++ b/cpan/ExtUtils-MakeMaker/t/basic.t
+@@ -20,9 +20,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 171);
+ use File::Find;
+diff --git a/cpan/ExtUtils-MakeMaker/t/echo.t b/cpan/ExtUtils-MakeMaker/t/echo.t
+--- a/cpan/ExtUtils-MakeMaker/t/echo.t
++++ b/cpan/ExtUtils-MakeMaker/t/echo.t
+@@ -14,9 +14,9 @@
+ use File::Temp;
+ use Cwd 'abs_path';
+ 
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : ();
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/min_perl_version.t b/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
+--- a/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
++++ b/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
+@@ -13,9 +13,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::MPV;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 36);
+ use File::Path;
+diff --git a/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t b/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
+--- a/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
++++ b/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
+@@ -12,9 +12,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : 'no_plan';
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/recurs.t b/cpan/ExtUtils-MakeMaker/t/recurs.t
+--- a/cpan/ExtUtils-MakeMaker/t/recurs.t
++++ b/cpan/ExtUtils-MakeMaker/t/recurs.t
+@@ -14,9 +14,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::Recurs;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 26);
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/several_authors.t b/cpan/ExtUtils-MakeMaker/t/several_authors.t
+--- a/cpan/ExtUtils-MakeMaker/t/several_authors.t
++++ b/cpan/ExtUtils-MakeMaker/t/several_authors.t
+@@ -13,9 +13,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::SAS;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 20);
+ use File::Path;
+diff --git a/cpan/ExtUtils-MakeMaker/t/unicode.t b/cpan/ExtUtils-MakeMaker/t/unicode.t
+--- a/cpan/ExtUtils-MakeMaker/t/unicode.t
++++ b/cpan/ExtUtils-MakeMaker/t/unicode.t
+@@ -6,16 +6,19 @@
+ chdir 't';
+ 
+ use strict;
++use ExtUtils::MM;
++use MakeMaker::Test::Utils qw(makefile_name make make_run run);
+ use Test::More;
+ use Config;
+ BEGIN {
+   plan skip_all => 'Need perlio and perl 5.8+.'
+     if $] < 5.008 or !$Config{useperlio};
++  plan skip_all => 'cross-compiling and make not available'
++    if !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'};
++
+   plan tests => 9;
+ }
+-use ExtUtils::MM;
+ use MakeMaker::Test::Setup::Unicode;
+-use MakeMaker::Test::Utils qw(makefile_name make_run run);
+ use TieOut;
+ 
+ my $MM = bless { DIR => ['.'] }, 'MM';
+
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.22.4/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.4/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.22.4/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.4/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.22.4/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.22.4/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.22.4/xconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
+-#   include "config.h"
++#   ifndef USE_CROSS_COMPILE
++#       include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* NOTE 1: that with gcc -std=c89 the __STDC_VERSION__ is *not* defined
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.24.0/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.0/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -252,7 +255,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/constant.patch perl-5.26.1/cnf/diffs/perl5-5.24.0/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.0/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/customized.patch perl-5.26.1/cnf/diffs/perl5-5.24.0/customized.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/customized.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.0/customized.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,39 @@
+Not really necessary to build perl, but porting/customized.t will check
+the sums. Doing this defeats the purpose of customized.dat, but it's not
+like there's much choice.
+
+Separated from Kid.pm and MM_Unix.pm patches to avoid dependence
+on patch ordering.
+
+--- a/t/porting/customized.dat
++++ b/t/porting/customized.dat
+@@ -1,9 +1,9 @@
+ CPAN cpan/CPAN/lib/CPAN.pm ce62c43d72f101c011184dbbc59e21c2790826f0
+ Encode cpan/Encode/encoding.pm 51c19efc9bfe8467d6ae12a4654f6e7f980715bf
+-ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t a0369c919e216fb02767a637666bb4577ad79b02
++ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t 5cddb9664c43e53a4ce7a213601d6cff53e09d2d
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Command/MM.pm 8d772fbc6a57637ab24d12a02794073ee71b489c
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist.pm 9be9ac3fee6fd6df702469904e02c8b4c6f2502e
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm bb2443c2314c50f09f7eab4aacc03ade8b9907dd
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm 8b04197b7a32fa4171c5cae1910d7c2d08998133
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker.pm 830acdc810e2974d7fd4ec408ea1bfa825c75b69
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker/Config.pm 5c41b40e33464c6635258061dff4ece018b46bd9
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker/FAQ.pod 062e5d14a803fbbec8d61803086a3d7997e8a473
+@@ -23,7 +23,7 @@
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_NW5.pm 8185a7db6c4d7e0fdc5001aeaa8c2b612a884a5e
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_OS2.pm 2fe66ca8a894d6a2ae340b8bf6f8d69c5e1f7fbe
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_QNX.pm e8a4dbba69a1d551bd581ea6a3f2415bacbc0ae5
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm d666ac424618c3e11b8549755c9646d942bd2d57
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 4a0a9dcf92aef503b7ef4f3b669ee518b9088aec
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_UWIN.pm f6581a0e75e45bfc26f343f173d3366c43fb1221
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_VMS.pm 1997912b5018970cdeb3dae8fd7e0c24f6e5d567
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_VOS.pm 210a4eda8b081d9986477e3a9762fce6ebea8474
+@@ -32,7 +32,7 @@
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MY.pm 6059d9bb7c4f0c154a61f115aa6b24ba08622b81
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/testlib.pm 6347934cbe40da977790cea6c81987816b2fe26b
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/cd.t 0a71fbd646a7be8358b07b6f64f838243cc0aef4
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/echo.t 37aec8f794c52e037540757eb5b2556f79419ff7
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/echo.t fcc4755df34f696ab515607382910a1dc96ec0b9
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/lib/MakeMaker/Test/NoXS.pm 371cdff1b2375017907cfbc9c8f4a31f5ad10582
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/prereq.t 53bda2c549fd13a6b6c13a070ca6bc79883081c0
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/vstrings.t 90035a2bdbf45f15b9c3196d072d7cba7e662871
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.24.0/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.0/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/findext.patch perl-5.26.1/cnf/diffs/perl5-5.24.0/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.0/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -116,10 +116,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.24.0/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.0/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -194,6 +192,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -377,7 +376,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -402,6 +402,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/liblist.patch perl-5.26.1/cnf/diffs/perl5-5.24.0/liblist.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/liblist.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.0/liblist.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,80 @@
+When deciding which libraries are available, the original Configure uses
+shaky heuristics to physically locate library files.
+This is a very very bad thing to do, *especially* when cross-compiling,
+as said heiristics are likely to locate the host libraries, not the target ones.
+
+The only real need for this test is to make sure it's safe to pass -llibrary
+to the compiler. So that's exactly what perl-cross does, pass -llibrary
+and see if it breaks things.
+
+Note this is a part of MakeMaker, and only applies to module Makefiles.
+
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
+@@ -19,9 +19,10 @@
+ use File::Spec;
+ 
+ sub ext {
+-    if    ( $^O eq 'VMS' )     { return &_vms_ext; }
+-    elsif ( $^O eq 'MSWin32' ) { return &_win32_ext; }
+-    else                       { return &_unix_os2_ext; }
++  if   ($Config{usemmldlt}){ return &_ld_ext;       }
++  elsif($^O eq 'VMS')      { return &_vms_ext;      }
++  elsif($^O eq 'MSWin32')  { return &_win32_ext;    }
++  else                     { return &_unix_os2_ext; }
+ }
+ 
+ sub _unix_os2_ext {
+@@ -641,4 +642,51 @@
+     wantarray ? ( $lib, '', $ldlib, '', ( $give_libs ? \@flibs : () ) ) : $lib;
+ }
+ 
++# A direct test for -l validity.
++# Because guessing real file names for -llib options when dealing
++# with a cross compiler is generally a BAD IDEA^tm.
++sub _ld_ext {
++    my($self,$potential_libs, $verbose, $give_libs) = @_;
++    $verbose ||= 0;
++
++    if ($^O =~ 'os2' and $Config{perllibs}) { 
++	# Dynamic libraries are not transitive, so we may need including
++	# the libraries linked against perl.dll again.
++
++	$potential_libs .= " " if $potential_libs;
++	$potential_libs .= $Config{perllibs};
++    }
++    return ("", "", "", "", ($give_libs ? [] : ())) unless $potential_libs;
++    warn "Potential libraries are '$potential_libs':\n" if $verbose;
++
++    my($ld)   = $Config{ld};
++    my($lddlflags)   = $Config{lddlflags};
++    my($libs) = defined $Config{perllibs} ? $Config{perllibs} : $Config{libs};
++
++    my $try = 'try_mm.c';
++    my $tryx = 'try_mm.x';
++    open(TRY, '>', $try) || die "Can't create MakeMaker test file $try: $!\n";
++    print TRY "int main(void) { return 0; }\n";
++    close(TRY);
++
++    my $testlibs = '';
++    my @testlibs = ();
++    foreach my $thislib (split ' ', $potential_libs) {
++        $testlibs = join(' ', @testlibs);
++	if($thislib =~ /^-L/) {
++		push(@testlibs, $thislib);
++		next
++	};
++	my $cmd = "$ld $lddlflags -o $tryx $try $testlibs $thislib >/dev/null 2>&1";
++	my $ret = system($cmd);
++	warn "Warning (mostly harmless): " . "No library found for $thislib\n" if $ret;
++	next if $ret;
++	push @testlibs, $thislib;
++    }
++    unlink($try);
++    unlink($tryx);
++
++    return (join(' ', @testlibs), '', join(' ', @testlibs), '');
++}
++
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/makemaker-test.patch perl-5.26.1/cnf/diffs/perl5-5.24.0/makemaker-test.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/makemaker-test.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.0/makemaker-test.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,159 @@
+fix EUMM 7.04 & 7.10_01
+
+see https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker/pull/178
+and https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker/pull/181
+both PR already merged.
+
+Signed-off-by: Francois Perrad <francois.perrad@gadz.org>
+
+diff --git a/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t b/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+--- a/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
++++ b/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+@@ -15,12 +15,13 @@
+ 
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+-use Test::More;
+ use Config;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+-    : (tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP));
++    : ();
++plan tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP);
+ 
+ my $Is_VMS = $^O eq 'VMS';
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/PL_FILES.t b/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
+--- a/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
++++ b/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
+@@ -11,9 +11,9 @@
+ use MakeMaker::Test::Setup::PL_FILES;
+ use MakeMaker::Test::Utils;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 9);
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/basic.t b/cpan/ExtUtils-MakeMaker/t/basic.t
+--- a/cpan/ExtUtils-MakeMaker/t/basic.t
++++ b/cpan/ExtUtils-MakeMaker/t/basic.t
+@@ -20,9 +20,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 171);
+ use File::Find;
+diff --git a/cpan/ExtUtils-MakeMaker/t/echo.t b/cpan/ExtUtils-MakeMaker/t/echo.t
+--- a/cpan/ExtUtils-MakeMaker/t/echo.t
++++ b/cpan/ExtUtils-MakeMaker/t/echo.t
+@@ -14,9 +14,9 @@
+ use File::Temp;
+ use Cwd 'abs_path';
+ 
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : ();
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/min_perl_version.t b/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
+--- a/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
++++ b/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
+@@ -13,9 +13,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::MPV;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 36);
+ use File::Path;
+diff --git a/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t b/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
+--- a/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
++++ b/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
+@@ -12,9 +12,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : 'no_plan';
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/recurs.t b/cpan/ExtUtils-MakeMaker/t/recurs.t
+--- a/cpan/ExtUtils-MakeMaker/t/recurs.t
++++ b/cpan/ExtUtils-MakeMaker/t/recurs.t
+@@ -14,9 +14,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::Recurs;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 26);
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/several_authors.t b/cpan/ExtUtils-MakeMaker/t/several_authors.t
+--- a/cpan/ExtUtils-MakeMaker/t/several_authors.t
++++ b/cpan/ExtUtils-MakeMaker/t/several_authors.t
+@@ -13,9 +13,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::SAS;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 20);
+ use File::Path;
+diff --git a/cpan/ExtUtils-MakeMaker/t/unicode.t b/cpan/ExtUtils-MakeMaker/t/unicode.t
+--- a/cpan/ExtUtils-MakeMaker/t/unicode.t
++++ b/cpan/ExtUtils-MakeMaker/t/unicode.t
+@@ -6,16 +6,19 @@
+ chdir 't';
+ 
+ use strict;
++use ExtUtils::MM;
++use MakeMaker::Test::Utils qw(makefile_name make make_run run);
+ use Test::More;
+ use Config;
+ BEGIN {
+   plan skip_all => 'Need perlio and perl 5.8+.'
+     if $] < 5.008 or !$Config{useperlio};
++  plan skip_all => 'cross-compiling and make not available'
++    if !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'};
++
+   plan tests => 9;
+ }
+-use ExtUtils::MM;
+ use MakeMaker::Test::Setup::Unicode;
+-use MakeMaker::Test::Utils qw(makefile_name make_run run);
+ use TieOut;
+ 
+ my $MM = bless { DIR => ['.'] }, 'MM';
+
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/makemaker-unix.patch perl-5.26.1/cnf/diffs/perl5-5.24.0/makemaker-unix.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/makemaker-unix.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.0/makemaker-unix.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -37,7 +37,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+ }
+ 
+ BEGIN {
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.24.0/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.0/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.24.0/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.0/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.24.0/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.0/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.0/xconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
+-#   include "config.h"
++#   ifndef USE_CROSS_COMPILE
++#       include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* NOTE 1: that with gcc -std=c89 the __STDC_VERSION__ is *not* defined
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.24.1/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.1/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -252,7 +255,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/constant.patch perl-5.26.1/cnf/diffs/perl5-5.24.1/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.1/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/customized.patch perl-5.26.1/cnf/diffs/perl5-5.24.1/customized.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/customized.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.1/customized.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,42 @@
+Not really necessary to build perl, but porting/customized.t will check
+the sums. Doing this defeats the purpose of customized.dat, but it's not
+like there's much choice.
+
+Separated from Kid.pm and MM_Unix.pm patches to avoid dependence
+on patch ordering.
+
+--- a/t/porting/customized.dat
++++ b/t/porting/customized.dat
+@@ -17,12 +17,12 @@
+ Encode cpan/Encode/bin/unidump 715f47c2fcc661268f3c6cd3de0d27c72b745cd2
+ Encode cpan/Encode/Encode.pm e146861ff2e6aaa62defa4887eade68dd7b17c8e
+ Encode cpan/Encode/encoding.pm 51c19efc9bfe8467d6ae12a4654f6e7f980715bf
+-ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t a0369c919e216fb02767a637666bb4577ad79b02
++ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t 5cddb9664c43e53a4ce7a213601d6cff53e09d2d
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/bin/instmodsh 5bc04a0173b8b787f465271b6186220326ae8eef
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Command.pm e3a372e07392179711ea9972087c1105a2780fad
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Command/MM.pm b72721bd6aa9bf7ec328bda99a8fdb63cac6114d
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist.pm 0e1e4c25eddb999fec6c4dc66593f76db34cfd16
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm bfd2aa00ca4ed251f342e1d1ad704abbaf5a615e
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm 7758220c71c4ebf148635361e06211ffbbf85d85
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker.pm 5529ae3064365eafd99536621305d52f4ab31b45
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker/Config.pm bc88b275af73b8faac6abd59a9aad3f625925810
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker/FAQ.pod 062e5d14a803fbbec8d61803086a3d7997e8a473
+@@ -42,7 +42,7 @@
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_NW5.pm de777d7809c0d73e5d4622a29921731c7e5dff48
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_OS2.pm 01e8f08a82b5304009574e3ac0892b4066ff7639
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_QNX.pm 5340052b58557a6764f5ac9f8b807fefec404a06
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 3c3b93f431b0a51b9592b3d69624dbf5409f6f74
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 31fd278ce8f46e11211708e3091c6ebcbb4ea0c6
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_UWIN.pm 40397f4cd2d49700b80b4ef490da98add24c5b37
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_VMS.pm 147e97fbabb74841f0733dbd5d1b9f3fa51f87c1
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_VOS.pm 3f13ed7045ff3443bcb4dd6c95c98b9bd705820f
+@@ -51,7 +51,7 @@
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MY.pm 6fefe99045b64459905d4721f3a494d8d50f7ab9
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/testlib.pm 172778ad21c065a89cd270668eb9f99a7364b41c
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/cd.t 0a71fbd646a7be8358b07b6f64f838243cc0aef4
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/echo.t 37aec8f794c52e037540757eb5b2556f79419ff7
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/echo.t fcc4755df34f696ab515607382910a1dc96ec0b9
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/lib/MakeMaker/Test/NoXS.pm 371cdff1b2375017907cfbc9c8f4a31f5ad10582
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/prereq.t 53bda2c549fd13a6b6c13a070ca6bc79883081c0
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/vstrings.t 90035a2bdbf45f15b9c3196d072d7cba7e662871
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.24.1/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.1/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/findext.patch perl-5.26.1/cnf/diffs/perl5-5.24.1/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.1/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -116,10 +116,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.24.1/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.1/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -194,6 +192,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -377,7 +376,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -402,6 +402,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/liblist.patch perl-5.26.1/cnf/diffs/perl5-5.24.1/liblist.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/liblist.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.1/liblist.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,80 @@
+When deciding which libraries are available, the original Configure uses
+shaky heuristics to physically locate library files.
+This is a very very bad thing to do, *especially* when cross-compiling,
+as said heiristics are likely to locate the host libraries, not the target ones.
+
+The only real need for this test is to make sure it's safe to pass -llibrary
+to the compiler. So that's exactly what perl-cross does, pass -llibrary
+and see if it breaks things.
+
+Note this is a part of MakeMaker, and only applies to module Makefiles.
+
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
+@@ -19,9 +19,10 @@
+ use File::Spec;
+ 
+ sub ext {
+-    if    ( $^O eq 'VMS' )     { return &_vms_ext; }
+-    elsif ( $^O eq 'MSWin32' ) { return &_win32_ext; }
+-    else                       { return &_unix_os2_ext; }
++  if   ($Config{usemmldlt}){ return &_ld_ext;       }
++  elsif($^O eq 'VMS')      { return &_vms_ext;      }
++  elsif($^O eq 'MSWin32')  { return &_win32_ext;    }
++  else                     { return &_unix_os2_ext; }
+ }
+ 
+ sub _unix_os2_ext {
+@@ -641,4 +642,51 @@
+     wantarray ? ( $lib, '', $ldlib, '', ( $give_libs ? \@flibs : () ) ) : $lib;
+ }
+ 
++# A direct test for -l validity.
++# Because guessing real file names for -llib options when dealing
++# with a cross compiler is generally a BAD IDEA^tm.
++sub _ld_ext {
++    my($self,$potential_libs, $verbose, $give_libs) = @_;
++    $verbose ||= 0;
++
++    if ($^O =~ 'os2' and $Config{perllibs}) { 
++	# Dynamic libraries are not transitive, so we may need including
++	# the libraries linked against perl.dll again.
++
++	$potential_libs .= " " if $potential_libs;
++	$potential_libs .= $Config{perllibs};
++    }
++    return ("", "", "", "", ($give_libs ? [] : ())) unless $potential_libs;
++    warn "Potential libraries are '$potential_libs':\n" if $verbose;
++
++    my($ld)   = $Config{ld};
++    my($lddlflags)   = $Config{lddlflags};
++    my($libs) = defined $Config{perllibs} ? $Config{perllibs} : $Config{libs};
++
++    my $try = 'try_mm.c';
++    my $tryx = 'try_mm.x';
++    open(TRY, '>', $try) || die "Can't create MakeMaker test file $try: $!\n";
++    print TRY "int main(void) { return 0; }\n";
++    close(TRY);
++
++    my $testlibs = '';
++    my @testlibs = ();
++    foreach my $thislib (split ' ', $potential_libs) {
++        $testlibs = join(' ', @testlibs);
++	if($thislib =~ /^-L/) {
++		push(@testlibs, $thislib);
++		next
++	};
++	my $cmd = "$ld $lddlflags -o $tryx $try $testlibs $thislib >/dev/null 2>&1";
++	my $ret = system($cmd);
++	warn "Warning (mostly harmless): " . "No library found for $thislib\n" if $ret;
++	next if $ret;
++	push @testlibs, $thislib;
++    }
++    unlink($try);
++    unlink($tryx);
++
++    return (join(' ', @testlibs), '', join(' ', @testlibs), '');
++}
++
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/makemaker-test.patch perl-5.26.1/cnf/diffs/perl5-5.24.1/makemaker-test.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/makemaker-test.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.1/makemaker-test.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,159 @@
+fix EUMM 7.04 & 7.10_01
+
+see https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker/pull/178
+and https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker/pull/181
+both PR already merged.
+
+Signed-off-by: Francois Perrad <francois.perrad@gadz.org>
+
+diff --git a/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t b/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+--- a/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
++++ b/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+@@ -15,12 +15,13 @@
+ 
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+-use Test::More;
+ use Config;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+-    : (tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP));
++    : ();
++plan tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP);
+ 
+ my $Is_VMS = $^O eq 'VMS';
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/PL_FILES.t b/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
+--- a/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
++++ b/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
+@@ -11,9 +11,9 @@
+ use MakeMaker::Test::Setup::PL_FILES;
+ use MakeMaker::Test::Utils;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 9);
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/basic.t b/cpan/ExtUtils-MakeMaker/t/basic.t
+--- a/cpan/ExtUtils-MakeMaker/t/basic.t
++++ b/cpan/ExtUtils-MakeMaker/t/basic.t
+@@ -20,9 +20,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 171);
+ use File::Find;
+diff --git a/cpan/ExtUtils-MakeMaker/t/echo.t b/cpan/ExtUtils-MakeMaker/t/echo.t
+--- a/cpan/ExtUtils-MakeMaker/t/echo.t
++++ b/cpan/ExtUtils-MakeMaker/t/echo.t
+@@ -14,9 +14,9 @@
+ use File::Temp;
+ use Cwd 'abs_path';
+ 
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : ();
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/min_perl_version.t b/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
+--- a/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
++++ b/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
+@@ -13,9 +13,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::MPV;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 36);
+ use File::Path;
+diff --git a/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t b/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
+--- a/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
++++ b/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
+@@ -12,9 +12,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : 'no_plan';
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/recurs.t b/cpan/ExtUtils-MakeMaker/t/recurs.t
+--- a/cpan/ExtUtils-MakeMaker/t/recurs.t
++++ b/cpan/ExtUtils-MakeMaker/t/recurs.t
+@@ -14,9 +14,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::Recurs;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 26);
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/several_authors.t b/cpan/ExtUtils-MakeMaker/t/several_authors.t
+--- a/cpan/ExtUtils-MakeMaker/t/several_authors.t
++++ b/cpan/ExtUtils-MakeMaker/t/several_authors.t
+@@ -13,9 +13,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::SAS;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 20);
+ use File::Path;
+diff --git a/cpan/ExtUtils-MakeMaker/t/unicode.t b/cpan/ExtUtils-MakeMaker/t/unicode.t
+--- a/cpan/ExtUtils-MakeMaker/t/unicode.t
++++ b/cpan/ExtUtils-MakeMaker/t/unicode.t
+@@ -6,16 +6,19 @@
+ chdir 't';
+ 
+ use strict;
++use ExtUtils::MM;
++use MakeMaker::Test::Utils qw(makefile_name make make_run run);
+ use Test::More;
+ use Config;
+ BEGIN {
+   plan skip_all => 'Need perlio and perl 5.8+.'
+     if $] < 5.008 or !$Config{useperlio};
++  plan skip_all => 'cross-compiling and make not available'
++    if !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'};
++
+   plan tests => 9;
+ }
+-use ExtUtils::MM;
+ use MakeMaker::Test::Setup::Unicode;
+-use MakeMaker::Test::Utils qw(makefile_name make_run run);
+ use TieOut;
+ 
+ my $MM = bless { DIR => ['.'] }, 'MM';
+
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/makemaker-unix.patch perl-5.26.1/cnf/diffs/perl5-5.24.1/makemaker-unix.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/makemaker-unix.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.1/makemaker-unix.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -37,7 +37,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+ }
+ 
+ BEGIN {
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.24.1/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.1/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.24.1/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.1/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.24.1/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.1/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.1/xconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
+-#   include "config.h"
++#   ifndef USE_CROSS_COMPILE
++#       include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* NOTE 1: that with gcc -std=c89 the __STDC_VERSION__ is *not* defined
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.24.2/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.2/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -252,7 +255,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/constant.patch perl-5.26.1/cnf/diffs/perl5-5.24.2/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.2/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/customized.patch perl-5.26.1/cnf/diffs/perl5-5.24.2/customized.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/customized.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.2/customized.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,42 @@
+Not really necessary to build perl, but porting/customized.t will check
+the sums. Doing this defeats the purpose of customized.dat, but it's not
+like there's much choice.
+
+Separated from Kid.pm and MM_Unix.pm patches to avoid dependence
+on patch ordering.
+
+--- a/t/porting/customized.dat
++++ b/t/porting/customized.dat
+@@ -17,12 +17,12 @@
+ Encode cpan/Encode/bin/unidump 715f47c2fcc661268f3c6cd3de0d27c72b745cd2
+ Encode cpan/Encode/Encode.pm e146861ff2e6aaa62defa4887eade68dd7b17c8e
+ Encode cpan/Encode/encoding.pm 51c19efc9bfe8467d6ae12a4654f6e7f980715bf
+-ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t a0369c919e216fb02767a637666bb4577ad79b02
++ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t 5cddb9664c43e53a4ce7a213601d6cff53e09d2d
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/bin/instmodsh 5bc04a0173b8b787f465271b6186220326ae8eef
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Command.pm e3a372e07392179711ea9972087c1105a2780fad
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Command/MM.pm b72721bd6aa9bf7ec328bda99a8fdb63cac6114d
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist.pm 0e1e4c25eddb999fec6c4dc66593f76db34cfd16
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm bfd2aa00ca4ed251f342e1d1ad704abbaf5a615e
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm 7758220c71c4ebf148635361e06211ffbbf85d85
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker.pm 5529ae3064365eafd99536621305d52f4ab31b45
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker/Config.pm bc88b275af73b8faac6abd59a9aad3f625925810
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker/FAQ.pod 062e5d14a803fbbec8d61803086a3d7997e8a473
+@@ -42,7 +42,7 @@
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_NW5.pm de777d7809c0d73e5d4622a29921731c7e5dff48
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_OS2.pm 01e8f08a82b5304009574e3ac0892b4066ff7639
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_QNX.pm 5340052b58557a6764f5ac9f8b807fefec404a06
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 3c3b93f431b0a51b9592b3d69624dbf5409f6f74
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 31fd278ce8f46e11211708e3091c6ebcbb4ea0c6
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_UWIN.pm 40397f4cd2d49700b80b4ef490da98add24c5b37
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_VMS.pm 147e97fbabb74841f0733dbd5d1b9f3fa51f87c1
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_VOS.pm 3f13ed7045ff3443bcb4dd6c95c98b9bd705820f
+@@ -51,7 +51,7 @@
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MY.pm 6fefe99045b64459905d4721f3a494d8d50f7ab9
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/testlib.pm 172778ad21c065a89cd270668eb9f99a7364b41c
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/cd.t 0a71fbd646a7be8358b07b6f64f838243cc0aef4
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/echo.t 37aec8f794c52e037540757eb5b2556f79419ff7
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/echo.t fcc4755df34f696ab515607382910a1dc96ec0b9
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/lib/MakeMaker/Test/NoXS.pm 371cdff1b2375017907cfbc9c8f4a31f5ad10582
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/prereq.t 53bda2c549fd13a6b6c13a070ca6bc79883081c0
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/vstrings.t 90035a2bdbf45f15b9c3196d072d7cba7e662871
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.24.2/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.2/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/findext.patch perl-5.26.1/cnf/diffs/perl5-5.24.2/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.2/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -116,10 +116,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.24.2/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.2/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -194,6 +192,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -377,7 +376,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -402,6 +402,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/liblist.patch perl-5.26.1/cnf/diffs/perl5-5.24.2/liblist.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/liblist.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.2/liblist.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,80 @@
+When deciding which libraries are available, the original Configure uses
+shaky heuristics to physically locate library files.
+This is a very very bad thing to do, *especially* when cross-compiling,
+as said heiristics are likely to locate the host libraries, not the target ones.
+
+The only real need for this test is to make sure it's safe to pass -llibrary
+to the compiler. So that's exactly what perl-cross does, pass -llibrary
+and see if it breaks things.
+
+Note this is a part of MakeMaker, and only applies to module Makefiles.
+
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
+@@ -19,9 +19,10 @@
+ use File::Spec;
+ 
+ sub ext {
+-    if    ( $^O eq 'VMS' )     { return &_vms_ext; }
+-    elsif ( $^O eq 'MSWin32' ) { return &_win32_ext; }
+-    else                       { return &_unix_os2_ext; }
++  if   ($Config{usemmldlt}){ return &_ld_ext;       }
++  elsif($^O eq 'VMS')      { return &_vms_ext;      }
++  elsif($^O eq 'MSWin32')  { return &_win32_ext;    }
++  else                     { return &_unix_os2_ext; }
+ }
+ 
+ sub _unix_os2_ext {
+@@ -641,4 +642,51 @@
+     wantarray ? ( $lib, '', $ldlib, '', ( $give_libs ? \@flibs : () ) ) : $lib;
+ }
+ 
++# A direct test for -l validity.
++# Because guessing real file names for -llib options when dealing
++# with a cross compiler is generally a BAD IDEA^tm.
++sub _ld_ext {
++    my($self,$potential_libs, $verbose, $give_libs) = @_;
++    $verbose ||= 0;
++
++    if ($^O =~ 'os2' and $Config{perllibs}) { 
++	# Dynamic libraries are not transitive, so we may need including
++	# the libraries linked against perl.dll again.
++
++	$potential_libs .= " " if $potential_libs;
++	$potential_libs .= $Config{perllibs};
++    }
++    return ("", "", "", "", ($give_libs ? [] : ())) unless $potential_libs;
++    warn "Potential libraries are '$potential_libs':\n" if $verbose;
++
++    my($ld)   = $Config{ld};
++    my($lddlflags)   = $Config{lddlflags};
++    my($libs) = defined $Config{perllibs} ? $Config{perllibs} : $Config{libs};
++
++    my $try = 'try_mm.c';
++    my $tryx = 'try_mm.x';
++    open(TRY, '>', $try) || die "Can't create MakeMaker test file $try: $!\n";
++    print TRY "int main(void) { return 0; }\n";
++    close(TRY);
++
++    my $testlibs = '';
++    my @testlibs = ();
++    foreach my $thislib (split ' ', $potential_libs) {
++        $testlibs = join(' ', @testlibs);
++	if($thislib =~ /^-L/) {
++		push(@testlibs, $thislib);
++		next
++	};
++	my $cmd = "$ld $lddlflags -o $tryx $try $testlibs $thislib >/dev/null 2>&1";
++	my $ret = system($cmd);
++	warn "Warning (mostly harmless): " . "No library found for $thislib\n" if $ret;
++	next if $ret;
++	push @testlibs, $thislib;
++    }
++    unlink($try);
++    unlink($tryx);
++
++    return (join(' ', @testlibs), '', join(' ', @testlibs), '');
++}
++
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/makemaker-test.patch perl-5.26.1/cnf/diffs/perl5-5.24.2/makemaker-test.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/makemaker-test.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.2/makemaker-test.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,159 @@
+fix EUMM 7.04 & 7.10_01
+
+see https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker/pull/178
+and https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker/pull/181
+both PR already merged.
+
+Signed-off-by: Francois Perrad <francois.perrad@gadz.org>
+
+diff --git a/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t b/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+--- a/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
++++ b/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+@@ -15,12 +15,13 @@
+ 
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+-use Test::More;
+ use Config;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+-    : (tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP));
++    : ();
++plan tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP);
+ 
+ my $Is_VMS = $^O eq 'VMS';
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/PL_FILES.t b/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
+--- a/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
++++ b/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
+@@ -11,9 +11,9 @@
+ use MakeMaker::Test::Setup::PL_FILES;
+ use MakeMaker::Test::Utils;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 9);
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/basic.t b/cpan/ExtUtils-MakeMaker/t/basic.t
+--- a/cpan/ExtUtils-MakeMaker/t/basic.t
++++ b/cpan/ExtUtils-MakeMaker/t/basic.t
+@@ -20,9 +20,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 171);
+ use File::Find;
+diff --git a/cpan/ExtUtils-MakeMaker/t/echo.t b/cpan/ExtUtils-MakeMaker/t/echo.t
+--- a/cpan/ExtUtils-MakeMaker/t/echo.t
++++ b/cpan/ExtUtils-MakeMaker/t/echo.t
+@@ -14,9 +14,9 @@
+ use File::Temp;
+ use Cwd 'abs_path';
+ 
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : ();
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/min_perl_version.t b/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
+--- a/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
++++ b/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
+@@ -13,9 +13,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::MPV;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 36);
+ use File::Path;
+diff --git a/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t b/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
+--- a/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
++++ b/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
+@@ -12,9 +12,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : 'no_plan';
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/recurs.t b/cpan/ExtUtils-MakeMaker/t/recurs.t
+--- a/cpan/ExtUtils-MakeMaker/t/recurs.t
++++ b/cpan/ExtUtils-MakeMaker/t/recurs.t
+@@ -14,9 +14,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::Recurs;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 26);
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/several_authors.t b/cpan/ExtUtils-MakeMaker/t/several_authors.t
+--- a/cpan/ExtUtils-MakeMaker/t/several_authors.t
++++ b/cpan/ExtUtils-MakeMaker/t/several_authors.t
+@@ -13,9 +13,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::SAS;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 20);
+ use File::Path;
+diff --git a/cpan/ExtUtils-MakeMaker/t/unicode.t b/cpan/ExtUtils-MakeMaker/t/unicode.t
+--- a/cpan/ExtUtils-MakeMaker/t/unicode.t
++++ b/cpan/ExtUtils-MakeMaker/t/unicode.t
+@@ -6,16 +6,19 @@
+ chdir 't';
+ 
+ use strict;
++use ExtUtils::MM;
++use MakeMaker::Test::Utils qw(makefile_name make make_run run);
+ use Test::More;
+ use Config;
+ BEGIN {
+   plan skip_all => 'Need perlio and perl 5.8+.'
+     if $] < 5.008 or !$Config{useperlio};
++  plan skip_all => 'cross-compiling and make not available'
++    if !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'};
++
+   plan tests => 9;
+ }
+-use ExtUtils::MM;
+ use MakeMaker::Test::Setup::Unicode;
+-use MakeMaker::Test::Utils qw(makefile_name make_run run);
+ use TieOut;
+ 
+ my $MM = bless { DIR => ['.'] }, 'MM';
+
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/makemaker-unix.patch perl-5.26.1/cnf/diffs/perl5-5.24.2/makemaker-unix.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/makemaker-unix.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.2/makemaker-unix.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -37,7 +37,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+ }
+ 
+ BEGIN {
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.24.2/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.2/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.24.2/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.2/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.24.2/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.2/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.2/xconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
+-#   include "config.h"
++#   ifndef USE_CROSS_COMPILE
++#       include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* NOTE 1: that with gcc -std=c89 the __STDC_VERSION__ is *not* defined
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.24.3/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.3/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -252,7 +255,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/constant.patch perl-5.26.1/cnf/diffs/perl5-5.24.3/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.3/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/customized.patch perl-5.26.1/cnf/diffs/perl5-5.24.3/customized.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/customized.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.3/customized.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,42 @@
+Not really necessary to build perl, but porting/customized.t will check
+the sums. Doing this defeats the purpose of customized.dat, but it's not
+like there's much choice.
+
+Separated from Kid.pm and MM_Unix.pm patches to avoid dependence
+on patch ordering.
+
+--- a/t/porting/customized.dat
++++ b/t/porting/customized.dat
+@@ -17,12 +17,12 @@
+ Encode cpan/Encode/bin/unidump 715f47c2fcc661268f3c6cd3de0d27c72b745cd2
+ Encode cpan/Encode/Encode.pm e146861ff2e6aaa62defa4887eade68dd7b17c8e
+ Encode cpan/Encode/encoding.pm 51c19efc9bfe8467d6ae12a4654f6e7f980715bf
+-ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t a0369c919e216fb02767a637666bb4577ad79b02
++ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t 5cddb9664c43e53a4ce7a213601d6cff53e09d2d
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/bin/instmodsh 5bc04a0173b8b787f465271b6186220326ae8eef
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Command.pm e3a372e07392179711ea9972087c1105a2780fad
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Command/MM.pm b72721bd6aa9bf7ec328bda99a8fdb63cac6114d
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist.pm 0e1e4c25eddb999fec6c4dc66593f76db34cfd16
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm bfd2aa00ca4ed251f342e1d1ad704abbaf5a615e
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm 7758220c71c4ebf148635361e06211ffbbf85d85
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker.pm 5529ae3064365eafd99536621305d52f4ab31b45
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker/Config.pm bc88b275af73b8faac6abd59a9aad3f625925810
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker/FAQ.pod 062e5d14a803fbbec8d61803086a3d7997e8a473
+@@ -42,7 +42,7 @@
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_NW5.pm de777d7809c0d73e5d4622a29921731c7e5dff48
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_OS2.pm 01e8f08a82b5304009574e3ac0892b4066ff7639
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_QNX.pm 5340052b58557a6764f5ac9f8b807fefec404a06
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 3c3b93f431b0a51b9592b3d69624dbf5409f6f74
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 31fd278ce8f46e11211708e3091c6ebcbb4ea0c6
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_UWIN.pm 40397f4cd2d49700b80b4ef490da98add24c5b37
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_VMS.pm 147e97fbabb74841f0733dbd5d1b9f3fa51f87c1
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_VOS.pm 3f13ed7045ff3443bcb4dd6c95c98b9bd705820f
+@@ -51,7 +51,7 @@
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MY.pm 6fefe99045b64459905d4721f3a494d8d50f7ab9
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/testlib.pm 172778ad21c065a89cd270668eb9f99a7364b41c
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/cd.t 0a71fbd646a7be8358b07b6f64f838243cc0aef4
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/echo.t 37aec8f794c52e037540757eb5b2556f79419ff7
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/echo.t fcc4755df34f696ab515607382910a1dc96ec0b9
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/lib/MakeMaker/Test/NoXS.pm 371cdff1b2375017907cfbc9c8f4a31f5ad10582
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/prereq.t 53bda2c549fd13a6b6c13a070ca6bc79883081c0
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/vstrings.t 90035a2bdbf45f15b9c3196d072d7cba7e662871
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.24.3/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.3/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/findext.patch perl-5.26.1/cnf/diffs/perl5-5.24.3/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.3/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -116,10 +116,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.24.3/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.3/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -194,6 +192,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -377,7 +376,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -402,6 +402,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/liblist.patch perl-5.26.1/cnf/diffs/perl5-5.24.3/liblist.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/liblist.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.3/liblist.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,80 @@
+When deciding which libraries are available, the original Configure uses
+shaky heuristics to physically locate library files.
+This is a very very bad thing to do, *especially* when cross-compiling,
+as said heiristics are likely to locate the host libraries, not the target ones.
+
+The only real need for this test is to make sure it's safe to pass -llibrary
+to the compiler. So that's exactly what perl-cross does, pass -llibrary
+and see if it breaks things.
+
+Note this is a part of MakeMaker, and only applies to module Makefiles.
+
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
+@@ -19,9 +19,10 @@
+ use File::Spec;
+ 
+ sub ext {
+-    if    ( $^O eq 'VMS' )     { return &_vms_ext; }
+-    elsif ( $^O eq 'MSWin32' ) { return &_win32_ext; }
+-    else                       { return &_unix_os2_ext; }
++  if   ($Config{usemmldlt}){ return &_ld_ext;       }
++  elsif($^O eq 'VMS')      { return &_vms_ext;      }
++  elsif($^O eq 'MSWin32')  { return &_win32_ext;    }
++  else                     { return &_unix_os2_ext; }
+ }
+ 
+ sub _unix_os2_ext {
+@@ -641,4 +642,51 @@
+     wantarray ? ( $lib, '', $ldlib, '', ( $give_libs ? \@flibs : () ) ) : $lib;
+ }
+ 
++# A direct test for -l validity.
++# Because guessing real file names for -llib options when dealing
++# with a cross compiler is generally a BAD IDEA^tm.
++sub _ld_ext {
++    my($self,$potential_libs, $verbose, $give_libs) = @_;
++    $verbose ||= 0;
++
++    if ($^O =~ 'os2' and $Config{perllibs}) { 
++	# Dynamic libraries are not transitive, so we may need including
++	# the libraries linked against perl.dll again.
++
++	$potential_libs .= " " if $potential_libs;
++	$potential_libs .= $Config{perllibs};
++    }
++    return ("", "", "", "", ($give_libs ? [] : ())) unless $potential_libs;
++    warn "Potential libraries are '$potential_libs':\n" if $verbose;
++
++    my($ld)   = $Config{ld};
++    my($lddlflags)   = $Config{lddlflags};
++    my($libs) = defined $Config{perllibs} ? $Config{perllibs} : $Config{libs};
++
++    my $try = 'try_mm.c';
++    my $tryx = 'try_mm.x';
++    open(TRY, '>', $try) || die "Can't create MakeMaker test file $try: $!\n";
++    print TRY "int main(void) { return 0; }\n";
++    close(TRY);
++
++    my $testlibs = '';
++    my @testlibs = ();
++    foreach my $thislib (split ' ', $potential_libs) {
++        $testlibs = join(' ', @testlibs);
++	if($thislib =~ /^-L/) {
++		push(@testlibs, $thislib);
++		next
++	};
++	my $cmd = "$ld $lddlflags -o $tryx $try $testlibs $thislib >/dev/null 2>&1";
++	my $ret = system($cmd);
++	warn "Warning (mostly harmless): " . "No library found for $thislib\n" if $ret;
++	next if $ret;
++	push @testlibs, $thislib;
++    }
++    unlink($try);
++    unlink($tryx);
++
++    return (join(' ', @testlibs), '', join(' ', @testlibs), '');
++}
++
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/makemaker-test.patch perl-5.26.1/cnf/diffs/perl5-5.24.3/makemaker-test.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/makemaker-test.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.3/makemaker-test.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,159 @@
+fix EUMM 7.04 & 7.10_01
+
+see https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker/pull/178
+and https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker/pull/181
+both PR already merged.
+
+Signed-off-by: Francois Perrad <francois.perrad@gadz.org>
+
+diff --git a/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t b/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+--- a/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
++++ b/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+@@ -15,12 +15,13 @@
+ 
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+-use Test::More;
+ use Config;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+-    : (tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP));
++    : ();
++plan tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP);
+ 
+ my $Is_VMS = $^O eq 'VMS';
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/PL_FILES.t b/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
+--- a/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
++++ b/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
+@@ -11,9 +11,9 @@
+ use MakeMaker::Test::Setup::PL_FILES;
+ use MakeMaker::Test::Utils;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 9);
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/basic.t b/cpan/ExtUtils-MakeMaker/t/basic.t
+--- a/cpan/ExtUtils-MakeMaker/t/basic.t
++++ b/cpan/ExtUtils-MakeMaker/t/basic.t
+@@ -20,9 +20,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 171);
+ use File::Find;
+diff --git a/cpan/ExtUtils-MakeMaker/t/echo.t b/cpan/ExtUtils-MakeMaker/t/echo.t
+--- a/cpan/ExtUtils-MakeMaker/t/echo.t
++++ b/cpan/ExtUtils-MakeMaker/t/echo.t
+@@ -14,9 +14,9 @@
+ use File::Temp;
+ use Cwd 'abs_path';
+ 
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : ();
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/min_perl_version.t b/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
+--- a/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
++++ b/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
+@@ -13,9 +13,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::MPV;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 36);
+ use File::Path;
+diff --git a/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t b/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
+--- a/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
++++ b/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
+@@ -12,9 +12,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : 'no_plan';
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/recurs.t b/cpan/ExtUtils-MakeMaker/t/recurs.t
+--- a/cpan/ExtUtils-MakeMaker/t/recurs.t
++++ b/cpan/ExtUtils-MakeMaker/t/recurs.t
+@@ -14,9 +14,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::Recurs;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 26);
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/several_authors.t b/cpan/ExtUtils-MakeMaker/t/several_authors.t
+--- a/cpan/ExtUtils-MakeMaker/t/several_authors.t
++++ b/cpan/ExtUtils-MakeMaker/t/several_authors.t
+@@ -13,9 +13,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::SAS;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 20);
+ use File::Path;
+diff --git a/cpan/ExtUtils-MakeMaker/t/unicode.t b/cpan/ExtUtils-MakeMaker/t/unicode.t
+--- a/cpan/ExtUtils-MakeMaker/t/unicode.t
++++ b/cpan/ExtUtils-MakeMaker/t/unicode.t
+@@ -6,16 +6,19 @@
+ chdir 't';
+ 
+ use strict;
++use ExtUtils::MM;
++use MakeMaker::Test::Utils qw(makefile_name make make_run run);
+ use Test::More;
+ use Config;
+ BEGIN {
+   plan skip_all => 'Need perlio and perl 5.8+.'
+     if $] < 5.008 or !$Config{useperlio};
++  plan skip_all => 'cross-compiling and make not available'
++    if !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'};
++
+   plan tests => 9;
+ }
+-use ExtUtils::MM;
+ use MakeMaker::Test::Setup::Unicode;
+-use MakeMaker::Test::Utils qw(makefile_name make_run run);
+ use TieOut;
+ 
+ my $MM = bless { DIR => ['.'] }, 'MM';
+
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/makemaker-unix.patch perl-5.26.1/cnf/diffs/perl5-5.24.3/makemaker-unix.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/makemaker-unix.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.3/makemaker-unix.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -37,7 +37,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+ }
+ 
+ BEGIN {
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.24.3/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.3/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.24.3/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.3/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.24.3/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.3/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.3/xconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
+-#   include "config.h"
++#   ifndef USE_CROSS_COMPILE
++#       include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* NOTE 1: that with gcc -std=c89 the __STDC_VERSION__ is *not* defined
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.24.4/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.4/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -252,7 +255,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/constant.patch perl-5.26.1/cnf/diffs/perl5-5.24.4/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.4/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/customized.patch perl-5.26.1/cnf/diffs/perl5-5.24.4/customized.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/customized.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.4/customized.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,42 @@
+Not really necessary to build perl, but porting/customized.t will check
+the sums. Doing this defeats the purpose of customized.dat, but it's not
+like there's much choice.
+
+Separated from Kid.pm and MM_Unix.pm patches to avoid dependence
+on patch ordering.
+
+--- a/t/porting/customized.dat
++++ b/t/porting/customized.dat
+@@ -17,12 +17,12 @@
+ Encode cpan/Encode/bin/unidump 715f47c2fcc661268f3c6cd3de0d27c72b745cd2
+ Encode cpan/Encode/Encode.pm e146861ff2e6aaa62defa4887eade68dd7b17c8e
+ Encode cpan/Encode/encoding.pm 51c19efc9bfe8467d6ae12a4654f6e7f980715bf
+-ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t a0369c919e216fb02767a637666bb4577ad79b02
++ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t 5cddb9664c43e53a4ce7a213601d6cff53e09d2d
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/bin/instmodsh 5bc04a0173b8b787f465271b6186220326ae8eef
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Command.pm e3a372e07392179711ea9972087c1105a2780fad
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Command/MM.pm b72721bd6aa9bf7ec328bda99a8fdb63cac6114d
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist.pm 0e1e4c25eddb999fec6c4dc66593f76db34cfd16
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm bfd2aa00ca4ed251f342e1d1ad704abbaf5a615e
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm 7758220c71c4ebf148635361e06211ffbbf85d85
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker.pm 5529ae3064365eafd99536621305d52f4ab31b45
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker/Config.pm bc88b275af73b8faac6abd59a9aad3f625925810
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker/FAQ.pod 062e5d14a803fbbec8d61803086a3d7997e8a473
+@@ -42,7 +42,7 @@
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_NW5.pm de777d7809c0d73e5d4622a29921731c7e5dff48
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_OS2.pm 01e8f08a82b5304009574e3ac0892b4066ff7639
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_QNX.pm 5340052b58557a6764f5ac9f8b807fefec404a06
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 3c3b93f431b0a51b9592b3d69624dbf5409f6f74
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm 31fd278ce8f46e11211708e3091c6ebcbb4ea0c6
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_UWIN.pm 40397f4cd2d49700b80b4ef490da98add24c5b37
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_VMS.pm 147e97fbabb74841f0733dbd5d1b9f3fa51f87c1
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_VOS.pm 3f13ed7045ff3443bcb4dd6c95c98b9bd705820f
+@@ -51,7 +51,7 @@
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/MY.pm 6fefe99045b64459905d4721f3a494d8d50f7ab9
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/lib/ExtUtils/testlib.pm 172778ad21c065a89cd270668eb9f99a7364b41c
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/cd.t 0a71fbd646a7be8358b07b6f64f838243cc0aef4
+-ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/echo.t 37aec8f794c52e037540757eb5b2556f79419ff7
++ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/echo.t fcc4755df34f696ab515607382910a1dc96ec0b9
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/lib/MakeMaker/Test/NoXS.pm 371cdff1b2375017907cfbc9c8f4a31f5ad10582
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/prereq.t 53bda2c549fd13a6b6c13a070ca6bc79883081c0
+ ExtUtils::MakeMaker cpan/ExtUtils-MakeMaker/t/vstrings.t 90035a2bdbf45f15b9c3196d072d7cba7e662871
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.24.4/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.4/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/findext.patch perl-5.26.1/cnf/diffs/perl5-5.24.4/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.4/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -116,10 +116,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.24.4/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.4/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -194,6 +192,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -377,7 +376,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -402,6 +402,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/liblist.patch perl-5.26.1/cnf/diffs/perl5-5.24.4/liblist.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/liblist.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.4/liblist.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,80 @@
+When deciding which libraries are available, the original Configure uses
+shaky heuristics to physically locate library files.
+This is a very very bad thing to do, *especially* when cross-compiling,
+as said heiristics are likely to locate the host libraries, not the target ones.
+
+The only real need for this test is to make sure it's safe to pass -llibrary
+to the compiler. So that's exactly what perl-cross does, pass -llibrary
+and see if it breaks things.
+
+Note this is a part of MakeMaker, and only applies to module Makefiles.
+
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
+@@ -19,9 +19,10 @@
+ use File::Spec;
+ 
+ sub ext {
+-    if    ( $^O eq 'VMS' )     { return &_vms_ext; }
+-    elsif ( $^O eq 'MSWin32' ) { return &_win32_ext; }
+-    else                       { return &_unix_os2_ext; }
++  if   ($Config{usemmldlt}){ return &_ld_ext;       }
++  elsif($^O eq 'VMS')      { return &_vms_ext;      }
++  elsif($^O eq 'MSWin32')  { return &_win32_ext;    }
++  else                     { return &_unix_os2_ext; }
+ }
+ 
+ sub _unix_os2_ext {
+@@ -641,4 +642,51 @@
+     wantarray ? ( $lib, '', $ldlib, '', ( $give_libs ? \@flibs : () ) ) : $lib;
+ }
+ 
++# A direct test for -l validity.
++# Because guessing real file names for -llib options when dealing
++# with a cross compiler is generally a BAD IDEA^tm.
++sub _ld_ext {
++    my($self,$potential_libs, $verbose, $give_libs) = @_;
++    $verbose ||= 0;
++
++    if ($^O =~ 'os2' and $Config{perllibs}) { 
++	# Dynamic libraries are not transitive, so we may need including
++	# the libraries linked against perl.dll again.
++
++	$potential_libs .= " " if $potential_libs;
++	$potential_libs .= $Config{perllibs};
++    }
++    return ("", "", "", "", ($give_libs ? [] : ())) unless $potential_libs;
++    warn "Potential libraries are '$potential_libs':\n" if $verbose;
++
++    my($ld)   = $Config{ld};
++    my($lddlflags)   = $Config{lddlflags};
++    my($libs) = defined $Config{perllibs} ? $Config{perllibs} : $Config{libs};
++
++    my $try = 'try_mm.c';
++    my $tryx = 'try_mm.x';
++    open(TRY, '>', $try) || die "Can't create MakeMaker test file $try: $!\n";
++    print TRY "int main(void) { return 0; }\n";
++    close(TRY);
++
++    my $testlibs = '';
++    my @testlibs = ();
++    foreach my $thislib (split ' ', $potential_libs) {
++        $testlibs = join(' ', @testlibs);
++	if($thislib =~ /^-L/) {
++		push(@testlibs, $thislib);
++		next
++	};
++	my $cmd = "$ld $lddlflags -o $tryx $try $testlibs $thislib >/dev/null 2>&1";
++	my $ret = system($cmd);
++	warn "Warning (mostly harmless): " . "No library found for $thislib\n" if $ret;
++	next if $ret;
++	push @testlibs, $thislib;
++    }
++    unlink($try);
++    unlink($tryx);
++
++    return (join(' ', @testlibs), '', join(' ', @testlibs), '');
++}
++
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/makemaker-test.patch perl-5.26.1/cnf/diffs/perl5-5.24.4/makemaker-test.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/makemaker-test.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.4/makemaker-test.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,159 @@
+fix EUMM 7.04 & 7.10_01
+
+see https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker/pull/178
+and https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker/pull/181
+both PR already merged.
+
+Signed-off-by: Francois Perrad <francois.perrad@gadz.org>
+
+diff --git a/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t b/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+--- a/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
++++ b/cpan/ExtUtils-MakeMaker/t/INSTALL_BASE.t
+@@ -15,12 +15,13 @@
+ 
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+-use Test::More;
+ use Config;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+-    : (tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP));
++    : ();
++plan tests => 3 + $CLEANUP + @INSTDIRS * (15 + $CLEANUP);
+ 
+ my $Is_VMS = $^O eq 'VMS';
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/PL_FILES.t b/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
+--- a/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
++++ b/cpan/ExtUtils-MakeMaker/t/PL_FILES.t
+@@ -11,9 +11,9 @@
+ use MakeMaker::Test::Setup::PL_FILES;
+ use MakeMaker::Test::Utils;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 9);
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/basic.t b/cpan/ExtUtils-MakeMaker/t/basic.t
+--- a/cpan/ExtUtils-MakeMaker/t/basic.t
++++ b/cpan/ExtUtils-MakeMaker/t/basic.t
+@@ -20,9 +20,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 171);
+ use File::Find;
+diff --git a/cpan/ExtUtils-MakeMaker/t/echo.t b/cpan/ExtUtils-MakeMaker/t/echo.t
+--- a/cpan/ExtUtils-MakeMaker/t/echo.t
++++ b/cpan/ExtUtils-MakeMaker/t/echo.t
+@@ -14,9 +14,9 @@
+ use File::Temp;
+ use Cwd 'abs_path';
+ 
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : ();
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/min_perl_version.t b/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
+--- a/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
++++ b/cpan/ExtUtils-MakeMaker/t/min_perl_version.t
+@@ -13,9 +13,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::MPV;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 36);
+ use File::Path;
+diff --git a/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t b/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
+--- a/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
++++ b/cpan/ExtUtils-MakeMaker/t/pm_to_blib.t
+@@ -12,9 +12,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::BFD;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : 'no_plan';
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/recurs.t b/cpan/ExtUtils-MakeMaker/t/recurs.t
+--- a/cpan/ExtUtils-MakeMaker/t/recurs.t
++++ b/cpan/ExtUtils-MakeMaker/t/recurs.t
+@@ -14,9 +14,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::Recurs;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 26);
+ 
+diff --git a/cpan/ExtUtils-MakeMaker/t/several_authors.t b/cpan/ExtUtils-MakeMaker/t/several_authors.t
+--- a/cpan/ExtUtils-MakeMaker/t/several_authors.t
++++ b/cpan/ExtUtils-MakeMaker/t/several_authors.t
+@@ -13,9 +13,9 @@
+ use MakeMaker::Test::Utils;
+ use MakeMaker::Test::Setup::SAS;
+ use Config;
+-use Test::More;
+ use ExtUtils::MM;
+-plan !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
++use Test::More
++    !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'}
+     ? (skip_all => "cross-compiling and make not available")
+     : (tests => 20);
+ use File::Path;
+diff --git a/cpan/ExtUtils-MakeMaker/t/unicode.t b/cpan/ExtUtils-MakeMaker/t/unicode.t
+--- a/cpan/ExtUtils-MakeMaker/t/unicode.t
++++ b/cpan/ExtUtils-MakeMaker/t/unicode.t
+@@ -6,16 +6,19 @@
+ chdir 't';
+ 
+ use strict;
++use ExtUtils::MM;
++use MakeMaker::Test::Utils qw(makefile_name make make_run run);
+ use Test::More;
+ use Config;
+ BEGIN {
+   plan skip_all => 'Need perlio and perl 5.8+.'
+     if $] < 5.008 or !$Config{useperlio};
++  plan skip_all => 'cross-compiling and make not available'
++    if !MM->can_run(make()) && $ENV{PERL_CORE} && $Config{'usecrosscompile'};
++
+   plan tests => 9;
+ }
+-use ExtUtils::MM;
+ use MakeMaker::Test::Setup::Unicode;
+-use MakeMaker::Test::Utils qw(makefile_name make_run run);
+ use TieOut;
+ 
+ my $MM = bless { DIR => ['.'] }, 'MM';
+
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/makemaker-unix.patch perl-5.26.1/cnf/diffs/perl5-5.24.4/makemaker-unix.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/makemaker-unix.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.4/makemaker-unix.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -37,7 +37,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+ }
+ 
+ BEGIN {
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.24.4/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.4/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.24.4/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.4/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.24.4/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.24.4/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.24.4/xconfig.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,19 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
+-#   include "config.h"
++#   ifndef USE_CROSS_COMPILE
++#       include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* NOTE 1: that with gcc -std=c89 the __STDC_VERSION__ is *not* defined
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.26.0/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.0/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -252,7 +255,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/constant.patch perl-5.26.1/cnf/diffs/perl5-5.26.0/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.0/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/customized.patch perl-5.26.1/cnf/diffs/perl5-5.26.0/customized.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/customized.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.0/customized.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,16 @@
+Not really necessary to build perl, but porting/customized.t will check
+the sums. Doing this defeats the purpose of customized.dat, but it's not
+like there's much choice.
+
+Separated from other patches to avoid dependence on patch ordering.
+
+--- a/t/porting/customized.dat
++++ b/t/porting/customized.dat
+@@ -1,6 +1,6 @@
+ Digest cpan/Digest/Digest.pm 43f7f544cb11842b2f55c73e28930da50774e081
+ Encode cpan/Encode/Unicode/Unicode.pm 9749692c67f7d69083034de9184a93f070ab4799
+-ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t a0369c919e216fb02767a637666bb4577ad79b02
++ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t 5cddb9664c43e53a4ce7a213601d6cff53e09d2d
+ File::Path cpan/File-Path/lib/File/Path.pm fd8ce4420a0c113d3f47dd3223859743655c1da8
+ File::Path cpan/File-Path/t/Path_win32.t 94b9276557ce7f80b91f6fd9bfa7a0cd9bf9683e
+ JSON::PP cpan/JSON-PP/bin/json_pp a7b8de6c201ef177ee82624ee4ca6a47cc1a3b4f
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.26.0/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.0/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/findext.patch perl-5.26.1/cnf/diffs/perl5-5.26.0/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.0/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -116,10 +116,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.26.0/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.0/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -194,6 +192,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -377,7 +376,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -402,6 +402,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/liblist.patch perl-5.26.1/cnf/diffs/perl5-5.26.0/liblist.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/liblist.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.0/liblist.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,80 @@
+When deciding which libraries are available, the original Configure uses
+shaky heuristics to physically locate library files.
+This is a very very bad thing to do, *especially* when cross-compiling,
+as said heiristics are likely to locate the host libraries, not the target ones.
+
+The only real need for this test is to make sure it's safe to pass -llibrary
+to the compiler. So that's exactly what perl-cross does, pass -llibrary
+and see if it breaks things.
+
+Note this is a part of MakeMaker, and only applies to module Makefiles.
+
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
+@@ -20,9 +20,10 @@
+ use File::Spec;
+ 
+ sub ext {
+-    if    ( $^O eq 'VMS' )     { return &_vms_ext; }
+-    elsif ( $^O eq 'MSWin32' ) { return &_win32_ext; }
+-    else                       { return &_unix_os2_ext; }
++  if   ($Config{usemmldlt}){ return &_ld_ext;       }
++  elsif($^O eq 'VMS')      { return &_vms_ext;      }
++  elsif($^O eq 'MSWin32')  { return &_win32_ext;    }
++  else                     { return &_unix_os2_ext; }
+ }
+ 
+ sub _unix_os2_ext {
+@@ -642,4 +643,51 @@
+     wantarray ? ( $lib, '', $ldlib, '', ( $give_libs ? \@flibs : () ) ) : $lib;
+ }
+ 
++# A direct test for -l validity.
++# Because guessing real file names for -llib options when dealing
++# with a cross compiler is generally a BAD IDEA^tm.
++sub _ld_ext {
++    my($self,$potential_libs, $verbose, $give_libs) = @_;
++    $verbose ||= 0;
++
++    if ($^O =~ 'os2' and $Config{perllibs}) { 
++	# Dynamic libraries are not transitive, so we may need including
++	# the libraries linked against perl.dll again.
++
++	$potential_libs .= " " if $potential_libs;
++	$potential_libs .= $Config{perllibs};
++    }
++    return ("", "", "", "", ($give_libs ? [] : ())) unless $potential_libs;
++    warn "Potential libraries are '$potential_libs':\n" if $verbose;
++
++    my($ld)   = $Config{ld};
++    my($lddlflags)   = $Config{lddlflags};
++    my($libs) = defined $Config{perllibs} ? $Config{perllibs} : $Config{libs};
++
++    my $try = 'try_mm.c';
++    my $tryx = 'try_mm.x';
++    open(TRY, '>', $try) || die "Can't create MakeMaker test file $try: $!\n";
++    print TRY "int main(void) { return 0; }\n";
++    close(TRY);
++
++    my $testlibs = '';
++    my @testlibs = ();
++    foreach my $thislib (split ' ', $potential_libs) {
++        $testlibs = join(' ', @testlibs);
++	if($thislib =~ /^-L/) {
++		push(@testlibs, $thislib);
++		next
++	};
++	my $cmd = "$ld $lddlflags -o $tryx $try $testlibs $thislib >/dev/null 2>&1";
++	my $ret = system($cmd);
++	warn "Warning (mostly harmless): " . "No library found for $thislib\n" if $ret;
++	next if $ret;
++	push @testlibs, $thislib;
++    }
++    unlink($try);
++    unlink($tryx);
++
++    return (join(' ', @testlibs), '', join(' ', @testlibs), '');
++}
++
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/makemaker.patch perl-5.26.1/cnf/diffs/perl5-5.26.0/makemaker.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/makemaker.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.0/makemaker.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -36,7 +36,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+ }
+ 
+ BEGIN {
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.26.0/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.0/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.26.0/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.0/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/test-commonsense.patch perl-5.26.1/cnf/diffs/perl5-5.26.0/test-commonsense.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/test-commonsense.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.0/test-commonsense.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,13 @@
+In perl-cross it's File-Glob not File/Glob.
+
+--- a/t/lib/commonsense.t
++++ b/t/lib/commonsense.t
+@@ -18,7 +18,7 @@
+   BAIL_OUT("Perl configured without IO module");
+ }
+ # hey, DOS users do not need this kind of common sense ;-)
+-if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile\/Glob\b/) ){
++if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile.Glob\b/) ){
+   BAIL_OUT("Perl configured without File::Glob module");
+ }
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.26.0/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.0/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.0/xconfig.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,18 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
++#   ifndef USE_CROSS_COMPILE
+ #   include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* this is used for functions which take a depth trailing
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.26.1/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.1/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -252,7 +255,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/constant.patch perl-5.26.1/cnf/diffs/perl5-5.26.1/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.1/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/customized.patch perl-5.26.1/cnf/diffs/perl5-5.26.1/customized.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/customized.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.1/customized.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,16 @@
+Not really necessary to build perl, but porting/customized.t will check
+the sums. Doing this defeats the purpose of customized.dat, but it's not
+like there's much choice.
+
+Separated from other patches to avoid dependence on patch ordering.
+
+--- a/t/porting/customized.dat
++++ b/t/porting/customized.dat
+@@ -1,6 +1,6 @@
+ Digest cpan/Digest/Digest.pm 43f7f544cb11842b2f55c73e28930da50774e081
+ Encode cpan/Encode/Unicode/Unicode.pm 9749692c67f7d69083034de9184a93f070ab4799
+-ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t a0369c919e216fb02767a637666bb4577ad79b02
++ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t 2701eede28250aa192059dbc59ea63a1d7217185
+ File::Path cpan/File-Path/lib/File/Path.pm fd8ce4420a0c113d3f47dd3223859743655c1da8
+ File::Path cpan/File-Path/t/Path_win32.t 94b9276557ce7f80b91f6fd9bfa7a0cd9bf9683e
+ JSON::PP cpan/JSON-PP/bin/json_pp a7b8de6c201ef177ee82624ee4ca6a47cc1a3b4f
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.26.1/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.1/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/findext.patch perl-5.26.1/cnf/diffs/perl5-5.26.1/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.1/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -116,10 +116,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.26.1/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.1/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -194,6 +192,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -377,7 +376,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -402,6 +402,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/liblist.patch perl-5.26.1/cnf/diffs/perl5-5.26.1/liblist.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/liblist.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.1/liblist.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,80 @@
+When deciding which libraries are available, the original Configure uses
+shaky heuristics to physically locate library files.
+This is a very very bad thing to do, *especially* when cross-compiling,
+as said heiristics are likely to locate the host libraries, not the target ones.
+
+The only real need for this test is to make sure it's safe to pass -llibrary
+to the compiler. So that's exactly what perl-cross does, pass -llibrary
+and see if it breaks things.
+
+Note this is a part of MakeMaker, and only applies to module Makefiles.
+
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
+@@ -20,9 +20,10 @@
+ use File::Spec;
+ 
+ sub ext {
+-    if    ( $^O eq 'VMS' )     { return &_vms_ext; }
+-    elsif ( $^O eq 'MSWin32' ) { return &_win32_ext; }
+-    else                       { return &_unix_os2_ext; }
++  if   ($Config{usemmldlt}){ return &_ld_ext;       }
++  elsif($^O eq 'VMS')      { return &_vms_ext;      }
++  elsif($^O eq 'MSWin32')  { return &_win32_ext;    }
++  else                     { return &_unix_os2_ext; }
+ }
+ 
+ sub _unix_os2_ext {
+@@ -642,4 +643,51 @@
+     wantarray ? ( $lib, '', $ldlib, '', ( $give_libs ? \@flibs : () ) ) : $lib;
+ }
+ 
++# A direct test for -l validity.
++# Because guessing real file names for -llib options when dealing
++# with a cross compiler is generally a BAD IDEA^tm.
++sub _ld_ext {
++    my($self,$potential_libs, $verbose, $give_libs) = @_;
++    $verbose ||= 0;
++
++    if ($^O =~ 'os2' and $Config{perllibs}) { 
++	# Dynamic libraries are not transitive, so we may need including
++	# the libraries linked against perl.dll again.
++
++	$potential_libs .= " " if $potential_libs;
++	$potential_libs .= $Config{perllibs};
++    }
++    return ("", "", "", "", ($give_libs ? [] : ())) unless $potential_libs;
++    warn "Potential libraries are '$potential_libs':\n" if $verbose;
++
++    my($ld)   = $Config{ld};
++    my($lddlflags)   = $Config{lddlflags};
++    my($libs) = defined $Config{perllibs} ? $Config{perllibs} : $Config{libs};
++
++    my $try = 'try_mm.c';
++    my $tryx = 'try_mm.x';
++    open(TRY, '>', $try) || die "Can't create MakeMaker test file $try: $!\n";
++    print TRY "int main(void) { return 0; }\n";
++    close(TRY);
++
++    my $testlibs = '';
++    my @testlibs = ();
++    foreach my $thislib (split ' ', $potential_libs) {
++        $testlibs = join(' ', @testlibs);
++	if($thislib =~ /^-L/) {
++		push(@testlibs, $thislib);
++		next
++	};
++	my $cmd = "$ld $lddlflags -o $tryx $try $testlibs $thislib >/dev/null 2>&1";
++	my $ret = system($cmd);
++	warn "Warning (mostly harmless): " . "No library found for $thislib\n" if $ret;
++	next if $ret;
++	push @testlibs, $thislib;
++    }
++    unlink($try);
++    unlink($tryx);
++
++    return (join(' ', @testlibs), '', join(' ', @testlibs), '');
++}
++
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/makemaker.patch perl-5.26.1/cnf/diffs/perl5-5.26.1/makemaker.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/makemaker.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.1/makemaker.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -36,7 +36,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+ }
+ 
+ BEGIN {
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.26.1/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.1/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.26.1/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.1/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/test-commonsense.patch perl-5.26.1/cnf/diffs/perl5-5.26.1/test-commonsense.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/test-commonsense.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.1/test-commonsense.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,13 @@
+In perl-cross it's File-Glob not File/Glob.
+
+--- a/t/lib/commonsense.t
++++ b/t/lib/commonsense.t
+@@ -18,7 +18,7 @@
+   BAIL_OUT("Perl configured without IO module");
+ }
+ # hey, DOS users do not need this kind of common sense ;-)
+-if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile\/Glob\b/) ){
++if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile.Glob\b/) ){
+   BAIL_OUT("Perl configured without File::Glob module");
+ }
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.26.1/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.1/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.1/xconfig.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,18 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
++#   ifndef USE_CROSS_COMPILE
+ #   include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* this is used for functions which take a depth trailing
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.26.2/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.2/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -252,7 +255,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/constant.patch perl-5.26.1/cnf/diffs/perl5-5.26.2/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.2/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/customized.patch perl-5.26.1/cnf/diffs/perl5-5.26.2/customized.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/customized.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.2/customized.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,16 @@
+Not really necessary to build perl, but porting/customized.t will check
+the sums. Doing this defeats the purpose of customized.dat, but it's not
+like there's much choice.
+
+Separated from other patches to avoid dependence on patch ordering.
+
+--- a/t/porting/customized.dat
++++ b/t/porting/customized.dat
+@@ -1,6 +1,6 @@
+ Digest cpan/Digest/Digest.pm 43f7f544cb11842b2f55c73e28930da50774e081
+ Encode cpan/Encode/Unicode/Unicode.pm 9749692c67f7d69083034de9184a93f070ab4799
+-ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t a0369c919e216fb02767a637666bb4577ad79b02
++ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t 2701eede28250aa192059dbc59ea63a1d7217185
+ File::Path cpan/File-Path/lib/File/Path.pm fd8ce4420a0c113d3f47dd3223859743655c1da8
+ File::Path cpan/File-Path/t/Path_win32.t 94b9276557ce7f80b91f6fd9bfa7a0cd9bf9683e
+ JSON::PP cpan/JSON-PP/bin/json_pp a7b8de6c201ef177ee82624ee4ca6a47cc1a3b4f
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.26.2/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.2/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/findext.patch perl-5.26.1/cnf/diffs/perl5-5.26.2/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.2/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -116,10 +116,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.26.2/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.2/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -194,6 +192,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -377,7 +376,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -402,6 +402,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/liblist.patch perl-5.26.1/cnf/diffs/perl5-5.26.2/liblist.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/liblist.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.2/liblist.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,80 @@
+When deciding which libraries are available, the original Configure uses
+shaky heuristics to physically locate library files.
+This is a very very bad thing to do, *especially* when cross-compiling,
+as said heiristics are likely to locate the host libraries, not the target ones.
+
+The only real need for this test is to make sure it's safe to pass -llibrary
+to the compiler. So that's exactly what perl-cross does, pass -llibrary
+and see if it breaks things.
+
+Note this is a part of MakeMaker, and only applies to module Makefiles.
+
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
+@@ -20,9 +20,10 @@
+ use File::Spec;
+ 
+ sub ext {
+-    if    ( $^O eq 'VMS' )     { return &_vms_ext; }
+-    elsif ( $^O eq 'MSWin32' ) { return &_win32_ext; }
+-    else                       { return &_unix_os2_ext; }
++  if   ($Config{usemmldlt}){ return &_ld_ext;       }
++  elsif($^O eq 'VMS')      { return &_vms_ext;      }
++  elsif($^O eq 'MSWin32')  { return &_win32_ext;    }
++  else                     { return &_unix_os2_ext; }
+ }
+ 
+ sub _unix_os2_ext {
+@@ -642,4 +643,51 @@
+     wantarray ? ( $lib, '', $ldlib, '', ( $give_libs ? \@flibs : () ) ) : $lib;
+ }
+ 
++# A direct test for -l validity.
++# Because guessing real file names for -llib options when dealing
++# with a cross compiler is generally a BAD IDEA^tm.
++sub _ld_ext {
++    my($self,$potential_libs, $verbose, $give_libs) = @_;
++    $verbose ||= 0;
++
++    if ($^O =~ 'os2' and $Config{perllibs}) { 
++	# Dynamic libraries are not transitive, so we may need including
++	# the libraries linked against perl.dll again.
++
++	$potential_libs .= " " if $potential_libs;
++	$potential_libs .= $Config{perllibs};
++    }
++    return ("", "", "", "", ($give_libs ? [] : ())) unless $potential_libs;
++    warn "Potential libraries are '$potential_libs':\n" if $verbose;
++
++    my($ld)   = $Config{ld};
++    my($lddlflags)   = $Config{lddlflags};
++    my($libs) = defined $Config{perllibs} ? $Config{perllibs} : $Config{libs};
++
++    my $try = 'try_mm.c';
++    my $tryx = 'try_mm.x';
++    open(TRY, '>', $try) || die "Can't create MakeMaker test file $try: $!\n";
++    print TRY "int main(void) { return 0; }\n";
++    close(TRY);
++
++    my $testlibs = '';
++    my @testlibs = ();
++    foreach my $thislib (split ' ', $potential_libs) {
++        $testlibs = join(' ', @testlibs);
++	if($thislib =~ /^-L/) {
++		push(@testlibs, $thislib);
++		next
++	};
++	my $cmd = "$ld $lddlflags -o $tryx $try $testlibs $thislib >/dev/null 2>&1";
++	my $ret = system($cmd);
++	warn "Warning (mostly harmless): " . "No library found for $thislib\n" if $ret;
++	next if $ret;
++	push @testlibs, $thislib;
++    }
++    unlink($try);
++    unlink($tryx);
++
++    return (join(' ', @testlibs), '', join(' ', @testlibs), '');
++}
++
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/makemaker.patch perl-5.26.1/cnf/diffs/perl5-5.26.2/makemaker.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/makemaker.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.2/makemaker.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -36,7 +36,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+ }
+ 
+ BEGIN {
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.26.2/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.2/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.26.2/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.2/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/test-commonsense.patch perl-5.26.1/cnf/diffs/perl5-5.26.2/test-commonsense.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/test-commonsense.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.2/test-commonsense.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,13 @@
+In perl-cross it's File-Glob not File/Glob.
+
+--- a/t/lib/commonsense.t
++++ b/t/lib/commonsense.t
+@@ -18,7 +18,7 @@
+   BAIL_OUT("Perl configured without IO module");
+ }
+ # hey, DOS users do not need this kind of common sense ;-)
+-if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile\/Glob\b/) ){
++if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile.Glob\b/) ){
+   BAIL_OUT("Perl configured without File::Glob module");
+ }
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.26.2/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.26.2/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.26.2/xconfig.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,18 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
++#   ifndef USE_CROSS_COMPILE
+ #   include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* this is used for functions which take a depth trailing
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.27.10/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.10/configpm.patch	2018-01-22 18:00:30.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -268,7 +271,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/constant.patch perl-5.26.1/cnf/diffs/perl5-5.27.10/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.10/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.27.10/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.10/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/findext.patch perl-5.26.1/cnf/diffs/perl5-5.27.10/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.10/findext.patch	2018-03-26 06:15:46.000000000 -0500
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -115,10 +115,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.27.10/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.10/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -194,6 +192,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -377,7 +376,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -402,6 +402,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/liblist.patch perl-5.26.1/cnf/diffs/perl5-5.27.10/liblist.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/liblist.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.10/liblist.patch	2018-03-26 06:16:13.000000000 -0500
@@ -0,0 +1,80 @@
+When deciding which libraries are available, the original Configure uses
+shaky heuristics to physically locate library files.
+This is a very very bad thing to do, *especially* when cross-compiling,
+as said heiristics are likely to locate the host libraries, not the target ones.
+
+The only real need for this test is to make sure it's safe to pass -llibrary
+to the compiler. So that's exactly what perl-cross does, pass -llibrary
+and see if it breaks things.
+
+Note this is a part of MakeMaker, and only applies to module Makefiles.
+
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
+@@ -20,9 +20,10 @@
+ use File::Spec;
+ 
+ sub ext {
+-    if    ( $^O eq 'VMS' )     { return &_vms_ext; }
+-    elsif ( $^O eq 'MSWin32' ) { return &_win32_ext; }
+-    else                       { return &_unix_os2_ext; }
++  if   ($Config{usemmldlt}){ return &_ld_ext;       }
++  elsif($^O eq 'VMS')      { return &_vms_ext;      }
++  elsif($^O eq 'MSWin32')  { return &_win32_ext;    }
++  else                     { return &_unix_os2_ext; }
+ }
+ 
+ sub _unix_os2_ext {
+@@ -648,4 +649,51 @@
+     wantarray ? ( $lib, '', $ldlib, '', ( $give_libs ? \@flibs : () ) ) : $lib;
+ }
+ 
++# A direct test for -l validity.
++# Because guessing real file names for -llib options when dealing
++# with a cross compiler is generally a BAD IDEA^tm.
++sub _ld_ext {
++    my($self,$potential_libs, $verbose, $give_libs) = @_;
++    $verbose ||= 0;
++
++    if ($^O =~ 'os2' and $Config{perllibs}) { 
++	# Dynamic libraries are not transitive, so we may need including
++	# the libraries linked against perl.dll again.
++
++	$potential_libs .= " " if $potential_libs;
++	$potential_libs .= $Config{perllibs};
++    }
++    return ("", "", "", "", ($give_libs ? [] : ())) unless $potential_libs;
++    warn "Potential libraries are '$potential_libs':\n" if $verbose;
++
++    my($ld)   = $Config{ld};
++    my($lddlflags)   = $Config{lddlflags};
++    my($libs) = defined $Config{perllibs} ? $Config{perllibs} : $Config{libs};
++
++    my $try = 'try_mm.c';
++    my $tryx = 'try_mm.x';
++    open(TRY, '>', $try) || die "Can't create MakeMaker test file $try: $!\n";
++    print TRY "int main(void) { return 0; }\n";
++    close(TRY);
++
++    my $testlibs = '';
++    my @testlibs = ();
++    foreach my $thislib (split ' ', $potential_libs) {
++        $testlibs = join(' ', @testlibs);
++	if($thislib =~ /^-L/) {
++		push(@testlibs, $thislib);
++		next
++	};
++	my $cmd = "$ld $lddlflags -o $tryx $try $testlibs $thislib >/dev/null 2>&1";
++	my $ret = system($cmd);
++	warn "Warning (mostly harmless): " . "No library found for $thislib\n" if $ret;
++	next if $ret;
++	push @testlibs, $thislib;
++    }
++    unlink($try);
++    unlink($tryx);
++
++    return (join(' ', @testlibs), '', join(' ', @testlibs), '');
++}
++
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/makemaker.patch perl-5.26.1/cnf/diffs/perl5-5.27.10/makemaker.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/makemaker.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.10/makemaker.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -36,7 +36,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+ }
+ 
+ BEGIN {
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.27.10/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.10/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.27.10/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.10/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/test-commonsense.patch perl-5.26.1/cnf/diffs/perl5-5.27.10/test-commonsense.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/test-commonsense.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.10/test-commonsense.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,13 @@
+In perl-cross it's File-Glob not File/Glob.
+
+--- a/t/lib/commonsense.t
++++ b/t/lib/commonsense.t
+@@ -18,7 +18,7 @@
+   BAIL_OUT("Perl configured without IO module");
+ }
+ # hey, DOS users do not need this kind of common sense ;-)
+-if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile\/Glob\b/) ){
++if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile.Glob\b/) ){
+   BAIL_OUT("Perl configured without File::Glob module");
+ }
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.27.10/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.10/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.10/xconfig.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,32 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
++#   ifndef USE_CROSS_COMPILE
+ #   include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* this is used for functions which take a depth trailing
+--- a/perl_langinfo.h
++++ b/perl_langinfo.h
+@@ -4,7 +4,11 @@
+ #ifndef PERL_LANGINFO_H
+ #define PERL_LANGINFO_H 1
+ 
++#ifdef USE_CROSS_COMPILE
++#include "xconfig.h"
++#else
+ #include "config.h"
++#endif
+ 
+ #if defined(HAS_NL_LANGINFO) && defined(I_LANGINFO)
+ #   include <langinfo.h>
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.27.4/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.4/configpm.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -252,7 +255,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/constant.patch perl-5.26.1/cnf/diffs/perl5-5.27.4/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.4/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/customized.patch perl-5.26.1/cnf/diffs/perl5-5.27.4/customized.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/customized.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.4/customized.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,15 @@
+Not really necessary to build perl, but porting/customized.t will check
+the sums. Doing this defeats the purpose of customized.dat, but it's not
+like there's much choice.
+
+Separated from other patches to avoid dependence on patch ordering.
+
+--- a/t/porting/customized.dat
++++ b/t/porting/customized.dat
+@@ -1,5 +1,5 @@
+ Digest cpan/Digest/Digest.pm 43f7f544cb11842b2f55c73e28930da50774e081
+-ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t a0369c919e216fb02767a637666bb4577ad79b02
++ExtUtils::Constant cpan/ExtUtils-Constant/t/Constant.t 5cddb9664c43e53a4ce7a213601d6cff53e09d2d
+ Locale::Maketext::Simple cpan/Locale-Maketext-Simple/lib/Locale/Maketext/Simple.pm 57ed38905791a17c150210cd6f42ead22a7707b6
+ Math::Complex cpan/Math-Complex/lib/Math/Complex.pm 198ea6c6c584f5ea79a0fd7e9d411d0878f3b2af
+ Math::Complex cpan/Math-Complex/t/Complex.t 4f307ed6fc59f1e5fb0e6b11103fc631b6bdb335
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.27.4/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.4/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/findext.patch perl-5.26.1/cnf/diffs/perl5-5.27.4/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.4/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -116,10 +116,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.27.4/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.4/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -194,6 +192,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -377,7 +376,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -402,6 +402,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/liblist.patch perl-5.26.1/cnf/diffs/perl5-5.27.4/liblist.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/liblist.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.4/liblist.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,80 @@
+When deciding which libraries are available, the original Configure uses
+shaky heuristics to physically locate library files.
+This is a very very bad thing to do, *especially* when cross-compiling,
+as said heiristics are likely to locate the host libraries, not the target ones.
+
+The only real need for this test is to make sure it's safe to pass -llibrary
+to the compiler. So that's exactly what perl-cross does, pass -llibrary
+and see if it breaks things.
+
+Note this is a part of MakeMaker, and only applies to module Makefiles.
+
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
+@@ -20,9 +20,10 @@
+ use File::Spec;
+ 
+ sub ext {
+-    if    ( $^O eq 'VMS' )     { return &_vms_ext; }
+-    elsif ( $^O eq 'MSWin32' ) { return &_win32_ext; }
+-    else                       { return &_unix_os2_ext; }
++  if   ($Config{usemmldlt}){ return &_ld_ext;       }
++  elsif($^O eq 'VMS')      { return &_vms_ext;      }
++  elsif($^O eq 'MSWin32')  { return &_win32_ext;    }
++  else                     { return &_unix_os2_ext; }
+ }
+ 
+ sub _unix_os2_ext {
+@@ -642,4 +643,51 @@
+     wantarray ? ( $lib, '', $ldlib, '', ( $give_libs ? \@flibs : () ) ) : $lib;
+ }
+ 
++# A direct test for -l validity.
++# Because guessing real file names for -llib options when dealing
++# with a cross compiler is generally a BAD IDEA^tm.
++sub _ld_ext {
++    my($self,$potential_libs, $verbose, $give_libs) = @_;
++    $verbose ||= 0;
++
++    if ($^O =~ 'os2' and $Config{perllibs}) { 
++	# Dynamic libraries are not transitive, so we may need including
++	# the libraries linked against perl.dll again.
++
++	$potential_libs .= " " if $potential_libs;
++	$potential_libs .= $Config{perllibs};
++    }
++    return ("", "", "", "", ($give_libs ? [] : ())) unless $potential_libs;
++    warn "Potential libraries are '$potential_libs':\n" if $verbose;
++
++    my($ld)   = $Config{ld};
++    my($lddlflags)   = $Config{lddlflags};
++    my($libs) = defined $Config{perllibs} ? $Config{perllibs} : $Config{libs};
++
++    my $try = 'try_mm.c';
++    my $tryx = 'try_mm.x';
++    open(TRY, '>', $try) || die "Can't create MakeMaker test file $try: $!\n";
++    print TRY "int main(void) { return 0; }\n";
++    close(TRY);
++
++    my $testlibs = '';
++    my @testlibs = ();
++    foreach my $thislib (split ' ', $potential_libs) {
++        $testlibs = join(' ', @testlibs);
++	if($thislib =~ /^-L/) {
++		push(@testlibs, $thislib);
++		next
++	};
++	my $cmd = "$ld $lddlflags -o $tryx $try $testlibs $thislib >/dev/null 2>&1";
++	my $ret = system($cmd);
++	warn "Warning (mostly harmless): " . "No library found for $thislib\n" if $ret;
++	next if $ret;
++	push @testlibs, $thislib;
++    }
++    unlink($try);
++    unlink($tryx);
++
++    return (join(' ', @testlibs), '', join(' ', @testlibs), '');
++}
++
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/makemaker.patch perl-5.26.1/cnf/diffs/perl5-5.27.4/makemaker.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/makemaker.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.4/makemaker.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -36,7 +36,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+ }
+ 
+ BEGIN {
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.27.4/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.4/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.27.4/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.4/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/test-commonsense.patch perl-5.26.1/cnf/diffs/perl5-5.27.4/test-commonsense.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/test-commonsense.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.4/test-commonsense.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,13 @@
+In perl-cross it's File-Glob not File/Glob.
+
+--- a/t/lib/commonsense.t
++++ b/t/lib/commonsense.t
+@@ -18,7 +18,7 @@
+   BAIL_OUT("Perl configured without IO module");
+ }
+ # hey, DOS users do not need this kind of common sense ;-)
+-if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile\/Glob\b/) ){
++if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile.Glob\b/) ){
+   BAIL_OUT("Perl configured without File::Glob module");
+ }
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.27.4/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.4/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.4/xconfig.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,32 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
++#   ifndef USE_CROSS_COMPILE
+ #   include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* this is used for functions which take a depth trailing
+--- a/perl_langinfo.h
++++ b/perl_langinfo.h
+@@ -4,7 +4,11 @@
+ #ifndef PERL_LANGINFO_H
+ #define PERL_LANGINFO_H 1
+ 
++#ifdef USE_CROSS_COMPILE
++#include "xconfig.h"
++#else
+ #include "config.h"
++#endif
+ 
+ #if defined(HAS_NL_LANGINFO) && defined(I_LANGINFO)
+ #   include <langinfo.h>
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.27.5/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.5/configpm.patch	2017-12-28 02:47:14.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -255,7 +258,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/constant.patch perl-5.26.1/cnf/diffs/perl5-5.27.5/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.5/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.27.5/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.5/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/findext.patch perl-5.26.1/cnf/diffs/perl5-5.27.5/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.5/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -116,10 +116,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.27.5/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.5/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -194,6 +192,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -377,7 +376,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -402,6 +402,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/liblist.patch perl-5.26.1/cnf/diffs/perl5-5.27.5/liblist.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/liblist.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.5/liblist.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,80 @@
+When deciding which libraries are available, the original Configure uses
+shaky heuristics to physically locate library files.
+This is a very very bad thing to do, *especially* when cross-compiling,
+as said heiristics are likely to locate the host libraries, not the target ones.
+
+The only real need for this test is to make sure it's safe to pass -llibrary
+to the compiler. So that's exactly what perl-cross does, pass -llibrary
+and see if it breaks things.
+
+Note this is a part of MakeMaker, and only applies to module Makefiles.
+
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
+@@ -20,9 +20,10 @@
+ use File::Spec;
+ 
+ sub ext {
+-    if    ( $^O eq 'VMS' )     { return &_vms_ext; }
+-    elsif ( $^O eq 'MSWin32' ) { return &_win32_ext; }
+-    else                       { return &_unix_os2_ext; }
++  if   ($Config{usemmldlt}){ return &_ld_ext;       }
++  elsif($^O eq 'VMS')      { return &_vms_ext;      }
++  elsif($^O eq 'MSWin32')  { return &_win32_ext;    }
++  else                     { return &_unix_os2_ext; }
+ }
+ 
+ sub _unix_os2_ext {
+@@ -642,4 +643,51 @@
+     wantarray ? ( $lib, '', $ldlib, '', ( $give_libs ? \@flibs : () ) ) : $lib;
+ }
+ 
++# A direct test for -l validity.
++# Because guessing real file names for -llib options when dealing
++# with a cross compiler is generally a BAD IDEA^tm.
++sub _ld_ext {
++    my($self,$potential_libs, $verbose, $give_libs) = @_;
++    $verbose ||= 0;
++
++    if ($^O =~ 'os2' and $Config{perllibs}) { 
++	# Dynamic libraries are not transitive, so we may need including
++	# the libraries linked against perl.dll again.
++
++	$potential_libs .= " " if $potential_libs;
++	$potential_libs .= $Config{perllibs};
++    }
++    return ("", "", "", "", ($give_libs ? [] : ())) unless $potential_libs;
++    warn "Potential libraries are '$potential_libs':\n" if $verbose;
++
++    my($ld)   = $Config{ld};
++    my($lddlflags)   = $Config{lddlflags};
++    my($libs) = defined $Config{perllibs} ? $Config{perllibs} : $Config{libs};
++
++    my $try = 'try_mm.c';
++    my $tryx = 'try_mm.x';
++    open(TRY, '>', $try) || die "Can't create MakeMaker test file $try: $!\n";
++    print TRY "int main(void) { return 0; }\n";
++    close(TRY);
++
++    my $testlibs = '';
++    my @testlibs = ();
++    foreach my $thislib (split ' ', $potential_libs) {
++        $testlibs = join(' ', @testlibs);
++	if($thislib =~ /^-L/) {
++		push(@testlibs, $thislib);
++		next
++	};
++	my $cmd = "$ld $lddlflags -o $tryx $try $testlibs $thislib >/dev/null 2>&1";
++	my $ret = system($cmd);
++	warn "Warning (mostly harmless): " . "No library found for $thislib\n" if $ret;
++	next if $ret;
++	push @testlibs, $thislib;
++    }
++    unlink($try);
++    unlink($tryx);
++
++    return (join(' ', @testlibs), '', join(' ', @testlibs), '');
++}
++
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/makemaker.patch perl-5.26.1/cnf/diffs/perl5-5.27.5/makemaker.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/makemaker.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.5/makemaker.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -36,7 +36,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+ }
+ 
+ BEGIN {
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.27.5/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.5/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.27.5/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.5/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/test-commonsense.patch perl-5.26.1/cnf/diffs/perl5-5.27.5/test-commonsense.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/test-commonsense.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.5/test-commonsense.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,13 @@
+In perl-cross it's File-Glob not File/Glob.
+
+--- a/t/lib/commonsense.t
++++ b/t/lib/commonsense.t
+@@ -18,7 +18,7 @@
+   BAIL_OUT("Perl configured without IO module");
+ }
+ # hey, DOS users do not need this kind of common sense ;-)
+-if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile\/Glob\b/) ){
++if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile.Glob\b/) ){
+   BAIL_OUT("Perl configured without File::Glob module");
+ }
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.27.5/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.5/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.5/xconfig.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,32 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
++#   ifndef USE_CROSS_COMPILE
+ #   include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* this is used for functions which take a depth trailing
+--- a/perl_langinfo.h
++++ b/perl_langinfo.h
+@@ -4,7 +4,11 @@
+ #ifndef PERL_LANGINFO_H
+ #define PERL_LANGINFO_H 1
+ 
++#ifdef USE_CROSS_COMPILE
++#include "xconfig.h"
++#else
+ #include "config.h"
++#endif
+ 
+ #if defined(HAS_NL_LANGINFO) && defined(I_LANGINFO)
+ #   include <langinfo.h>
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.27.7/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.7/configpm.patch	2018-01-22 18:00:30.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -268,7 +271,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/constant.patch perl-5.26.1/cnf/diffs/perl5-5.27.7/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.7/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.27.7/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.7/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/findext.patch perl-5.26.1/cnf/diffs/perl5-5.27.7/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.7/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -116,10 +116,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.27.7/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.7/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -194,6 +192,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -377,7 +376,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -402,6 +402,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/liblist.patch perl-5.26.1/cnf/diffs/perl5-5.27.7/liblist.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/liblist.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.7/liblist.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,80 @@
+When deciding which libraries are available, the original Configure uses
+shaky heuristics to physically locate library files.
+This is a very very bad thing to do, *especially* when cross-compiling,
+as said heiristics are likely to locate the host libraries, not the target ones.
+
+The only real need for this test is to make sure it's safe to pass -llibrary
+to the compiler. So that's exactly what perl-cross does, pass -llibrary
+and see if it breaks things.
+
+Note this is a part of MakeMaker, and only applies to module Makefiles.
+
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
+@@ -20,9 +20,10 @@
+ use File::Spec;
+ 
+ sub ext {
+-    if    ( $^O eq 'VMS' )     { return &_vms_ext; }
+-    elsif ( $^O eq 'MSWin32' ) { return &_win32_ext; }
+-    else                       { return &_unix_os2_ext; }
++  if   ($Config{usemmldlt}){ return &_ld_ext;       }
++  elsif($^O eq 'VMS')      { return &_vms_ext;      }
++  elsif($^O eq 'MSWin32')  { return &_win32_ext;    }
++  else                     { return &_unix_os2_ext; }
+ }
+ 
+ sub _unix_os2_ext {
+@@ -642,4 +643,51 @@
+     wantarray ? ( $lib, '', $ldlib, '', ( $give_libs ? \@flibs : () ) ) : $lib;
+ }
+ 
++# A direct test for -l validity.
++# Because guessing real file names for -llib options when dealing
++# with a cross compiler is generally a BAD IDEA^tm.
++sub _ld_ext {
++    my($self,$potential_libs, $verbose, $give_libs) = @_;
++    $verbose ||= 0;
++
++    if ($^O =~ 'os2' and $Config{perllibs}) { 
++	# Dynamic libraries are not transitive, so we may need including
++	# the libraries linked against perl.dll again.
++
++	$potential_libs .= " " if $potential_libs;
++	$potential_libs .= $Config{perllibs};
++    }
++    return ("", "", "", "", ($give_libs ? [] : ())) unless $potential_libs;
++    warn "Potential libraries are '$potential_libs':\n" if $verbose;
++
++    my($ld)   = $Config{ld};
++    my($lddlflags)   = $Config{lddlflags};
++    my($libs) = defined $Config{perllibs} ? $Config{perllibs} : $Config{libs};
++
++    my $try = 'try_mm.c';
++    my $tryx = 'try_mm.x';
++    open(TRY, '>', $try) || die "Can't create MakeMaker test file $try: $!\n";
++    print TRY "int main(void) { return 0; }\n";
++    close(TRY);
++
++    my $testlibs = '';
++    my @testlibs = ();
++    foreach my $thislib (split ' ', $potential_libs) {
++        $testlibs = join(' ', @testlibs);
++	if($thislib =~ /^-L/) {
++		push(@testlibs, $thislib);
++		next
++	};
++	my $cmd = "$ld $lddlflags -o $tryx $try $testlibs $thislib >/dev/null 2>&1";
++	my $ret = system($cmd);
++	warn "Warning (mostly harmless): " . "No library found for $thislib\n" if $ret;
++	next if $ret;
++	push @testlibs, $thislib;
++    }
++    unlink($try);
++    unlink($tryx);
++
++    return (join(' ', @testlibs), '', join(' ', @testlibs), '');
++}
++
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/makemaker.patch perl-5.26.1/cnf/diffs/perl5-5.27.7/makemaker.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/makemaker.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.7/makemaker.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -36,7 +36,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+ }
+ 
+ BEGIN {
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.27.7/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.7/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.27.7/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.7/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/test-commonsense.patch perl-5.26.1/cnf/diffs/perl5-5.27.7/test-commonsense.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/test-commonsense.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.7/test-commonsense.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,13 @@
+In perl-cross it's File-Glob not File/Glob.
+
+--- a/t/lib/commonsense.t
++++ b/t/lib/commonsense.t
+@@ -18,7 +18,7 @@
+   BAIL_OUT("Perl configured without IO module");
+ }
+ # hey, DOS users do not need this kind of common sense ;-)
+-if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile\/Glob\b/) ){
++if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile.Glob\b/) ){
+   BAIL_OUT("Perl configured without File::Glob module");
+ }
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.27.7/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.7/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.7/xconfig.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,32 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
++#   ifndef USE_CROSS_COMPILE
+ #   include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* this is used for functions which take a depth trailing
+--- a/perl_langinfo.h
++++ b/perl_langinfo.h
+@@ -4,7 +4,11 @@
+ #ifndef PERL_LANGINFO_H
+ #define PERL_LANGINFO_H 1
+ 
++#ifdef USE_CROSS_COMPILE
++#include "xconfig.h"
++#else
+ #include "config.h"
++#endif
+ 
+ #if defined(HAS_NL_LANGINFO) && defined(I_LANGINFO)
+ #   include <langinfo.h>
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.27.8/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.8/configpm.patch	2018-01-22 18:00:30.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -268,7 +271,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/constant.patch perl-5.26.1/cnf/diffs/perl5-5.27.8/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.8/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.27.8/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.8/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/findext.patch perl-5.26.1/cnf/diffs/perl5-5.27.8/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.8/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -116,10 +116,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.27.8/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.8/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -194,6 +192,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -377,7 +376,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -402,6 +402,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/liblist.patch perl-5.26.1/cnf/diffs/perl5-5.27.8/liblist.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/liblist.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.8/liblist.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,80 @@
+When deciding which libraries are available, the original Configure uses
+shaky heuristics to physically locate library files.
+This is a very very bad thing to do, *especially* when cross-compiling,
+as said heiristics are likely to locate the host libraries, not the target ones.
+
+The only real need for this test is to make sure it's safe to pass -llibrary
+to the compiler. So that's exactly what perl-cross does, pass -llibrary
+and see if it breaks things.
+
+Note this is a part of MakeMaker, and only applies to module Makefiles.
+
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
+@@ -20,9 +20,10 @@
+ use File::Spec;
+ 
+ sub ext {
+-    if    ( $^O eq 'VMS' )     { return &_vms_ext; }
+-    elsif ( $^O eq 'MSWin32' ) { return &_win32_ext; }
+-    else                       { return &_unix_os2_ext; }
++  if   ($Config{usemmldlt}){ return &_ld_ext;       }
++  elsif($^O eq 'VMS')      { return &_vms_ext;      }
++  elsif($^O eq 'MSWin32')  { return &_win32_ext;    }
++  else                     { return &_unix_os2_ext; }
+ }
+ 
+ sub _unix_os2_ext {
+@@ -642,4 +643,51 @@
+     wantarray ? ( $lib, '', $ldlib, '', ( $give_libs ? \@flibs : () ) ) : $lib;
+ }
+ 
++# A direct test for -l validity.
++# Because guessing real file names for -llib options when dealing
++# with a cross compiler is generally a BAD IDEA^tm.
++sub _ld_ext {
++    my($self,$potential_libs, $verbose, $give_libs) = @_;
++    $verbose ||= 0;
++
++    if ($^O =~ 'os2' and $Config{perllibs}) { 
++	# Dynamic libraries are not transitive, so we may need including
++	# the libraries linked against perl.dll again.
++
++	$potential_libs .= " " if $potential_libs;
++	$potential_libs .= $Config{perllibs};
++    }
++    return ("", "", "", "", ($give_libs ? [] : ())) unless $potential_libs;
++    warn "Potential libraries are '$potential_libs':\n" if $verbose;
++
++    my($ld)   = $Config{ld};
++    my($lddlflags)   = $Config{lddlflags};
++    my($libs) = defined $Config{perllibs} ? $Config{perllibs} : $Config{libs};
++
++    my $try = 'try_mm.c';
++    my $tryx = 'try_mm.x';
++    open(TRY, '>', $try) || die "Can't create MakeMaker test file $try: $!\n";
++    print TRY "int main(void) { return 0; }\n";
++    close(TRY);
++
++    my $testlibs = '';
++    my @testlibs = ();
++    foreach my $thislib (split ' ', $potential_libs) {
++        $testlibs = join(' ', @testlibs);
++	if($thislib =~ /^-L/) {
++		push(@testlibs, $thislib);
++		next
++	};
++	my $cmd = "$ld $lddlflags -o $tryx $try $testlibs $thislib >/dev/null 2>&1";
++	my $ret = system($cmd);
++	warn "Warning (mostly harmless): " . "No library found for $thislib\n" if $ret;
++	next if $ret;
++	push @testlibs, $thislib;
++    }
++    unlink($try);
++    unlink($tryx);
++
++    return (join(' ', @testlibs), '', join(' ', @testlibs), '');
++}
++
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/makemaker.patch perl-5.26.1/cnf/diffs/perl5-5.27.8/makemaker.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/makemaker.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.8/makemaker.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -36,7 +36,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+ }
+ 
+ BEGIN {
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.27.8/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.8/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.27.8/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.8/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/test-commonsense.patch perl-5.26.1/cnf/diffs/perl5-5.27.8/test-commonsense.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/test-commonsense.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.8/test-commonsense.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,13 @@
+In perl-cross it's File-Glob not File/Glob.
+
+--- a/t/lib/commonsense.t
++++ b/t/lib/commonsense.t
+@@ -18,7 +18,7 @@
+   BAIL_OUT("Perl configured without IO module");
+ }
+ # hey, DOS users do not need this kind of common sense ;-)
+-if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile\/Glob\b/) ){
++if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile.Glob\b/) ){
+   BAIL_OUT("Perl configured without File::Glob module");
+ }
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.27.8/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.8/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.8/xconfig.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,32 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
++#   ifndef USE_CROSS_COMPILE
+ #   include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* this is used for functions which take a depth trailing
+--- a/perl_langinfo.h
++++ b/perl_langinfo.h
+@@ -4,7 +4,11 @@
+ #ifndef PERL_LANGINFO_H
+ #define PERL_LANGINFO_H 1
+ 
++#ifdef USE_CROSS_COMPILE
++#include "xconfig.h"
++#else
+ #include "config.h"
++#endif
+ 
+ #if defined(HAS_NL_LANGINFO) && defined(I_LANGINFO)
+ #   include <langinfo.h>
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/configpm.patch perl-5.26.1/cnf/diffs/perl5-5.27.9/configpm.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/configpm.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.9/configpm.patch	2018-01-22 18:00:30.000000000 -0600
@@ -0,0 +1,30 @@
+In vanilla perl, extensions lists in config.sh contain old-style (5.10 I think)
+module names, like File/DosGlob for a module called File::DosGlob residiing
+in ext/File-DosGlob.
+
+In perl-cross, it's always the exact directory name, ext/File-DosGlob in this case.
+
+--- a/configpm
++++ b/configpm
+@@ -54,9 +54,9 @@
+ # wonderfully easy to instrument, and no longer exists.
+ $Common{$_} = $_ foreach qw(dlext so);
+ 
+-# names of things which may need to have slashes changed to double-colons
++# modules lists -- config.sh uses different format for these
+ my %Extensions = map {($_,$_)}
+-                 qw(dynamic_ext static_ext extensions known_extensions);
++                 qw(dynamic_ext static_ext extensions known_extensions nonxs_ext);
+ 
+ # The plan is that this information is used by ExtUtils::MakeMaker to generate
+ # Makefile dependencies, rather than hardcoding a list, which has become out
+@@ -268,7 +271,8 @@
+     $in_v = $val !~ /$quote\n/;
+     next if $in_v;
+ 
+-    s,/,::,g if $Extensions{$name};
++    $val =~ s,\b(cpan|dist|ext)/,,g if $Extensions{$name};
++    $val =~ s,-,/,g if $Extensions{$name};
+ 
+     $val =~ s/$quote\n?\z//;
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/constant.patch perl-5.26.1/cnf/diffs/perl5-5.27.9/constant.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/constant.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.9/constant.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,37 @@
+The toolchain is not installed on the target when cross-compiling.
+There are no sense to install this module on target, but EUC is
+a part of Perl distribution.
+
+https://rt.cpan.org/Public/Bug/Display.html?id=88645
+
+--- a/cpan/ExtUtils-Constant/t/Constant.t
++++ b/cpan/ExtUtils-Constant/t/Constant.t
+@@ -1,8 +1,18 @@
+ #!/usr/bin/perl -w
+ 
+ use Config;
++use IPC::Cmd qw(can_run);
++
+ unless ($Config{usedl}) {
+-    print "1..0 # no usedl, skipping\n";
++    print "1..0 # SKIP no usedl\n";
++    exit 0;
++}
++
++my $make = $Config{make};
++$make = $ENV{MAKE} if exists $ENV{MAKE};
++
++unless ( can_run($make) ) {
++    print "1..0 # SKIP make not available\n";
+     exit 0;
+ }
+ 
+@@ -34,8 +44,6 @@ $
+ # module from blib
+ @INC = map {File::Spec->rel2abs($_)} @INC if $] < 5.007 && $] >= 5.006;
+ 
+-my $make = $Config{make};
+-$make = $ENV{MAKE} if exists $ENV{MAKE};
+ if ($^O eq 'MSWin32' && $make eq 'nmake') { $make .= " -nologo"; }
+ 
+ # VMS may be using something other than MMS/MMK
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/dynaloader.patch perl-5.26.1/cnf/diffs/perl5-5.27.9/dynaloader.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/dynaloader.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.9/dynaloader.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,11 @@
+Buildroot puts nlist.h into sysroot/usr/include,
+which is in the default include path.
+
+--- a/ext/DynaLoader/hints/linux.pl
++++ b/ext/DynaLoader/hints/linux.pl
+@@ -1,5 +1 @@
+-# XXX Configure test needed.
+-# Some Linux releases like to hide their <nlist.h>
+-$self->{CCFLAGS} = $Config{ccflags} . ' -I/usr/include/libelf'
+-	if -f "/usr/include/libelf/nlist.h";
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/findext.patch perl-5.26.1/cnf/diffs/perl5-5.27.9/findext.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/findext.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.9/findext.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,20 @@
+Brain bleach please.
+
+I hope I will never come upon a code that actually depends on this.
+
+No no no.
+
+
+--- a/win32/FindExt.pm
++++ b/win32/FindExt.pm
+@@ -116,10 +116,6 @@
+         $this_ext =~ s!-!/!g;
+         $leaf =~ s/.*-//;
+ 
+-        # List/Util.xs lives in Scalar-List-Utils, Cwd.xs lives in PathTools
+-        $this_ext = 'List/Util' if $this_ext eq 'Scalar/List/Utils';
+-        $this_ext = 'Cwd'       if $this_ext eq 'PathTools';
+-
+ 	# Temporary hack to cope with smokers that are not clearing directories:
+         next if $ext{$this_ext};
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/installscripts.patch perl-5.26.1/cnf/diffs/perl5-5.27.9/installscripts.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/installscripts.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.9/installscripts.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,75 @@
+These scripts are run by miniperl in perl-cross,
+and have the right @INC set up for them externally.
+
+The second chunk in installperl add -Dsoname support.
+
+--- a/installman
++++ b/installman
+@@ -1,8 +1,6 @@
+ #!./perl -w
+ 
+ BEGIN {
+-    @INC = qw(lib);
+-
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+     require './install_lib.pl';
+--- a/installperl
++++ b/installperl
+@@ -2,8 +2,6 @@
+ 
+ BEGIN {
+     chdir '..' if !-d 'lib' and -d '../lib';
+-    @INC = 'lib';
+-    $ENV{PERL5LIB} = 'lib';
+ 
+     # This needs to be at BEGIN time, before any use of Config
+     # install_lib itself loads and imports Config into main::
+@@ -194,6 +192,7 @@
+ 
+ # Fetch some frequently-used items from %Config
+ my $installbin = "$opts{destdir}$Config{installbin}";
++my $installlib = "$opts{destdir}$Config{installlib}";
+ my $installscript = "$opts{destdir}$Config{installscript}";
+ my $installprivlib = "$opts{destdir}$Config{installprivlib}";
+ my $installarchlib = "$opts{destdir}$Config{installarchlib}";
+@@ -377,7 +376,8 @@
+     @corefiles = <*.h>;
+ } else {
+     # [als] hard-coded 'libperl' name... not good!
+-    @corefiles = <*.h libperl*.* perl*$Config{lib_ext}>;
++    @corefiles = <*.h perl*$Config{lib_ext}>;
++    push(@corefiles, $Config{libperl}) if $Config{useshrplib} && !$Config{soname};
+ 
+     # AIX needs perl.exp installed as well.
+     push(@corefiles,'perl.exp') if $^O eq 'aix';
+@@ -402,6 +402,29 @@
+ 	chmod($NON_SO_MODE, $dest) foreach @corefiles;
+ }
+ 
++if($Config{useshrplib} && $Config{soname}) {
++    my $libperl = $Config{libperl};
++    my $soname = $Config{soname};
++    mkpath($installlib);
++    if (copy_if_diff($libperl, "$installlib/$libperl")) {
++        strip("-S", "$installlib/$libperl");
++        chmod(0555, "$installlib/$libperl");
++
++        # Normally this should be done by ldconfig.
++        safe_unlink("$installlib/$soname") unless $soname eq $libperl;
++        safe_unlink("$installlib/libperl.so") unless $soname eq 'libperl.so';
++        symlink($libperl, "$installlib/$soname") unless $soname eq $libperl;
++        symlink($libperl, "$installlib/libperl.so") unless $soname eq 'libperl.so';
++        # using $so here instead of .so hardly makes any sense,
++        # all systems supporting SONAME have $so=.so
++
++        # Backward compatibility: provide a symlink where people expect it
++        safe_unlink("$installarchlib/CORE/libperl.so");
++        symlink("$Config{installlib}/$libperl", "$installarchlib/CORE/libperl.so");
++        #        ^ without destdir here!
++    }
++}
++
+ # Install main perl executables
+ # Make links to ordinary names if installbin directory isn't current directory.
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/liblist.patch perl-5.26.1/cnf/diffs/perl5-5.27.9/liblist.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/liblist.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.9/liblist.patch	2018-03-05 15:46:38.000000000 -0600
@@ -0,0 +1,80 @@
+When deciding which libraries are available, the original Configure uses
+shaky heuristics to physically locate library files.
+This is a very very bad thing to do, *especially* when cross-compiling,
+as said heiristics are likely to locate the host libraries, not the target ones.
+
+The only real need for this test is to make sure it's safe to pass -llibrary
+to the compiler. So that's exactly what perl-cross does, pass -llibrary
+and see if it breaks things.
+
+Note this is a part of MakeMaker, and only applies to module Makefiles.
+
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
+@@ -20,9 +20,10 @@
+ use File::Spec;
+ 
+ sub ext {
+-    if    ( $^O eq 'VMS' )     { return &_vms_ext; }
+-    elsif ( $^O eq 'MSWin32' ) { return &_win32_ext; }
+-    else                       { return &_unix_os2_ext; }
++  if   ($Config{usemmldlt}){ return &_ld_ext;       }
++  elsif($^O eq 'VMS')      { return &_vms_ext;      }
++  elsif($^O eq 'MSWin32')  { return &_win32_ext;    }
++  else                     { return &_unix_os2_ext; }
+ }
+ 
+ sub _unix_os2_ext {
+@@ -647,4 +648,51 @@
+     wantarray ? ( $lib, '', $ldlib, '', ( $give_libs ? \@flibs : () ) ) : $lib;
+ }
+ 
++# A direct test for -l validity.
++# Because guessing real file names for -llib options when dealing
++# with a cross compiler is generally a BAD IDEA^tm.
++sub _ld_ext {
++    my($self,$potential_libs, $verbose, $give_libs) = @_;
++    $verbose ||= 0;
++
++    if ($^O =~ 'os2' and $Config{perllibs}) { 
++	# Dynamic libraries are not transitive, so we may need including
++	# the libraries linked against perl.dll again.
++
++	$potential_libs .= " " if $potential_libs;
++	$potential_libs .= $Config{perllibs};
++    }
++    return ("", "", "", "", ($give_libs ? [] : ())) unless $potential_libs;
++    warn "Potential libraries are '$potential_libs':\n" if $verbose;
++
++    my($ld)   = $Config{ld};
++    my($lddlflags)   = $Config{lddlflags};
++    my($libs) = defined $Config{perllibs} ? $Config{perllibs} : $Config{libs};
++
++    my $try = 'try_mm.c';
++    my $tryx = 'try_mm.x';
++    open(TRY, '>', $try) || die "Can't create MakeMaker test file $try: $!\n";
++    print TRY "int main(void) { return 0; }\n";
++    close(TRY);
++
++    my $testlibs = '';
++    my @testlibs = ();
++    foreach my $thislib (split ' ', $potential_libs) {
++        $testlibs = join(' ', @testlibs);
++	if($thislib =~ /^-L/) {
++		push(@testlibs, $thislib);
++		next
++	};
++	my $cmd = "$ld $lddlflags -o $tryx $try $testlibs $thislib >/dev/null 2>&1";
++	my $ret = system($cmd);
++	warn "Warning (mostly harmless): " . "No library found for $thislib\n" if $ret;
++	next if $ret;
++	push @testlibs, $thislib;
++    }
++    unlink($try);
++    unlink($tryx);
++
++    return (join(' ', @testlibs), '', join(' ', @testlibs), '');
++}
++
+ 1;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/makemaker.patch perl-5.26.1/cnf/diffs/perl5-5.27.9/makemaker.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/makemaker.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.9/makemaker.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,19 @@
+During the build, MakeMaker is run by miniperl, so $^O is the build
+platform; but for the code below, $Is{Android} means that the target
+platform is Android.
+
+Replacing $^O check altogether would probably be better,
+but there's already a double test like that, and it should be fixed
+upstream anyway.
+
+--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
++++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
+@@ -36,7 +36,7 @@
+     $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or
+                    grep( $^O eq $_, qw(bsdos interix dragonfly) )
+                   );
+-    $Is{Android} = $^O =~ /android/;
++    $Is{Android} = $^O =~ /android/ || $Config{osname} eq 'android';
+ }
+ 
+ BEGIN {
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/posix-makefile.patch perl-5.26.1/cnf/diffs/perl5-5.27.9/posix-makefile.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/posix-makefile.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.9/posix-makefile.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,12 @@
+--- a/ext/POSIX/Makefile.PL
++++ b/ext/POSIX/Makefile.PL
+@@ -1,4 +1,9 @@
+ # Expect this line to be read by t/posix.t, don't change it
++
++# Explicitly avoid including '.' in @INC; autoloader gets confused since it
++# can find POSIX.pm, but can't find autosplit.ix.
++BEGIN { pop @INC;}
++#
+ use ExtUtils::MakeMaker;
+ use ExtUtils::Constant 0.23 'WriteConstants';
+ use Config;
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/test-checkcase.patch perl-5.26.1/cnf/diffs/perl5-5.27.9/test-checkcase.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/test-checkcase.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.9/test-checkcase.patch	2017-11-10 10:51:26.000000000 -0600
@@ -0,0 +1,14 @@
+perl-cross tree has both Configure and configure, which causes
+checkcase.t to fail. Skip them.
+
+--- a/t/porting/checkcase.t
++++ b/t/porting/checkcase.t
+@@ -25,6 +25,8 @@
+ 
+ 	   # Special exemption for Makefile, makefile
+ 	   return if $name =~ m!\A[Mm]akefile\z!;
++	   # same for Configure, configure in perl-cross
++	   return if $name =~ m!\A[Cc]onfigure\z!;
+ 
+ 	   if ($name eq '.git') {
+ 	       # Don't scan the .git directory, as its contents are outside
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/test-commonsense.patch perl-5.26.1/cnf/diffs/perl5-5.27.9/test-commonsense.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/test-commonsense.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.9/test-commonsense.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,13 @@
+In perl-cross it's File-Glob not File/Glob.
+
+--- a/t/lib/commonsense.t
++++ b/t/lib/commonsense.t
+@@ -18,7 +18,7 @@
+   BAIL_OUT("Perl configured without IO module");
+ }
+ # hey, DOS users do not need this kind of common sense ;-)
+-if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile\/Glob\b/) ){
++if ($^O ne 'dos' && ($Config{'extensions'} !~ /\bFile.Glob\b/) ){
+   BAIL_OUT("Perl configured without File::Glob module");
+ }
+ 
diff -uNr perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/xconfig.patch perl-5.26.1/cnf/diffs/perl5-5.27.9/xconfig.patch
--- perl-5.26.1.orig/cnf/diffs/perl5-5.27.9/xconfig.patch	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/diffs/perl5-5.27.9/xconfig.patch	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,32 @@
+perl-cross assumes the sources use xconfig.h with -DUSE_CROSS_COMPILE
+With perl 5.20.0, it's no longer true. Regardless of what mainline perl
+uses, let's stick with the old xconfig.h way for now.
+
+--- a/perl.h
++++ b/perl.h
+@@ -25,7 +25,11 @@
+ #ifdef PERL_MICRO
+ #   include "uconfig.h"
+ #else
++#   ifndef USE_CROSS_COMPILE
+ #   include "config.h"
++#   else
++#       include "xconfig.h"
++#   endif
+ #endif
+ 
+ /* this is used for functions which take a depth trailing
+--- a/perl_langinfo.h
++++ b/perl_langinfo.h
+@@ -4,7 +4,11 @@
+ #ifndef PERL_LANGINFO_H
+ #define PERL_LANGINFO_H 1
+ 
++#ifdef USE_CROSS_COMPILE
++#include "xconfig.h"
++#else
+ #include "config.h"
++#endif
+ 
+ #if defined(HAS_NL_LANGINFO) && defined(I_LANGINFO)
+ #   include <langinfo.h>
diff -uNr perl-5.26.1.orig/cnf/hints/android perl-5.26.1/cnf/hints/android
--- perl-5.26.1.orig/cnf/hints/android	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/hints/android	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,27 @@
+# Android toolchains get osname='android' and do not load linux hints
+# (which makes a lot of sense by the way, bionic is not glibc)
+
+# Linux syscalls
+d_voidsig='define'
+d_nanosleep='define'
+d_clock_gettime='define'
+d_clock_getres='define'
+d_clock_nanosleep='define'
+d_clock='define'
+
+# From the original linux.sh
+usemallocwrap='define'
+
+# libraries to test
+libswanted='m crypt pthread nm ndbm gdbm dbm db dl gdbm_compat'
+
+d_procselfexe='define'
+procselfexe='"/proc/self/exe"'
+
+st_ino_sign=1
+st_ino_size=8
+
+d_fcntl_can_lock='define'
+
+# Android has non-usable definition for this
+d_ip_mreq_source='undef'
diff -uNr perl-5.26.1.orig/cnf/hints/linux perl-5.26.1/cnf/hints/linux
--- perl-5.26.1.orig/cnf/hints/linux	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/hints/linux	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,21 @@
+# Linux syscalls
+d_voidsig='define'
+d_nanosleep='define'
+d_clock_gettime='define'
+d_clock_getres='define'
+d_clock_nanosleep='define'
+d_clock='define'
+
+# From the original linux.sh
+usemallocwrap='define'
+
+# libraries to test
+libswanted='m crypt pthread nm ndbm gdbm dbm db dl gdbm_compat'
+
+d_procselfexe='define'
+procselfexe='"/proc/self/exe"'
+
+st_ino_sign=1
+st_ino_size=8
+
+d_fcntl_can_lock='define'
diff -uNr perl-5.26.1.orig/cnf/hints/mswin32 perl-5.26.1/cnf/hints/mswin32
--- perl-5.26.1.orig/cnf/hints/mswin32	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/hints/mswin32	2018-01-22 18:00:30.000000000 -0600
@@ -0,0 +1,43 @@
+charsize=1
+doublesize=8
+fpossize=16
+gidsize=4
+i16size=2
+i32size=4
+i64size=8
+i8size=1
+intsize=4
+longdoublesize=12
+longlongsize=8
+longsize=4
+lseeksize=8
+ptrsize=4
+shortsize=2
+u16size=2
+u32size=4
+u64size=8
+u8size=1
+uidsize=4
+voidptrsize=4
+int64tsize=8
+int32tsize=4
+int16tsize=2
+int8tsize=1
+offtsize=4
+sizetsize=4
+ssizetsize=4
+fpostsize=8
+cccdlflags=''
+d_attribute_malloc='undef'
+d_longdbl='undef'
+useperlio='define'
+uselargefiles='define'
+usemultiplicity='define'
+sizetype='uint32_t'
+sizesize=4
+ssizetype='int32_t'
+d_atoll='undef'
+d_strtoll='undef'
+d_strtoull='undef'
+timetype='time_t'
+timesize=64
diff -uNr perl-5.26.1.orig/cnf/hints/mswin32-x64 perl-5.26.1/cnf/hints/mswin32-x64
--- perl-5.26.1.orig/cnf/hints/mswin32-x64	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/hints/mswin32-x64	2018-01-22 18:00:30.000000000 -0600
@@ -0,0 +1,8 @@
+use64bitint='define'
+ptrsize=8
+sizetype='uint64_t'
+ssizetype='int64_t'
+d_atoll='define'
+d_strtoll='define'
+d_strtoull='define'
+d_sizesize=8
diff -uNr perl-5.26.1.orig/cnf/stub/Cwd.pm perl-5.26.1/cnf/stub/Cwd.pm
--- perl-5.26.1.orig/cnf/stub/Cwd.pm	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/stub/Cwd.pm	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,30 @@
+package Cwd;
+
+@ISA = qw(Exporter);
+require Exporter;
+
+@EXPORT = qw(cwd getcwd abs_path);
+@EXPORT_OK = qw(cwd getcwd abs_path);
+
+
+sub cwd
+{
+	my $cwd = `pwd`;
+	chomp $cwd;
+	return $cwd;
+}
+
+sub getcwd { return cwd(); }
+
+sub abs_path
+{
+	my $path = shift;
+	return $path if $path =~ m!^/!;
+	my $cwd = cwd();
+	$path = "$cwd/$path";
+	$path =~ s{/\./}{/}g;
+	$path =~ s{/[^/]+/\.\./}{/}g;
+	return $path;
+}
+
+1;
diff -uNr perl-5.26.1.orig/cnf/stub/Encode.pm perl-5.26.1/cnf/stub/Encode.pm
--- perl-5.26.1.orig/cnf/stub/Encode.pm	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/stub/Encode.pm	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,22 @@
+package Encode;
+
+use Exporter;
+our @ISA = qw(Exporter);
+our @EXPORT = qw(encode);
+
+sub encode
+{
+	return $_[1];
+}
+
+sub resolve_alias
+{
+	return $_[1];
+}
+
+sub encodings
+{
+	return ( );
+}
+
+1;
diff -uNr perl-5.26.1.orig/cnf/stub/File/Spec/Functions.pm perl-5.26.1/cnf/stub/File/Spec/Functions.pm
--- perl-5.26.1.orig/cnf/stub/File/Spec/Functions.pm	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/stub/File/Spec/Functions.pm	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,122 @@
+package File::Spec::Functions;
+
+use File::Spec;
+use strict;
+
+use vars qw(@ISA @EXPORT @EXPORT_OK %EXPORT_TAGS $VERSION);
+
+$VERSION = '3.47';
+$VERSION =~ tr/_//;
+
+require Exporter;
+
+@ISA = qw(Exporter);
+
+@EXPORT = qw(
+	canonpath
+	catdir
+	catfile
+	curdir
+	rootdir
+	updir
+	no_upwards
+	file_name_is_absolute
+	path
+);
+
+@EXPORT_OK = qw(
+	devnull
+	tmpdir
+	splitpath
+	splitdir
+	catpath
+	abs2rel
+	rel2abs
+	case_tolerant
+);
+
+%EXPORT_TAGS = ( ALL => [ @EXPORT_OK, @EXPORT ] );
+
+require File::Spec;
+my %udeps = (
+    canonpath => [],
+    catdir => [qw(canonpath)],
+    catfile => [qw(canonpath catdir)],
+    case_tolerant => [],
+    curdir => [],
+    devnull => [],
+    rootdir => [],
+    updir => [],
+);
+
+foreach my $meth (@EXPORT, @EXPORT_OK) {
+    my $sub = File::Spec->can($meth);
+    no strict 'refs';
+    *{$meth} = sub {&$sub('File::Spec', @_)};
+}
+
+
+1;
+__END__
+
+=head1 NAME
+
+File::Spec::Functions - portably perform operations on file names
+
+=head1 SYNOPSIS
+
+	use File::Spec::Functions;
+	$x = catfile('a','b');
+
+=head1 DESCRIPTION
+
+This module exports convenience functions for all of the class methods
+provided by File::Spec.
+
+For a reference of available functions, please consult L<File::Spec::Unix>,
+which contains the entire set, and which is inherited by the modules for
+other platforms. For further information, please see L<File::Spec::Mac>,
+L<File::Spec::OS2>, L<File::Spec::Win32>, or L<File::Spec::VMS>.
+
+=head2 Exports
+
+The following functions are exported by default.
+
+	canonpath
+	catdir
+	catfile
+	curdir
+	rootdir
+	updir
+	no_upwards
+	file_name_is_absolute
+	path
+
+
+The following functions are exported only by request.
+
+	devnull
+	tmpdir
+	splitpath
+	splitdir
+	catpath
+	abs2rel
+	rel2abs
+	case_tolerant
+
+All the functions may be imported using the C<:ALL> tag.
+
+=head1 COPYRIGHT
+
+Copyright (c) 2004 by the Perl 5 Porters.  All rights reserved.
+
+This program is free software; you can redistribute it and/or modify
+it under the same terms as Perl itself.
+
+=head1 SEE ALSO
+
+File::Spec, File::Spec::Unix, File::Spec::Mac, File::Spec::OS2,
+File::Spec::Win32, File::Spec::VMS, ExtUtils::MakeMaker
+
+=cut
+
diff -uNr perl-5.26.1.orig/cnf/stub/File/Spec.pm perl-5.26.1/cnf/stub/File/Spec.pm
--- perl-5.26.1.orig/cnf/stub/File/Spec.pm	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/stub/File/Spec.pm	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,319 @@
+package File::Spec;
+
+use strict;
+use vars qw($VERSION);
+
+$VERSION = '3.47';
+
+sub canonpath {
+    my ($self,$path) = @_;
+    return unless defined $path;
+    
+    # Handle POSIX-style node names beginning with double slash (qnx, nto)
+    # (POSIX says: "a pathname that begins with two successive slashes
+    # may be interpreted in an implementation-defined manner, although
+    # more than two leading slashes shall be treated as a single slash.")
+    my $node = '';
+    my $double_slashes_special = $^O eq 'qnx' || $^O eq 'nto';
+
+
+    if ( $double_slashes_special
+         && ( $path =~ s{^(//[^/]+)/?\z}{}s || $path =~ s{^(//[^/]+)/}{/}s ) ) {
+      $node = $1;
+    }
+    # This used to be
+    # $path =~ s|/+|/|g unless ($^O eq 'cygwin');
+    # but that made tests 29, 30, 35, 46, and 213 (as of #13272) to fail
+    # (Mainly because trailing "" directories didn't get stripped).
+    # Why would cygwin avoid collapsing multiple slashes into one? --jhi
+    $path =~ s|/{2,}|/|g;                            # xx////xx  -> xx/xx
+    $path =~ s{(?:/\.)+(?:/|\z)}{/}g;                # xx/././xx -> xx/xx
+    $path =~ s|^(?:\./)+||s unless $path eq "./";    # ./xx      -> xx
+    $path =~ s|^/(?:\.\./)+|/|;                      # /../../xx -> xx
+    $path =~ s|^/\.\.$|/|;                         # /..       -> /
+    $path =~ s|/\z|| unless $path eq "/";          # xx/       -> xx
+    return "$node$path";
+}
+
+sub catdir {
+    my $self = shift;
+
+    $self->canonpath(join('/', @_, '')); # '' because need a trailing '/'
+}
+
+sub catfile {
+    my $self = shift;
+    my $file = $self->canonpath(pop @_);
+    return $file unless @_;
+    my $dir = $self->catdir(@_);
+    $dir .= "/" unless substr($dir,-1) eq "/";
+    return $dir.$file;
+}
+
+sub curdir { '.' }
+
+sub devnull { '/dev/null' }
+
+sub rootdir { '/' }
+
+my ($tmpdir, %tmpenv);
+# Cache and return the calculated tmpdir, recording which env vars
+# determined it.
+sub _cache_tmpdir {
+    @tmpenv{@_[2..$#_]} = @ENV{@_[2..$#_]};
+    return $tmpdir = $_[1];
+}
+# Retrieve the cached tmpdir, checking first whether relevant env vars have
+# changed and invalidated the cache.
+sub _cached_tmpdir {
+    shift;
+    local $^W;
+    return if grep $ENV{$_} ne $tmpenv{$_}, @_;
+    return $tmpdir;
+}
+sub _tmpdir {
+    my $self = shift;
+    my @dirlist = @_;
+    my $taint = do { no strict 'refs'; ${"\cTAINT"} };
+    if ($taint) { # Check for taint mode on perl >= 5.8.0
+	require Scalar::Util;
+	@dirlist = grep { ! Scalar::Util::tainted($_) } @dirlist;
+    }
+    elsif ($] < 5.007) { # No ${^TAINT} before 5.8
+	@dirlist = grep { eval { eval('1'.substr $_,0,0) } } @dirlist;
+    }
+    
+    foreach (@dirlist) {
+	next unless defined && -d && -w _;
+	$tmpdir = $_;
+	last;
+    }
+    $tmpdir = $self->curdir unless defined $tmpdir;
+    $tmpdir = defined $tmpdir && $self->canonpath($tmpdir);
+    if ( !$self->file_name_is_absolute($tmpdir) ) {
+        # See [perl #120593] for the full details
+        # If possible, return a full path, rather than '.' or 'lib', but
+        # jump through some hoops to avoid returning a tainted value.
+        ($tmpdir) = grep {
+            $taint     ? ! Scalar::Util::tainted($_) :
+            $] < 5.007 ? eval { eval('1'.substr $_,0,0) } : 1
+        } $self->rel2abs($tmpdir), $tmpdir;
+    }
+    return $tmpdir;
+}
+
+sub tmpdir {
+    my $cached = $_[0]->_cached_tmpdir('TMPDIR');
+    return $cached if defined $cached;
+    $_[0]->_cache_tmpdir($_[0]->_tmpdir( $ENV{TMPDIR}, "/tmp" ), 'TMPDIR');
+}
+
+sub updir { '..' }
+
+sub no_upwards {
+    my $self = shift;
+    return grep(!/^\.{1,2}\z/s, @_);
+}
+
+sub case_tolerant { 0 }
+
+sub file_name_is_absolute {
+    my ($self,$file) = @_;
+    return scalar($file =~ m:^/:s);
+}
+
+sub path {
+    return () unless exists $ENV{PATH};
+    my @path = split(':', $ENV{PATH});
+    foreach (@path) { $_ = '.' if $_ eq '' }
+    return @path;
+}
+
+sub join {
+    my $self = shift;
+    return $self->catfile(@_);
+}
+
+sub splitpath {
+    my ($self,$path, $nofile) = @_;
+
+    my ($volume,$directory,$file) = ('','','');
+
+    if ( $nofile ) {
+        $directory = $path;
+    }
+    else {
+        $path =~ m|^ ( (?: .* / (?: \.\.?\z )? )? ) ([^/]*) |xs;
+        $directory = $1;
+        $file      = $2;
+    }
+
+    return ($volume,$directory,$file);
+}
+
+
+sub splitdir {
+    return split m|/|, $_[1], -1;  # Preserve trailing fields
+}
+
+
+sub catpath {
+    my ($self,$volume,$directory,$file) = @_;
+
+    if ( $directory ne ''                && 
+         $file ne ''                     && 
+         substr( $directory, -1 ) ne '/' && 
+         substr( $file, 0, 1 ) ne '/' 
+    ) {
+        $directory .= "/$file" ;
+    }
+    else {
+        $directory .= $file ;
+    }
+
+    return $directory ;
+}
+
+sub abs2rel {
+    my($self,$path,$base) = @_;
+    $base = $self->_cwd() unless defined $base and length $base;
+
+    ($path, $base) = map $self->canonpath($_), $path, $base;
+
+    my $path_directories;
+    my $base_directories;
+
+    if (grep $self->file_name_is_absolute($_), $path, $base) {
+	($path, $base) = map $self->rel2abs($_), $path, $base;
+
+	my ($path_volume) = $self->splitpath($path, 1);
+	my ($base_volume) = $self->splitpath($base, 1);
+
+	# Can't relativize across volumes
+	return $path unless $path_volume eq $base_volume;
+
+	$path_directories = ($self->splitpath($path, 1))[1];
+	$base_directories = ($self->splitpath($base, 1))[1];
+
+	# For UNC paths, the user might give a volume like //foo/bar that
+	# strictly speaking has no directory portion.  Treat it as if it
+	# had the root directory for that volume.
+	if (!length($base_directories) and $self->file_name_is_absolute($base)) {
+	    $base_directories = $self->rootdir;
+	}
+    }
+    else {
+	my $wd= ($self->splitpath($self->_cwd(), 1))[1];
+	$path_directories = $self->catdir($wd, $path);
+	$base_directories = $self->catdir($wd, $base);
+    }
+
+    # Now, remove all leading components that are the same
+    my @pathchunks = $self->splitdir( $path_directories );
+    my @basechunks = $self->splitdir( $base_directories );
+
+    if ($base_directories eq $self->rootdir) {
+      return $self->curdir if $path_directories eq $self->rootdir;
+      shift @pathchunks;
+      return $self->canonpath( $self->catpath('', $self->catdir( @pathchunks ), '') );
+    }
+
+    my @common;
+    while (@pathchunks && @basechunks && $self->_same($pathchunks[0], $basechunks[0])) {
+        push @common, shift @pathchunks ;
+        shift @basechunks ;
+    }
+    return $self->curdir unless @pathchunks || @basechunks;
+
+    # @basechunks now contains the directories the resulting relative path 
+    # must ascend out of before it can descend to $path_directory.  If there
+    # are updir components, we must descend into the corresponding directories
+    # (this only works if they are no symlinks).
+    my @reverse_base;
+    while( defined(my $dir= shift @basechunks) ) {
+	if( $dir ne $self->updir ) {
+	    unshift @reverse_base, $self->updir;
+	    push @common, $dir;
+	}
+	elsif( @common ) {
+	    if( @reverse_base && $reverse_base[0] eq $self->updir ) {
+		shift @reverse_base;
+		pop @common;
+	    }
+	    else {
+		unshift @reverse_base, pop @common;
+	    }
+	}
+    }
+    my $result_dirs = $self->catdir( @reverse_base, @pathchunks );
+    return $self->canonpath( $self->catpath('', $result_dirs, '') );
+}
+
+sub _same {
+  $_[1] eq $_[2];
+}
+
+sub rel2abs {
+    my ($self,$path,$base ) = @_;
+
+    # Clean up $path
+    if ( ! $self->file_name_is_absolute( $path ) ) {
+        # Figure out the effective $base and clean it up.
+        if ( !defined( $base ) || $base eq '' ) {
+	    $base = $self->_cwd();
+        }
+        elsif ( ! $self->file_name_is_absolute( $base ) ) {
+            $base = $self->rel2abs( $base ) ;
+        }
+        else {
+            $base = $self->canonpath( $base ) ;
+        }
+
+        # Glom them together
+        $path = $self->catdir( $base, $path ) ;
+    }
+
+    return $self->canonpath( $path ) ;
+}
+
+sub _cwd {
+	my $cwd = `pwd`;
+	chomp $cwd;
+	return $cwd;
+}
+
+# Internal method to reduce xx\..\yy -> yy
+sub _collapse {
+    my($fs, $path) = @_;
+
+    my $updir  = $fs->updir;
+    my $curdir = $fs->curdir;
+
+    my($vol, $dirs, $file) = $fs->splitpath($path);
+    my @dirs = $fs->splitdir($dirs);
+    pop @dirs if @dirs && $dirs[-1] eq '';
+
+    my @collapsed;
+    foreach my $dir (@dirs) {
+        if( $dir eq $updir              and   # if we have an updir
+            @collapsed                  and   # and something to collapse
+            length $collapsed[-1]       and   # and its not the rootdir
+            $collapsed[-1] ne $updir    and   # nor another updir
+            $collapsed[-1] ne $curdir         # nor the curdir
+          ) 
+        {                                     # then
+            pop @collapsed;                   # collapse
+        }
+        else {                                # else
+            push @collapsed, $dir;            # just hang onto it
+        }
+    }
+
+    return $fs->catpath($vol,
+                        $fs->catdir(@collapsed),
+                        $file
+                       );
+}
+
+
+1;
diff -uNr perl-5.26.1.orig/cnf/stub/File/Temp.pm perl-5.26.1/cnf/stub/File/Temp.pm
--- perl-5.26.1.orig/cnf/stub/File/Temp.pm	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/stub/File/Temp.pm	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,21 @@
+package File::Temp;
+
+sub tempfile
+{
+	my $patt = shift;
+	my %opts = @_;
+	my $i;
+	my $tmp;
+	local *FH;
+	
+	return unless defined $patt;
+	for($i = 0; $i < 10; $i++) {
+		($tmp = $patt) =~ s{X+}{rand()}e;
+		next unless sysopen(FH, $tmp, 01 | 0100 | 0200);	# O_WRONLY | O_CREAT | O_EXCL
+		return wantarray ? (\*FH, $tmp) : \*FH;
+	}
+
+	return;
+}
+
+1;
diff -uNr perl-5.26.1.orig/cnf/stub/IPC/Cmd.pm perl-5.26.1/cnf/stub/IPC/Cmd.pm
--- perl-5.26.1.orig/cnf/stub/IPC/Cmd.pm	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/cnf/stub/IPC/Cmd.pm	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,8 @@
+package IPC::Cmd;
+
+sub can_run
+{
+	die(@_);
+}
+
+1;
diff -uNr perl-5.26.1.orig/configure perl-5.26.1/configure
--- perl-5.26.1.orig/configure	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/configure	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,61 @@
+#!/bin/sh
+
+earlydie() { echo "$@" >&2; exit 1; }
+
+root=${0%/*}; test -z "$root" && root=. # dirname($0)
+
+test -f "$root/MANIFEST" || earlydie "Can't find MANIFEST, perl-cross is not deployed properly."
+
+abs=`echo "$root" | sed -e 's!^\(.\).*!\1!'`
+test "$abs" != '/' && unset abs
+
+if [ -n "$root" -a "$root" != "." -a ! -f "MANIFEST" ]; then
+	echo "No MANIFEST found. Assuming out-of-source build."
+	echo "Symlinking source files..."
+
+	# perl distribution files are all listed in MANIFEST
+	cat "$root/MANIFEST" | sed -e 's/\s.*//' | while read i; do
+		d=${i%/*}; test -z "$d" && d=. # dirname($i)
+		mkdir -p "$d"
+		test "$d" != "." && u=`echo "$d" | sed -e 's![^/]\+!..!g' -e 's!$!/!'` || u=''
+		test -n "$abs" && relroot="$root" || relroot="$u$root"
+		ln -sf "$relroot/$i" "$i" || earlydie "Symlinking failed."
+	done
+	
+	# perl-cross files are not in MANIFEST
+	for i in TESTPACK.px extlibs statars TestInit.pm.testpack \
+			make_ext_Makefile.pl miniperl_top Makefile.config.SH \
+			Makefile configure; do
+		ln -sf "$root/$i" "./$i" || earlydie "Symlinking failed."
+	done
+
+	for i in x2p/Makefile utils/Makefile; do
+		test -n "$abs" && relroot="$root" || relroot="../$root"
+		ln -sf "$relroot/$i" "$i" || earlydie "Symlinking failed."
+	done
+
+	# cnf is a special case because we need cnf/diffs to be
+	# a proper directory to store locks there
+	mkdir cnf
+	for i in "$root/cnf/"*; do
+		bn=${i##*/}
+		test -n "$abs" && rel="" || rel="../"
+		test "$bn" != 'diffs' && ln -s "$rel$i" "cnf/$bn"
+	done
+	cp -a "$root/cnf/diffs" cnf/
+
+	# Make extra sure MANIFEST gets symlinked
+	test -f "MANIFEST" || ln -sf "$root/MANIFEST" "./MANIFEST"
+
+	# Dereference any files that will be patched with crosspatch.
+	# A better alternative is patch --follow-symlinks,
+	# but --follow-symlinks is not widely supported and even when it is,
+	# man page discourages its use.
+	sed -ne '/^+++ /{s/^+++ //;s/\s.*//;s@^[^/]\+/@@;p}' cnf/diffs/* | while read i; do
+		cp -a "$i" "$i.tmp" && rm -f "$i" && cp "$i.tmp" "$i" && rm -f "$i.tmp"
+	done
+
+	echo "Symlinking done, proceeding with configure."
+fi
+
+cnf/configure "$@"
diff -uNr perl-5.26.1.orig/extlibs perl-5.26.1/extlibs
--- perl-5.26.1.orig/extlibs	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/extlibs	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,16 @@
+#!./miniperl
+
+foreach(@ARGV) {
+	s!::!/!g;
+	$_ = "lib/auto/" . $_ . "/extralibs.ld";
+	next unless -f $_;
+	open(EL, '<', $_) || next;
+	@l = split /\s+/, <EL>;
+	@l = grep { !$seen{$_} } @l;
+	map { $seen{$_} = 1; } @l;
+	push(@libs, @l);
+	close(EL);
+}
+$libs = join ' ', @libs;
+$libs =~ s/\s+/ /g;
+print "$libs\n";
diff -uNr perl-5.26.1.orig/make_ext_Makefile.pl perl-5.26.1/make_ext_Makefile.pl
--- perl-5.26.1.orig/make_ext_Makefile.pl	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/make_ext_Makefile.pl	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,117 @@
+#!./miniperl
+
+# This script creates a minimal Makefile.PL for modules
+# that lack it. Typical call order:
+#	$(MINIPERL) make_ext_Makefile cpan/Archive-Extract/Makefile.PL
+# This was a part of make_ext.pl. Check that file for the correct way
+# of writing Makefiles.
+
+# I have a strong impression that there's something really really wrong
+# with the very problem this script tries to solve.
+# OTOH, given the context, any hacks are ok as long as they yield correct
+# results for the set of Makefile.PL-less standard modules.
+$spec = shift;
+$spec =~ s'/Makefile\.PL$'';	# cpan/Archive-Extract
+$fromname = get_fromname($spec);
+
+$dirname = $spec;
+$dirname =~ s!^[^/]+/!!;
+$dirname =~ s!-!::!g;
+$mname = $dirname;
+
+if($mname eq 'podlators') {
+	warn "Creating specific $spec/Makefile.PL for podlators\n";
+	$fromname = 'VERSION';
+	$key = 'DISTNAME';
+	$value = 'podlators';
+	$mname = 'Pod';
+} else {
+	warn "Creating $spec/Makefile.PL for $mname\n";
+	$key = 'ABSTRACT_FROM';
+	($value = $fromname) =~ s/\.pm\z/.pod/;
+	$value = $fromname unless -e $value;
+}
+
+open my $fh, '>', "$spec/Makefile.PL"
+	or die "Can't open $spec/Makefile.PL for writing: $!";
+printf $fh <<'EOM', $0, $mname, $fromname, $key, $value;
+#-*- buffer-read-only: t -*-
+
+# This Makefile.PL was written by %s.
+# It will be deleted automatically by make realclean
+
+use strict;
+use ExtUtils::MakeMaker;
+
+# This is what the .PL extracts to. Not the ultimate file that is installed.
+# (ie Win32 runs pl2bat after this)
+
+# Doing this here avoids all sort of quoting issues that would come from
+# attempting to write out perl source with literals to generate the arrays and
+# hash.
+my @temps = 'Makefile.PL';
+foreach (glob('scripts/pod*.PL')) {
+    # The various pod*.PL extractors change directory. Doing that with relative
+    # paths in @INC breaks. It seems the lesser of two evils to copy (to avoid)
+    # the chdir doing anything, than to attempt to convert lib paths to
+    # absolute, and potentially run into problems with quoting special
+    # characters in the path to our build dir (such as spaces)
+    require File::Copy;
+
+    my $temp = $_;
+    $temp =~ s!scripts/!!;
+    File::Copy::copy($_, $temp) or die "Can't copy $temp to $_: $!";
+    push @temps, $temp;
+}
+
+my $script_ext = $^O eq 'VMS' ? '.com' : '';
+my %%pod_scripts;
+foreach (glob('pod*.PL')) {
+    my $script = $_;
+    s/.PL$/$script_ext/i;
+    $pod_scripts{$script} = $_;
+}
+my @exe_files = values %%pod_scripts;
+
+WriteMakefile(
+    NAME          => '%s',
+    VERSION_FROM  => '%s',
+    %-13s => '%s',
+    realclean     => { FILES => "@temps" },
+    (%%pod_scripts ? (
+        PL_FILES  => \%%pod_scripts,
+        EXE_FILES => \@exe_files,
+        clean     => { FILES => "@exe_files" },
+    ) : ()),
+);
+
+# ex: set ro:
+EOM
+close $fh or die "Can't close Makefile.PL: $!";
+
+
+# Find an actual module file name, relative to its directory
+#	"cpan/Archive-Extract" -> "lib/Archive/Extract.pm"
+# (implying existance of cpan/Archive-Extract/lib/Archive/Extract.pm)
+sub get_fromname
+{
+	my $spec = shift;
+	my($base1, $base2, $leaf1, $leaf2);
+
+	($base1 = $spec) =~ s!^(cpan|ext|dist|ext)/!!;
+	($base2 = $base1) =~ s!-!/!g;
+	($leaf1 = $spec) =~ s!.*/!!;
+	($leaf2 = $spec) =~ s!.*-!!;
+
+	return $leaf1 if $leaf1 eq 'podlators';
+
+	my @locations = ("$leaf1.pm", "$leaf2.pm", "lib/$base1/$leaf1.pm", "lib/$base2.pm");
+	unshift @locations, 'lib/IO/Compress/Base.pm' if $base1 eq 'IO-Compress';	# %$#%&$#%!!
+
+	foreach(@locations) {
+		#warn "\tTrying $spec/$_\n";
+		return $_ if -f "$spec/$_";
+	}
+
+	die "$spec: can't find module source\n";
+}
diff -uNr perl-5.26.1.orig/miniperl_top perl-5.26.1/miniperl_top
--- perl-5.26.1.orig/miniperl_top	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/miniperl_top	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,51 @@
+#!/bin/sh
+
+# This script can be used to run Makefile.PL 
+# Note that is relies on $0 to tell where lib/ is; typically
+#   you should call it as ../../miniperl_top
+# This script replaces lib/buildcustomize.pl functionality
+# Check write_buildcustomize.pl for the list of modules to include here
+
+top=${0%/*}; test -z "$top" && top=.
+
+if [ ! -f $top/miniperl ]; then
+	echo "$0: no $top/miniperl found; build it before using miniperl_top"
+	exit 1
+fi
+if [ -f $top/lib/buildcustomize.pl ]; then
+	# buildcustomize.pl silently overrides all -I options below
+	echo "$0: remove $top/lib/buildcustomize.pl before running miniperl_top" >&2
+	exit 1
+fi
+
+# Some of the modules (cpan/podlators) fail to build when $top is relative.
+# This is unbelievably ugly and should be removed somehow.
+top=$(cd $top; pwd)
+
+exec $top/miniperl\
+	-I$top/cnf/stub\
+	-I$top/cnf/cpan\
+	-I$top/lib\
+	-I$top/cpan/AutoLoader/lib\
+	-I$top/dist/Exporter/lib\
+	-I$top/dist/Cwd\
+	-I$top/dist/Cwd/lib\
+	-I$top/cpan/ExtUtils-Command/lib\
+	-I$top/cpan/ExtUtils-Install/lib\
+	-I$top/cpan/ExtUtils-MakeMaker/lib\
+	-I$top/dist/ExtUtils-MakeMaker/lib\
+	-I$top/cpan/ExtUtils-Manifest/lib\
+	-I$top/cpan/File-Path/lib\
+	-I$top/ext/File-Find/lib\
+	-I$top/ext/re\
+	-I$top/cpan/ExtUtils-Constant/lib\
+	-I$top/dist/ExtUtils-ParseXS/lib\
+	-I$top/dist/constant/lib\
+	-I$top/cpan/Getopt-Long/lib\
+	-I$top/cpan/Text-Tabs/lib\
+	-I$top/dist/Carp/lib\
+	-I$top/cpan/podlators/lib\
+	-I$top/cpan/parent/lib\
+	-I$top/cpan/version/lib\
+	-I$top/dist/Pod-Simple/lib\
+	"$@"
diff -uNr perl-5.26.1.orig/statars perl-5.26.1/statars
--- perl-5.26.1.orig/statars	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/statars	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,18 @@
+#!./miniperl
+
+$lib = 'lib/auto/';
+foreach(@ARGV) {
+	$m = $_;
+	s!::!/!g;
+	@f = split m!/!;
+	$f = pop @f;
+	undef $A;
+	foreach $a ($lib.join('/', @f, $f, "$f.a"), $lib."$f/$f.a") {
+		next unless -f $a;
+		$A = $a; last;
+	}
+	die "Can't find .a file for $m\n" unless -f $A;
+	push @a, $A;
+}
+print join ' ', @a;
+print "\n";
diff -uNr perl-5.26.1.orig/utils/Makefile perl-5.26.1/utils/Makefile
--- perl-5.26.1.orig/utils/Makefile	1969-12-31 18:00:00.000000000 -0600
+++ perl-5.26.1/utils/Makefile	2017-11-10 10:51:27.000000000 -0600
@@ -0,0 +1,27 @@
+default: all
+
+TOP = ..
+include $(TOP)/Makefile.config
+PERL = $(TOP)/miniperl_top
+
+plextract = $(patsubst %.PL,%,\
+	        $(filter-out Makefile.PL,$(wildcard *.PL)) )
+
+all: $(plextract)
+
+$(plextract): %: %.PL ../config.sh
+	$(PERL) $<
+
+$(perlname)bug: ../patchlevel.h
+
+splain:	../lib/diagnostics.pm
+
+zipdetails:	zipdetails.PL ../config.sh
+
+pod2html:	pod2html.PL ../config.sh ../ext/Pod-Html/bin/pod2html
+
+clean:
+	rm -f $(plextract)
+
+#install:
+#	for i in $(plextract); do install -m 0755 -D $$i $(scriptdir)/$$i; done
